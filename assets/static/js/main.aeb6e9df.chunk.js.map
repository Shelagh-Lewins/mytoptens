{"version":3,"sources":["modules/errors.js","modules/formatErrorMessages.js","modules/fetchAPI.js","modules/isEmpty.js","modules/auth.js","constants/index.js","modules/findObjectByProperty.js","modules/item.js","modules/list.js","modules/page.js","modules/rootReducer.js","store.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Welcome.js","components/Login.js","components/ListsList.js","components/SetListIsPublic.js","modules/permissions.js","components/ListSummary.js","containers/ListsPage.js","components/FlashMessage.js","containers/Home.js","containers/CreateList.js","components/EditableTextField.js","components/Item.js","components/ItemsPage.js","components/OrganizerList.js","components/Organizer.js","containers/ListDetail.js","components/Account.js","components/ForgotPassword.js","components/ChangePassword.js","components/Verified.js","containers/App.js","serviceWorker.js","index.js"],"names":["getErrors","error","type","payload","clearErrors","updeep","require","initialState","formatErrorMessages","errors","messageArray","Object","keys","forEach","key","push","map","item","join","fetchAPI","_ref","url","data","_ref$method","method","_ref$useAuth","useAuth","_ref$headers","headers","Authorization","concat","store","getState","auth","user","token","fetch","body","then","response","ok","contentType","get","includes","json","catch","Promise","reject","Error","message","text","html","page_type","status","isEmpty","value","undefined","length","trim","LOGOUT_USER_COMPLETE","setCurrentUser","dispatch","localStorage","setItem","setAuthToken","logoutUser","history","removeItem","logout user","getUserInfo","setUserInfo","username","email","id","slug","emailVerified","email_verified","get user info","forgotPasswordEmailNotSent","forgotPassword","formData","FormData","name","append","request password reset email","passwordNotChanged","changePasswordComplete","confirmEmailNotSent","sendConfirmationEmail","isLoading","isAuthenticated","forgotPasswordEmailSent","resetPasswordComplete","confirmEmailSent","LIST_IS_PUBLIC_VALUES","LIST_IS_PUBLIC_TEXTS","MAX_ITEMS_IN_LIST","findObjectByProperty","parentObject","property","i","childObject","CREATE_ITEM_SUCCEEDED","UPDATE_ITEM_SUCCEEDED","MOVE_ITEM_UP_SUCCEEDED","updateItem","itemId","propertyName","Content-Type","JSON","stringify","defineProperty","updateItemSucceeded","update item","moveItemUp","items","move item up error ","moveItemDown","_ref2","things","listId","list_id","order","item_below_id","list","initialItemsState","organizerData","getOrganizerItemsByList","state","itemsByList","itemsArray","objectSpread","parent_item","parentItem","childListId","RECEIVE_ENTITIES","FETCH_LISTS_STARTED","FETCH_LISTS_FAILED","FETCH_LIST_BY_SLUG_STARTED","FETCH_LIST_BY_SLUG_FAILED","FILTER_LISTS","CREATE_LIST_STARTED","CREATE_LIST_SUCCEEDED","DELETE_LIST_SUCCEEDED","SET_LIST_IS_PUBLIC_SUCCEEDED","UPDATE_LIST_SUCCEEDED","RECEIVE_ORGANIZER_DATA","FETCH_ORGANIZER_DATA_STARTED","FETCH_ORGANIZER_DATA_FAILED","itemSchema","schema","Entity","listSchema","receiveEntities","entities","fetchLists","normalizedData","normalize","fetch lists","fetchListBySlug","createList","create list","updateList","updateListSucceeded","deleteList","deleteListSucceeded","delete list","setListIsPublic","is_public","setListIsPublicSucceeded","set list is public","fetchOrganizerData","userId","fetch my list names","initialListsState","getFilteredLists","createSelector","page","searchTerm","lists","filter","match","RegExp","getFilteredPublicLists","grouped","getMyGroupedAndFilteredLists","created_by","getOrganizerLists","sort","a","b","localeCompare","getItemsForList","listItems","childList","combineReducers","arguments","action","toConsumableArray","constant","confirmEmailAlreadyVerified","omit","updateIn","update","description","modified_by","modified_at","newItems","itemsObject","composeEnhancers","composeWithDevTools","createStore","rootReducer","applyMiddleware","thunk","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","createElement","className","Link","to","onClick","onLogout","bind","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","Component","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","assertThisInitialized","formLength","checkValidity","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","handleSubmit","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","node","setCustomValidity","classNames","assign","noValidate","children","Register","password","password_confirm","handleInputChange","target","password1","password2","registerUser","nextProps","Container","ValidatedForm_ValidatedForm","Row","Col","md","lg","Label","for","Input","required","onChange","minLength","pattern","registration","style","display","Welcome","Login","loginUser","authentication","ListsList","headerText","SetListIsPublic","onIsPublicChange","canViewList","identifier","canEditList","canCreateList","ListSummary","canEdit","permissions","sm","showCreatedBy","created_by_username","src_components_SetListIsPublic","onDeleteList","ListsPage","onSearch","onAddList","getListsToShow","listsList","ListsToShow","topLevelListsOnly","handleTabClick","selectedTab","setListSetURL","listset","URLSearchParams","location","search","prevProps","_this$props","publicLists","listsToShow","components_ListsList","src_components_ListSummary","_this$props2","myLists","index","listsByIsPublic","URL","pathname","renderMyLists","renderPublicLists","check","defaultChecked","handleTopLevelListsChange","renderTabs","FlashMessage","aria-hidden","Home","listReducer","confirm","onCloseFlashMessage","src_containers_ListsPage","onCreateList","CreateList","newList","cancel","urlParams","parentItemId","parentItemName","parentListName","parentListSlug","newItem","elements","renderItemInputs","EditableTextField","fakeEvent","dataset","initialValue","toggleInput","showInput","overflowActive","textarea","expanded","element","textElement","offsetHeight","scrollHeight","isOverflowActive","keyCode","which","classList","contains","newShowInputValue","isEditing","inputElement","handleNewValue","showMoreButton","onKeyUp","moreButtonText","tabIndex","ref","react_markdown_default","escapeHtml","source","toggleMore","label","autoFocus","data-state","data-entityid","renderValue","Item","onCreateChildList","onMoveUp","onMoveItemUp","onMoveDown","onMoveItemDown","isEditingName","showDescription","canCreateChildList","canViewChildList","showUp","showDown","src_components_EditableTextField","setIsEditingName","ItemsPage","itemsReducer","entityid","split","toggleForm","showNewItemForm","src_components_Item","renderItemsList","OrganizerList","showItems","onSelectItem","childlistid","selectedItemOrder","parseInt","selectedListId","itemOrganizerData","childListElm","isSelectedItem","listOrganizerData","find","data-order","data-childlistid","showItemsButtonText","onShowItems","renderItems","Organizer","componentDidUpdate","parentListId","onClickOrganize","showOrganizer","onClickCancel","onClickDone","selectedItemChildListId","setParentItem","onSelectParentItem","indexOf","_this3","components_OrganizerList","controls","renderLists","ListDetails","getListData","params","getOrganizerData","parentList","canView","list_name","list_description","showPrivacyWarning","privacyWarningText","src_components_Organizer","thisListItems","components_ItemsPage","content","renderPage","ownProps","parentItemAndList","itemReducer","Account","email_status","ForgotPassword","ChangePassword","old_password","new_password","new_password_confirm","new_password1","new_password2","changePassword","Verified","getItem","mytoptensJwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","window","hostname","navigator","serviceWorker","ready","unregister","render","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.aeb6e9df.chunk.js","sourcesContent":["// errorReducer.js\n\nconst GET_ERRORS = 'GET_ERRORS';\nconst CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const getErrors = error => {\n\t// error is an object, e.g. { 'registration': error.message }\n\treturn {\n\t\t'type': GET_ERRORS,\n\t\t'payload': error,\n\t};\n};\n\nexport const clearErrors = () => {\n\treturn {\n\t\t'type': CLEAR_ERRORS,\n\t};\n};\n\nvar updeep = require('updeep');\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\t// ensure we have an array of strings to allow multiple errors to be displayed\n\t\t\tlet errors = {};\n\n\t\t\tObject.keys(action.payload).forEach((key) => {\n\t\t\t\tif (typeof action.payload[key] === 'string') {\n\t\t\t\t\t// a string is simply copied\n\t\t\t\t\terrors[key] = [action.payload[key]];\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = [...action.payload[key]];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn updeep(errors, {}); // clear any existing errors\n\t\t}\n\n\t\tcase CLEAR_ERRORS: {\n\t\t\treturn {};\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// join arrays of error messages from different errors, into a single string.\n// it is expected that there will only ever be one type of error, e.g. 'register', but the object is parsed to be on the safe side.\n/*\n{ {'register': [\n\t\t'email already in use',\n\t\t'username already in use'\n\t\t]},\n\t{'login': [\n\t\t'could not log in'\n\t]\n}\n*/\n\nexport default function (errors) {\n\tlet messageArray = [];\n\tObject.keys(errors).forEach((key) => {\n\t\tif (typeof errors[key] === 'string') {\n\t\t\tmessageArray.push(errors[key]); // plain string error\n\t\t} else { // arary of errors\n\t\t\terrors[key].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\tmessageArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst message = messageArray.join(' ');\n\n\treturn message;\n};\n","// uses fetch to get or post data.\n// passes up useful errors to the calling function.\n// set useAuth to true for validating logged-in user: token will be sent in header\nimport store from '../store';\nimport formatErrorMessages from '../modules/formatErrorMessages';\n\nexport default function fetchAPI({ url, data, method = 'GET', useAuth = false, headers = {} }) {\n\tif (useAuth) {\n\t\theaders.Authorization = `Token ${store.getState().auth.user.token}`;\n\t}\n\n\treturn fetch(url, { headers, 'method': method, 'body': data })\n\t\t.then(response => {\n\t\t\t// fetch returns ok true / false in most situations\n\t\t\t// true is a successful response\n\t\t\tif (response.ok) {\n\t\t\t\tconst contentType = response.headers.get('Content-Type') || '';\n\n\t\t\t\tif (contentType.includes('application/json')) {\n\t\t\t\t\treturn response.json().catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('Invalid JSON: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (contentType.includes('text/html')) {\n\t\t\t\t\treturn response.text().then(html => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'page_type': 'generic',\n\t\t\t\t\t\t\t'html': html\n\t\t\t\t\t\t};\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('HTML error: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// ok == false means some problem to display\n\t\t\t\t// even though no error was returned\n\t\t\t\tif (response.status === 404) {\n\t\t\t\t\treturn Promise.reject(new Error('Page not found: ' + url));\n\t\t\t\t}\n\n\t\t\t\tif (response.status === 500) {\n\t\t\t\t\treturn Promise.reject(new Error('Internal server error: ' + url));\n\t\t\t\t}\n\n\t\t\t\treturn response.json().then(response => {\n\t\t\t\t\t// the server rejected the request, e.g. because of a wrong password, we want to display the reason\n\t\t\t\t\t// the information is contained in the json()\n\t\t\t\t\t// there may be more than one error, so join them into a single string.\n\t\t\t\t\t// multiline display would be more elegant but this will do for now and makes all errors consistent (one message string)\n\n\t\t\t\t\treturn Promise.reject(new Error(formatErrorMessages(response))\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\t// fetch returned an error\n\t\t\treturn Promise.reject(new Error(error.message));\n\t\t});\n};\n","// check for a null, empty, undefined object\n\nconst isEmpty = (value) => {\n\treturn (\n\t\tvalue === undefined ||\n\t\tvalue === null ||\n\t\t(typeof value === 'object' && Object.keys(value).length === 0) ||\n\t\t(typeof value === 'string' && value.trim().length === 0)\n\t);\n};\n\nexport default isEmpty;\n","// authReducer.js\n\nimport store from '../store';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors, clearErrors } from '../modules/errors';\nimport isEmpty from '../modules/isEmpty';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\nexport const PASSWORD_NOT_CHANGED = 'PASSWORD_NOT_CHANGED';\nexport const CHANGE_PASSWORD_COMPLETE = 'CHANGE_PASSWORD_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_NOT_SENT = 'CONFIRM_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_SENT = 'CONFIRM_EMAIL_SENT';\nexport const CONFIRM_EMAIL_ALREADY_VERIFIED = 'CONFIRM_EMAIL_ALREADY_VERIFIED';\n\n// Side effects Services\nexport const getAuthToken = () => {\n\treturn localStorage.getItem('mytoptensJwtToken');\n};\n\nfunction setAuthToken(token) {\n\tlocalStorage.setItem('mytoptensJwtToken', token);\n\treturn;\n}\n\nfunction removeAuthToken() {\n\tlocalStorage.removeItem('mytoptensJwtToken');\n\treturn;\n}\n\nexport const registerUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/registration/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t}).then(response => {\n\t\thistory.push('/welcome');\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'registration': error.message }));\n\t});\n};\n\nexport const loginUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/login/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\treturn dispatch(setCurrentUser(response.key));\n\t}).then(() => {\n\t\thistory.push('/');\n\t\t// after store has been updated with token, we can query the server for current user info\n\t\treturn store.dispatch(getUserInfo());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'authentication': 'Unable to log in with the provided credentials, please try again.' }));\n\t});\n};\n\nexport const setCurrentUser = (token, dispatch) => {\n\tsetAuthToken(token);\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': { token },\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\tdispatch(clearErrors());\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/logout/',\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\tremoveAuthToken();\n\t\treturn dispatch(logoutUserComplete());\n\t}).then(() => {\n\t\t// ensure token is removed from localStorage and store before redirecting\n\t\t// history.push('/');\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'logout user': 'Unable to logout' }));\n\t});\n};\n\n///////////////////////////////\n// get user info\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = () => (dispatch) => {\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/user/',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t}).then(user => {\n\t\treturn dispatch(setUserInfo({\n\t\t\t'username': user.username,\n\t\t\t'email': user.email,\n\t\t\t'id': user.id,\n\t\t\t'slug': user.slug,\n\t\t\t'emailVerified': user.email_verified,\n\t\t}));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'get user info': 'Unable to get user info' }));\n\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/reset/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\t return dispatch(forgotPasswordEmailSent());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'request password reset email': `Unable to send a password reset email. It is likely that the email address ${email} is not associated with a registered user` }));\n\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n//////////////////////////////////\n// change password\nexport const changePassword = (data) => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(passwordNotChanged());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in data) {\n\t\tformData.append(name, data[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/change/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tdispatch(changePasswordComplete());\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'changePassword': error.message }));\n\t});\n};\n\nexport const passwordNotChanged = token => {\n\treturn {\n\t\t'type': PASSWORD_NOT_CHANGED,\n\t};\n};\n\nexport const changePasswordComplete = (token) => {\n\treturn {\n\t\t'type': CHANGE_PASSWORD_COMPLETE,\n\t};\n};\n\n//////////////////////////////////\n// Email confirmation\nexport const confirmEmailNotSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_NOT_SENT\n\t};\n};\n\nexport const confirmEmailSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_SENT\n\t};\n};\n\nexport const confirmEmailAlreadyVerified = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_ALREADY_VERIFIED\n\t};\n};\n\n//////////////////////////////////\n\nexport const sendConfirmationEmail = () => (dispatch) => {\n\tdispatch(clearErrors());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/sendconfirmationemail/',\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tif (response.message === 'Email confirmation sent') {\n\t\t\treturn dispatch(confirmEmailSent());\n\t\t} else if (response.message === 'Email already verified') {\n\t\t\treturn dispatch(confirmEmailAlreadyVerified());\n\t\t}\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'sendConfirmationEmail': error.message }));\n\t});\n};\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isLoading': false,\n\t'isAuthenticated': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'changePasswordComplete': false,\n\t'confirmEmailSent': false,\n\t'user': {}\n};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'isLoading': true,\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user info\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user info\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': false,\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'slug': action.payload.slug,\n\t\t\t\t\t'id': action.payload.id,\n\t\t\t\t\t'emailVerified': action.payload.emailVerified,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// forgot password\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase PASSWORD_NOT_CHANGED: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': false,\n\t\t\t\t'errors': {}\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CHANGE_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// confirm email\n\t\tcase CONFIRM_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': false,\n\t\t\t\t'confirmEmailAlreadyVerified': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_ALREADY_VERIFIED: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailAlreadyVerified': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","export const LIST_IS_PUBLIC_VALUES = [false, true];\nexport const LIST_IS_PUBLIC_TEXTS = ['Private', 'Public'];\nexport const MAX_ITEMS_IN_LIST = 10;\n","export default function findObjectByProperty({ parentObject, property, value }) {\n\t// e.g. find a list in the store based on its slug\n\t// it feels like there ought to be a smarter way to do this!\n\t// but this does work, and stops once the object is found\n\tconst keys = Object.keys(parentObject);\n\n\tfor (let i=0; i<keys.length; i++) {\n\t\tlet childObject = parentObject[keys[i]];\n\t\tif (childObject[property] === value) {\n\t\t\treturn childObject;\n\t\t}\n\t}\n\n\treturn;\n}\n","// import { createSelector } from 'reselect';\n// import { RECEIVE_ENTITIES,  } from '../modules/list';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport store from '../store';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tRECEIVE_ENTITIES,\n\tFETCH_LIST_BY_SLUG_STARTED,\n\tRECEIVE_ORGANIZER_DATA,\n} from './list';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const CREATE_ITEM_REQUESTED = 'CREATE_ITEM_REQUESTED';\nexport const CREATE_ITEM_SUCCEEDED = 'CREATE_ITEM_SUCCEEDED';\nexport const UPDATE_ITEM_SUCCEEDED = 'UPDATE_ITEM_SUCCEEDED';\n// export const DELETE_ITEM_SUCCEEDED = 'DELETE_ITEM_SUCCEEDED';\nexport const MOVE_ITEM_UP_SUCCEEDED = 'MOVE_ITEM_UP_SUCCEEDED';\n\n////////////////////////////////////\n// create item\nexport const createItem = item => dispatch => {\n\tdispatch(createItemRequested());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/item/',\n\t\t'data': JSON.stringify(item),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\treturn dispatch(createItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create item': error.message }));\n\t});\n};\n\nexport function createItemRequested() {\n\treturn {\n\t\t'type': 'CREATE_ITEM_REQUESTED',\n\t};\n}\n\nexport function createItemSucceeded(item) {\n\treturn {\n\t\t'type': 'CREATE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titem\n\t\t}\n\t};\n}\n\n////////////////////////////////////\n// update item\nexport const updateItem = (itemId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/item/${itemId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateItemSucceeded(response) {\n\treturn {\n\t\t'type': UPDATE_ITEM_SUCCEEDED,\n\t\t'payload': response,\n\t};\n}\n\n//////////////////////////////////\n// move item up\nexport const moveItemUp = ({ itemId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/item/${itemId}/moveup/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(moveItemUpSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'move item up error ': error.message }));\n\t});\n};\n\nexport const moveItemDown = ({ itemId }) => dispatch => {\n\t// to move an item down, we move the item below up\n\t// find the item\n\tconst item = store.getState().item.things[itemId];\n\n\t// find its parent list\n\tconst listId = item.list_id;\n\n\t// find the item's order\n\tconst order = item.order;\n\n\t// find the item below it in the parent list\n\tconst item_below_id = store.getState().list.things[listId].item[order];\n\n\tdispatch(moveItemUp({ 'itemId': item_below_id }));\n};\n\nexport function moveItemUpSucceeded(items) {\n\treturn {\n\t\t'type': 'MOVE_ITEM_UP_SUCCEEDED',\n\t\t'payload': {\n\t\t\titems,\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// delete item\n/* export const deleteItem = ({ itemId, listId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/item/${itemId}/`,\n\t\t'method': 'DELETE',\n\t}).then(response => {\n\t\treturn dispatch(deleteItemSucceeded({ itemId, listId }));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete item': error.message }));\n\t});\n};\n\nexport function deleteItemSucceeded({ itemId, listId }) {\n\treturn {\n\t\t'type': 'DELETE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titemId,\n\t\t\tlistId\n\t\t}\n\t};\n} */\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialItemsState = {\n\t'things': {},\n\t'isLoading': false,\n\t'error': null,\n\t'organizerData': {},\n};\n\n/////////////////////////////\n// organizer data\nexport const getOrganizerItemsByList = state => {\n\t// return an object containing all items, keyed by parent list id\n\tlet itemsByList = {};\n\n\t// find the items for each list\n\tObject.keys(state.list.organizerData).map(listId => { // eslint-disable-line array-callback-return\n\t\tconst list = state.list.organizerData[listId];\n\n\t\tlet itemsArray = [];\n\n\t\tfor (let i=0; i<list.item.length; i++) {\n\t\t\tlet item = { ...state.item.organizerData[list.item[i]] };\n\t\t\titemsArray.push(item);\n\t\t}\n\n\t\titemsByList[list.id] = itemsArray;\n\t});\n\n\t// note the parent_item, if any, of each list\n\t// add the list's id to the item as childListId\n\tObject.keys(state.list.organizerData).map(listId => { // eslint-disable-line array-callback-return\n\t\tconst list = state.list.organizerData[listId];\n//console.log('list ', list.name);\n\t\tif (list.parent_item) {\n\t\t\t//console.log('list.parent item ', list.parent_item);\n\t\t\t//const itemsArray = itemsByList[list.id];\n\t\t\tconst parentItem = state.item.organizerData[list.parent_item];\n\t\t\t//console.log('parent item ', parentItem);\n\t\t\tif (parentItem) {\n\t\t\t\t//const parentItemList = itemsByList[parentItem.list_id];\n\n\t\t\t\titemsByList[parentItem.list_id][parentItem.order-1].childListId = list.id;\n\t\t\t\t\n\t\t\t\t//parent_item.childList = { ...list };\n\t\t\t}\n\t\t}\n\t});\n\n\treturn itemsByList;\n};\n\n/////////////////////////////\n// state updates\n\nexport default function item(state = initialItemsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialItemsState, {});\n\t\t}\n\t\t\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\n\t\t\tif (entities && entities.item) {\n\t\t\t\treturn updeep({ 'things': entities.item, 'isLoading': false }, state);\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'things': updeep.constant({}), // remove all existing items\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\t\t\treturn updeep({ 'things': { [item.id]: item } }, state);\n\t\t}\n\n\t\t/* case DELETE_ITEM_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t} */\n\n\t\tcase UPDATE_ITEM_SUCCEEDED: {\n\t\t\t// update editable properties\n\t\t\tconst update = {\n\t\t\t\t'name': action.payload.name,\n\t\t\t\t'description': action.payload.description,\n\t\t\t\t'modified_at': action.payload.modified_at,\n\t\t\t\t'order': action.payload.order,\n\t\t\t};\n\n\t\t\treturn updeep({ 'things': { [action.payload.id]: update } }, state);\n\t\t}\n\n\t\tcase MOVE_ITEM_UP_SUCCEEDED: {\n\t\t\tconst itemsArray = action.payload.items; // array containing the two items that have been swapped\n\n\t\t\tlet itemsObject = {};\n\t\t\titemsArray.map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\titemsObject[item.id] = item;\n\t\t\t});\n\t\t\treturn updeep({ 'things': itemsObject }, state);\n\t\t}\n\n\t\tcase RECEIVE_ORGANIZER_DATA: {\n\t\t\tconst { entities } = action.payload;\n\n\t\t\tif (entities && entities.item) {\n\t\t\t\treturn updeep({ 'organizerData': entities.item, 'isLoading': false }, state);\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n// all items, for selector to use\nexport const getItems = state => state.item.things;\n\n//// not currently used but left in as an example of sorting list items by order\n// items belonging to the current list\n/* export const sortedItems = createSelector(\n\t[getItems],\n\t(items) => {\n\t\tlet listItems = (Object.keys(items).map(id => {\n\t\t\treturn items[id];\n\t\t})).sort(function(a, b){\n\t\t\treturn a.order - b.order; // sort to index order\n\t\t});\n\n\t\treturn listItems;\n\t}\n); */\n\n","import { createSelector } from 'reselect';\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport findObjectByProperty from './findObjectByProperty';\nimport { normalize, schema } from 'normalizr';\nimport store from '../store';\n\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tCREATE_ITEM_SUCCEEDED,\n\t// DELETE_ITEM_SUCCEEDED,\n\tMOVE_ITEM_UP_SUCCEEDED,\n} from './item';\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const RECEIVE_ENTITIES = 'RECEIVE_ENTITIES';\nexport const FETCH_LISTS_STARTED = 'FETCH_LISTS_STARTED';\nexport const FETCH_LISTS_FAILED = 'FETCH_LISTS_FAILED';\nexport const FETCH_LIST_BY_SLUG_STARTED = 'FETCH_LIST_BY_SLUG_STARTED';\nexport const FETCH_LIST_BY_SLUG_FAILED = 'FETCH_LISTS_FAILED';\nexport const FILTER_LISTS = 'FILTER_LISTS';\nexport const CREATE_LIST_STARTED = 'CREATE_LIST_STARTED';\nexport const CREATE_LIST_SUCCEEDED = 'CREATE_LIST_SUCCEEDED';\nexport const DELETE_LIST_SUCCEEDED = 'DELETE_LIST_SUCCEEDED';\nexport const SET_LIST_IS_PUBLIC_SUCCEEDED = 'SET_LIST_IS_PUBLIC_SUCCEEDED';\nexport const UPDATE_LIST_SUCCEEDED = 'UPDATE_LIST_SUCCEEDED';\n\nexport const RECEIVE_ORGANIZER_DATA = 'RECEIVE_ORGANIZER_DATA';\nexport const FETCH_ORGANIZER_DATA_STARTED = 'FETCH_ORGANIZER_DATA_STARTED';\nexport const FETCH_ORGANIZER_DATA_FAILED = 'FETCH_ORGANIZER_DATA_FAILED';\n\nconst itemSchema = new schema.Entity('item', {\n\t'list': ['listSchema'],\n});\nconst listSchema = new schema.Entity('list', {\n\t'item': [itemSchema],\n});\n\nfunction receiveEntities(entities) {\n\treturn {\n\t\t'type': RECEIVE_ENTITIES,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchListsStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_LISTS_STARTED,\n\t};\n}\n\nfunction fetchListsFailed() {\n\treturn {\n\t\t'type': FETCH_LISTS_FAILED\n\t};\n}\n\nexport function fetchLists() {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListsStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return only the lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': '/api/v1/content/list/',\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\t\t\t\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListsFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////\n// fetch a single list by slug\nexport function fetchListBySlugStarted() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_STARTED,\n\t};\n}\n\nfunction fetchListBySlugFailed() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_FAILED\n\t};\n}\n\nexport function fetchListBySlug(slug) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListBySlugStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return the list if a non-authenticated user should see it.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/listbyslug/?slug=${slug}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListBySlugFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\nexport function filterLists(searchTerm) {\n\treturn { \n\t\t'type': FILTER_LISTS,\n\t\t'payload': { searchTerm },\n\t};\n}\n\n/////////////////////////////\n// create list\nexport const createList = (list, history) => dispatch => {\n\tdispatch(createListStarted());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/list/',\n\t\t'data': JSON.stringify(list),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\tdispatch(createListSucceeded(response));\n\t\thistory.push(`/list/${response.slug}`);\n\t\treturn;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create list': error.message }));\n\t});\n};\n\nexport function createListStarted() {\n\treturn {\n\t\t'type': CREATE_LIST_STARTED,\n\t};\n}\n\nexport function createListSucceeded(list) {\n\treturn {\n\t\t'type': CREATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tlist\n\t\t}\n\t};\n}\n\n///////////////////////////\n// update list\nexport const updateList = (listId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/list/${listId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateListSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateListSucceeded(response) {\n\treturn {\n\t\t'type': UPDATE_LIST_SUCCEEDED,\n\t\t'payload': response,\n\t};\n}\n\n///////////////////////////\n// delete list\nexport const deleteList = id => (dispatch, getState) => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/list/${id}/`,\n\t\t'method': 'DELETE',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(deleteListSucceeded(id));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete list': error.message }));\n\t});\n};\n\nexport function deleteListSucceeded(id) {\n\treturn {\n\t\t'type': DELETE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport const setListIsPublic = ({ id, is_public }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/list/${id}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ is_public }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(setListIsPublicSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'set list is public': error.message }));\n\t});\n};\n\nexport function setListIsPublicSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': SET_LIST_IS_PUBLIC_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// fetch the names of my lists and their items\n// for displaying and managing list hierarchy i.e. list parent_item\n// returns only the fields that are required for this function\nfunction receiveOrganizerData(entities) {\n\treturn {\n\t\t'type': RECEIVE_ORGANIZER_DATA,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchOrganizerDataStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_ORGANIZER_DATA_STARTED,\n\t};\n}\n\nfunction fetchOrganizerDataFailed() {\n\treturn {\n\t\t'type': FETCH_ORGANIZER_DATA_FAILED\n\t};\n}\n\nexport function fetchOrganizerData(userId) {\n\t// get minimal information about all lists owned by one user\n\t// for use in organizer\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchOrganizerDataStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return only the lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/list/?expand=item&fields=id,name,item,is_public,order,parent_item,slug&created_by=${userId}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\t\t\t\n\t\t\treturn dispatch(receiveOrganizerData(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchOrganizerDataFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch my list names': error.message }));\n\t\t});\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\n// this is initial state of lists and the list loading states\n// note that the lists's list of items is called 'item' for consistency with the database.\nconst initialListsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'things': {},\n\t'organizerData': {},\n};\n\n// 'state' here is global state\nexport const getSearchTerm = state => {\n\treturn state.page.searchTerm;\n};\n\nexport const getLists = state => {\n\treturn Object.keys(state.list.things).map(id => {\n\t\treturn state.list.things[id];\n\t});\n};\n\nexport const getFilteredLists = createSelector(\n\t[getLists, getSearchTerm],\n\t(lists, searchTerm) => {\n\t\treturn lists.filter(list => {\n\t\t\t// if no search term, return every list\n\t\t\tif (searchTerm === '') {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\treturn list.name.match(new RegExp(searchTerm, 'i'));\n\t\t});\n\t}\n);\n\nexport const getGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => list.is_public === is_public);\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\nexport const getFilteredPublicLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\treturn lists.filter(list => {\n\t\t\treturn list.is_public;\n\t\t});\n\t}\n);\n\nexport const getMyGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => (list.created_by === store.getState().auth.user.id) && (list.is_public === is_public));\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\n/////////////////////////////\n// organizer data\nexport const getOrganizerLists = state => {\n\tconst lists = Object.keys(state.list.organizerData).map(id => {\n\t\treturn state.list.organizerData[id];\n\t});\n\n\tlists.sort(function (a, b) {\n\t  return a.name.localeCompare(b.name);\n\t});\n\n\treturn lists;\n};\n\nexport const getItemsForList = (state, list) => {\n\tlet listItems = [];\n\tconst lists = state.list.things;\n\n\tif (list) {\n\t\tlist.item.map((itemId) => { // eslint-disable-line array-callback-return\n\t\t\tlet item = { ...state.item.things[itemId] }; // shallow copy so copy is extensible\n\t\t\t\n\t\t\t// note any list that is a child of this item\n\t\t\tconst childList = findObjectByProperty({\n\t\t\t\t'parentObject': lists,\n\t\t\t\t'property': 'parent_item',\n\t\t\t\t'value': itemId\n\t\t\t});\n\n\t\t\tif (childList) {\n\t\t\t\titem.childList = { ...childList };\n\t\t\t}\n\n\t\t\tlistItems.push(item);\n\t\t});\n\t}\n\n\treturn listItems;\n};\n\nexport const getItemAndList = (state, list) => {\n\t// typically used to find the parent item and its list\n\t// for a child list\n\t// use the organizer data which has minimal data for all lists belonging to that user\n\tlet parentItem;\n\tlet parentList;\n\n\tif (list && list.parent_item) {\n\t\tconst items = state.item.organizerData;\n\t\tconst lists = state.list.organizerData;\n\n\t\tif (items) {\n\t\t\tparentItem = items[list.parent_item];\n\n\t\t\tif (parentItem) {\n\t\t\t\tparentList = lists[parentItem.list_id];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { parentItem, parentList };\n};\n\n\n// state here is the substate state.lists\n// the book uses 'items' for the list of things i.e. lists. items\n// as 'items' for us is a specific thing, we need another name for the set of entities to be displayed i.e. the lists themselves\n// so those are globalState.lists.things\n// i.e. state.things here\nexport default function list(state = initialListsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialListsState, {});\n\t\t}\n\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\t// load lists data into store\n\t\t\tconst { entities } = action.payload;\n\t\t\tlet lists = {};\n\n\t\t\tif (entities && entities.list) {\n\t\t\t\tlists = entities.list; // there is at least one list\n\t\t\t}\n\n\t\t\treturn updeep({ 'things': lists, 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': true,\n\t\t\t\t'things': updeep.constant({}), // remove all existing lists\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase CREATE_LIST_STARTED: {\n\t\t\t// at present this does nothing, it's really just to track that the action happened\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase CREATE_LIST_SUCCEEDED: {\n\t\t\tconst list = action.payload.list;\n\t\t\treturn updeep({ 'things': { [list.id]: list } }, state);\n\t\t}\n\n\t\tcase DELETE_LIST_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tcase SET_LIST_IS_PUBLIC_SUCCEEDED: {\n\t\t\tconst listId = action.payload.id;\n\n\t\t\treturn updeep({ 'things': { [listId]: { 'is_public': action.payload.is_public } } }, state);\n\t\t\t// reminder of another way to update nested arrays\n\t\t\t/* const index = state.things.findIndex((list) => list.id === action.payload.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\treturn updeep.updateIn(`things.${index}.is_public`, action.payload.is_public, state);\n\t\t\t} \n\n\t\t\treturn state; // in case list was not found\n\t\t\t*/\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\n\t\t\tfunction addItem(items) {\n\t\t\t\treturn [].concat(items, item.id);\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${item.list}.item`, addItem, state);\n\t\t}\n\n\t\t/* case DELETE_ITEM_SUCCEEDED: {\n\t\t\tfunction deleteItem(items) {\n\t\t\t\tconst itemIndex = items.findIndex((item) => item === action.payload.itemId); \n\t\t\t\tlet newItems = [].concat(items);\n\t\t\t\tnewItems.splice(itemIndex, 1);\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${action.payload.listId}.items`, deleteItem, state);\n\t\t} */\n\n\t\tcase UPDATE_LIST_SUCCEEDED: {\n\t\t\t// update editable properties\n\t\t\tconst update = {\n\t\t\t\t'name': action.payload.name,\n\t\t\t\t'description': action.payload.description,\n\t\t\t\t'is_public': action.payload.is_public,\n\t\t\t\t'modified_by': action.payload.modified_by,\n\t\t\t\t'modified_at': action.payload.modified_at,\n\t\t\t\t'parent_item': action.payload.parent_item,\n\t\t\t};\n\n\t\t\treturn updeep({ 'things': { [action.payload.id]: update } }, state);\n\t\t}\n\n\t\tcase MOVE_ITEM_UP_SUCCEEDED: {\n\t\t\tconst itemsArray = action.payload.items; // array containing the two items that have been swapped\n\t\t\t// update the Items array in their parent list, change order\n\t\t\tconst listId = itemsArray[0].list_id;\n\n\t\t\tfunction replaceItems(items) {\n\t\t\t\tlet newItems = [].concat(state.things[listId].item);\n\t\t\t\titemsArray.map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\t\tnewItems[item.order-1] = item.id;\n\t\t\t\t});\n\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${listId}.item`, replaceItems, state);\n\t\t}\n\n\t\tcase RECEIVE_ORGANIZER_DATA: {\n\t\t\t// load lists data into store\n\t\t\tconst { entities } = action.payload;\n\t\t\tlet lists = {};\n\n\t\t\tif (entities && entities.list) {\n\t\t\t\tlists = entities.list; // there is at least one list\n\t\t\t}\n\n\t\t\treturn updeep({ 'organizerData': lists, 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_ORGANIZER_DATA_STARTED: {\n\t\t\t// clear out any old data, this is important if navigating between lists\n\t\t\treturn updeep({ 'organizerData': updeep.constant({}) }, state);\n\t\t}\n\n\t\tcase FETCH_ORGANIZER_DATA_FAILED: {\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","import {\n\tFILTER_LISTS,\n} from './list';\n\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'searchTerm': '',\n};\n\nexport default function page(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FILTER_LISTS: {\n\t\t\treturn updeep({ 'searchTerm': action.payload.searchTerm }, state);\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","// note that the reducers are called 'list', 'item' for consistency with the database and endpoints\n// this terminology is maintained in the store\n// however in the UI we use 'lists' and 'items' for the plural\n// this isn't ideal but absolute naming consistency seems to be required on the server for DRF FlexFields to work\n\n\n// server, store: list, listbyslug, item\n// React components: lists, items\n\n// import the partial reducers\nimport { combineReducers } from 'redux';\nimport errors from './errors';\nimport auth from './auth';\nimport page from './page';\nimport list from './list';\nimport item from './item';\n// by importing the actual reducer as the default, the state of each is initialised\n\nexport default combineReducers({\n\t'errors': errors,\n\t'auth': auth,\n\t'page': page,\n\t'list': list,\n\t'item': item,\n});\n","// store.js\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules/rootReducer';\n\nconst composeEnhancers = composeWithDevTools({\n\t// options like actionSanitizer, stateSanitizer\n});\n\nconst store = createStore(\n\trootReducer, \n\t// inititalState, // by not supplying initial state, we tell the store to use the defaults specified in the reducer\n\tcomposeEnhancers(\n\t\tapplyMiddleware(thunk),\n\t));\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./modules/rootReducer', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../modules/auth';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(e);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's handleSubmit\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email address to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row md=\"9\" lg=\"6\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.registration && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.registration}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Shown after successful registration of a new user\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Welcome extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Welcome to My Top Tens</h2>\n\t\t\t\t<p>Your account has been created.</p>\n\t\t\t\t<p>To create lists, you will need to verify your email address. An email containing a verification link has been sent to the email address with which you registered. Please click the link to verify your email address.</p>\n\t\t\t\t<p>If you do not receive the email within a few minutes, please check your Junk or Spam folder.</p>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<p>You can request a new registration email by <Link to=\"/login\">Logging in</Link> and going to your user account (click your username in the header bar).</p>\n\t\t\t\t\t\t\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nWelcome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps)(Welcome);\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={this.handleSubmit.bind(this)}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange.bind(this) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.authentication && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.authentication}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","// List of all lists\n\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst ListsList = ({ children, is_public, headerText }) => {\n\treturn (\n\t\t<Container className=\"lists-list\">\n\t\t\t{headerText &&\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h3 className=\"lists-list-name\">\n\t\t\t\t\t\t{headerText}\n\t\t\t\t\t</h3>\n\t\t\t\t</Col>\n\t\t\t</Row>}\n\t\t\t<Row>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default ListsList;\n","// Set whether the list is public\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport React from 'react';\nimport { Label } from 'reactstrap';\n\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nimport './SetListIsPublic.scss';\n\nconst SetListIsPublic = props => {\n\tlet id=`select-${props.list.id}`;\n\tlet value = props.list.is_public ? 'Public' : 'Private';\n\n\tfunction onIsPublicChange(e) {\n\t\t// map from select options to true / false\n\t\tconst value = e.target.value === 'Public' ? true : false;\n\t\tprops.onIsPublicChange({ 'id': props.list.id, 'is_public': value });\n\t}\n\n\treturn (\n\t\t<div className=\"list-status\">\n\t\t\t<Label>Set list private/public status\n\t\t\t\t<select className=\"form-control\" value={value} onChange={onIsPublicChange} id={id}>\n\t\t\t\t\t{LIST_IS_PUBLIC_TEXTS.map(is_public => (\n\t\t\t\t\t\t<option key={is_public} value={is_public}>{is_public}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</Label>\n\t\t</div>\n\t);\n};\n\nexport default SetListIsPublic;\n","// check whether the user can perform actions on lists, items\n// items inherit permissions from their list\n\n// result depends on whether they are logged in:\n// whether they own the list:\n// whether the list is public\n\n// list may be identified by id (primary key) or by slug (provided by URL)\n// for viewing, we could trust the server that if a list is returned, it can be viewed.\n// but for editing, we need to check if the user created it\n\n// identifier should be like { 'slug': 'abc' } or { 'id': 'efg' } i.e. an object with one property\n\nimport store from '../store';\nimport findObjectByProperty from './findObjectByProperty';\n\nexport function canViewList(identifier) {\n\t// a list can be viewed if public or if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.list.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canViewList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.is_public || (list.created_by === userId))) {\n\t\t\tcanViewList = true;\n\t\t}\n\t}\n\n\treturn canViewList;\n}\n\nexport function canEditList(identifier) {\n\t// a list can be edited if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.list.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canEditList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.created_by === userId)) {\n\t\t\tcanEditList = true;\n\t\t}\n\t}\n\n\treturn canEditList;\n}\n\nexport function canCreateList() {\n\t// the user can create a list if they are logged in\n\t// and have verified their email address\n\tconst state = store.getState();\n\n\tif (state.auth.isAuthenticated && state.auth.user.emailVerified) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n","// Top-level summary of a list\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport SetListIsPublic from './SetListIsPublic';\n\nimport * as permissions from '../modules/permissions';\n\nimport './ListSummary.scss';\n\nconst ListSummary = props => {\n\tlet canEdit = permissions.canEditList({ 'id': props.list.id });\n\n\treturn (\n\t\t<Col sm=\"12\" md=\"6\">\n\t\t\t<div className=\"list-summary\">\n\t\t\t\t<Link to={`/list/${props.list.slug}`}>\n\t\t\t\t\t<div className=\"list-header\">\n\t\t\t\t\t\t<div>{props.list.name}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"list-body\">{props.list.description}</div>\n\t\t\t\t</Link>\n\t\t\t\t{props.showCreatedBy && \n\t\t\t\t\t<div className=\"list-created-by\">{props.list.created_by_username}</div>\n\n\t\t\t\t}\n\t\t\t\t{canEdit && (\n\t\t\t\t\t<div className=\"list-controls\">\n\t\t\t\t\t\t<SetListIsPublic\n\t\t\t\t\t\t\tlist={props.list}\n\t\t\t\t\t\t\tonIsPublicChange={props.onIsPublicChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={onDeleteList}>Delete</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Col>\n\t);\n\n\tfunction onDeleteList(e) {\n\t\tprops.onDeleteList({ 'id': props.list.id, 'name': props.list.name });\n\t}\n};\n\nexport default ListSummary;\n","// Page to display list of lists\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ListsList from '../components/ListsList';\nimport ListSummary from '../components/ListSummary';\nimport './ListsPage.scss';\n\nclass ListsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// which set of lists to view\n\t\t// if logged in, default my-lists\n\t\t// if not logged in, only show public-lists\n\t\tlet listset = 'public-lists';\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(this.props.location.search);\n\t\t\tlistset = urlParams.get('listset') || 'my-lists';\n\t\t}\n\n\t\tthis.setListSetURL(listset);\n\n\t\tthis.state = {\n\t\t\t'selectedTab': listset,\n\t\t\t'topLevelListsOnly': true,\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// user has just logged out\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': 'public-lists',\n\t\t\t});\n\n\t\t\tthis.setListSetURL('public-lists');\n\t\t}\n\t}\n\n\tonSearch = e => {\n\t\tthis.props.onSearch(e.target.value);\n\t}\n\n\tonAddList = () => {\n\t\tthis.props.history.push('/newlist');\n\t}\n\n\tgetListsToShow = (listsList) => {\n\t\tlet ListsToShow = [];\n\n\t\t// filter out lists that are not top level\n\t\tif (this.state.topLevelListsOnly) {\n\t\t\tlistsList.map(list => { // eslint-disable-line array-callback-return\n\t\t\t\tif (!list.parent_item) {\n\t\t\t\t\tListsToShow.push(list);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ListsToShow;\n\t\t}\n\n\t\treturn listsList;\n\t}\n\n\trenderPublicLists() {\n\t\tconst { publicLists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\tconst listsToShow = this.getListsToShow(publicLists);\n\n\t\treturn (\n\t\t\t<ListsList headerText=\"All public lists\">\n\t\t\t\t{listsToShow.map(list => \n\t\t\t\t\t<ListSummary\n\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\tshowCreatedBy={true}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ListsList>\n\t\t);\n\t}\n\n\trenderMyLists() {\n\t\tconst { myLists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\treturn Object.keys(myLists).map((is_public, index) => {\n\t\t\tconst listsByIsPublic = myLists[is_public];\n\t\t\tlet headerText = is_public === 'true' ? 'My public lists' : 'My private lists';\n\n\t\t\tconst listsToShow = this.getListsToShow(listsByIsPublic);\n\n\t\t\treturn (\n\t\t\t\t<div key={index}>\n\t\t\t\t\t{(listsToShow.length > 0) && (\n\t\t\t\t\t\t<ListsList is_public={is_public} headerText={headerText}>\n\t\t\t\t\t\t\t{listsToShow.map(list => \n\t\t\t\t\t\t\t\t<ListSummary\n\t\t\t\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ListsList>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\tsetListSetURL(listset) {\n\t\tlet URL = `${this.props.location.pathname}?listset=${listset}`;\n\t\tthis.props.history.push(URL);\n\t}\n\n\thandleTopLevelListsChange() {\n\t\tthis.setState({\n\t\t\t'topLevelListsOnly': !this.state.topLevelListsOnly,\n\t\t});\n\t}\n\n\thandleTabClick = (e) => {\n\t\tif (this.state.selectedTab !== e.target.id) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': e.target.id,\n\t\t\t});\n\n\t\t\tthis.setListSetURL(e.target.id);\n\t\t}\n\t}\n\n\trenderTabs() {\n\t\treturn (\n\t\t\t<ul><li>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.state.selectedTab === 'my-lists'? 'selected' : ''}\n\t\t\t\t\tid='my-lists'\n\t\t\t\t\tonClick={this.handleTabClick}>My lists\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.state.selectedTab === 'public-lists'? 'selected' : ''}\n\t\t\t\t\tid='public-lists'\n\t\t\t\t\tonClick={this.handleTabClick}>Public lists\n\t\t\t\t</span>\n\t\t\t</li></ul>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet listsList;\n\n\t\tif (this.state.selectedTab === 'my-lists') {\n\t\t\tlistsList = this.renderMyLists();\n\t\t} else if (this.state.selectedTab === 'public-lists') {\n\t\t\tlistsList = this.renderPublicLists();\n\t\t}\n\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"lists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet createList;\n\t\tif (this.props.canCreateList()) {\n\t\t\tcreateList = (<button\n\t\t\t\tclassName=\"btn btn-primary create-list\"\n\t\t\t\tonClick={this.onAddList}\n\t\t\t>+ New list</button>);\n\t\t} else if (this.props.auth.isAuthenticated) {\n\t\t\tcreateList = (<div>In order to create new lists, please verify your email address by clicking the link in the email you were sent when you registered. You can request a new verification email from your <Link to=\"/account\">Account</Link> page.</div>);\n\t\t} else {\n\t\t\tcreateList = (<div>In order to create new lists, please <Link to=\"/login\">log in</Link> or <Link to=\"/register\">register a My Top Tens account</Link>.</div>);\n\t\t}\n\n\n\t\treturn (\n\t\t\t<div className=\"lists-list\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col  className=\"top-level-lists-control\">\n\t\t\t\t\t\t\t<Label check>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tdefaultChecked={this.state.topLevelListsOnly}\n\t\t\t\t\t\t\t\t\tonChange={this.handleTopLevelListsChange.bind(this)}/>{' '}\n\t\t\t\t\t\t\t\tShow top level lists only\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col sm=\"12\" md=\"9\">\n\t\t\t\t\t\t\t<div className=\"search\">\n\t\t\t\t\t\t\t\t<Input className=\"form-control\"\n\t\t\t\t\t\t\t\t\tonChange={this.onSearch}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{createList}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t{this.props.auth.isAuthenticated && <div className=\"tabs\">\n\t\t\t\t\t{this.renderTabs()}\n\t\t\t\t\t<div className=\"clearing\"></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"lists\">\n\t\t\t\t\t{listsList}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ListsPage);\n","import React from 'react';\n\n// onClick should dismiss the condition that caused the FlashMessage to be displayed\n// it is the responsibility of the component that triggers the FlashMessage, to also provide the way to dismiss it\nexport default function FlashMessage({ message, type, onClick }) {\n\treturn (\n\t\t<div className={`flash-error ${type}`}>\n\t\t\t<span>{message}</span>\n\t\t\t<button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={onClick}>\n\t\t\t  <span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","// Home.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport ListsPage from './ListsPage';\n\nimport * as listReducer from '../modules/list';\nimport { getFilteredPublicLists, getMyGroupedAndFilteredLists } from '../modules/list';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\t\n\t\tprops.dispatch(clearErrors());\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(listReducer.fetchLists());\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user's status has changed, refresh Lists\n\t\tif(prevProps.auth.user.token !== this.props.auth.user.token){\n\t\t\tthis.props.dispatch(listReducer.fetchLists());\n\t\t}\n\t}\n\n\tonSearch = searchTerm => {\n\t\tthis.props.dispatch(listReducer.filterLists(searchTerm));\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(listReducer.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = ({ id, name }) => {\n\t\tif (confirm(`Are you sure you want to delete the list ${name}`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t  this.props.dispatch(listReducer.deleteList(id));\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<ListsPage\n\t\t\t\t\tauth={this.props.auth}\n\t\t\t\t\tmyLists={this.props.myLists}\n\t\t\t\t\tpublicLists={this.props.publicLists}\n\t\t\t\t\tcanCreateList={permissions.canCreateList}\n\t\t\t\t\tonSearch={this.onSearch}\n\t\t\t\t\tonCreateList={this.onCreateList}\n\t\t\t\t\tonIsPublicChange={this.onIsPublicChange}\n\t\t\t\t\tonDeleteList={this.onDeleteList}\n\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'publicLists': PropTypes.array.isRequired,\n\t'myLists': PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.list.isLoading,\n\t'publicLists': getFilteredPublicLists(state),\n\t'myLists': getMyGroupedAndFilteredLists(state),\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\nimport { createList } from '../modules/list';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\n\nimport ValidatedForm from '../components/ValidatedForm.js';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nimport './CreateList.scss';\n\nclass CreateList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'name': '',\n\t\t\t'description': '',\n\t\t};\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`item${i}_name`] = '';\n\t\t\tthis.state[`item${i}_description`] = '';\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\n\t\tprops.dispatch(clearErrors());\n\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(props.location.search);\n\t\t\tthis.state.parentItemId = urlParams.get('parent-item-id');\n\t\t\tthis.state.parentItemName = urlParams.get('parent-item-name');\n\t\t\tthis.state.parentListName = urlParams.get('parent-list-name');\n\t\t\tthis.state.parentListSlug = urlParams.get('parent-list-slug');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tcancel(e) {\n\t\tthis.props.history.push('/');\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tlet newList = {\n\t\t\t'name': this.state.name,\n\t\t\t'description': this.state.description,\n\t\t\t'item': [],\n\t\t};\n\t\t\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tif (this.state[`item${i}`] !== '') {\n\t\t\t\tconst newItem = {\n\t\t\t\t\t'name': this.state[`item${i}_name`],\n\t\t\t\t\t'description': this.state[`item${i}_description`],\n\t\t\t\t\t'order': i,\n\t\t\t\t};\n\t\t\t\tnewList.item.push(newItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.state.parentItemId) {\n\t\t\tnewList.parent_item = this.state.parentItemId;\n\t\t}\n\n\t\tthis.onCreateList(newList);\n\t}\n\n\tonCreateList = (newList) => {\n\t\tthis.props.dispatch(createList(newList, this.props.history));\n\t}\n\n\n\tcomponentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user cannot create a list, redirect to Home\n\t\tif(!permissions.canCreateList() && !this.props.auth.isLoading){\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderItemInputs() {\n\t\tlet elements = [];\n\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\telements.push(\n\t\t\t\t<div className=\"form-group\" key={`item${i}`}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<h3>Item {i}</h3>\n\t\t\t\t\t\t\t<Label for={`item${i}_name`}>Name</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_name`}\n\t\t\t\t\t\t\t\tid={`item${i}_name`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_name`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<Label for={`item${i}_description`}>Description</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tname={`item${i}_description`}\n\t\t\t\t\t\t\t\tid={`item${i}_description`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_description`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>);\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<h2>Create a new list</h2>\n\t\t\t\t{this.state.parentItemName && (\n\t\t\t\t\t<div className=\"parent-item\"><Link to={`/list/${this.state.parentListSlug}`}>{this.state.parentListName}</Link> > {this.state.parentItemName}</div>\n\t\t\t\t)}\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t\t<Label for=\"name\">Name</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.name }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Name is required</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Description</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.description }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.renderItemInputs()}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSave list\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t{this.props.errors.lists && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.lists}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nCreateList.propTypes = {\n\t//'createList': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n});\n\nexport default connect(mapStateToProps)(withRouter(CreateList));\n","// An input or textarea that can be edited by clicking on it\n// It can be blank, or required\n// note custom property data-state which is the name of the property in this.state\n// Can be used with keyboard only\n// It is a regular form with cancel, submit. This allows keyboard navigation but the form stays open on blur - otherwise cancel would not be possible with keyboard.\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Row, Col, Label, Input } from 'reactstrap';\nimport './EditableTextField.scss';\nimport Markdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\n\nclass EditableTextField extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'showInput': false,\n\t\t\t'isValidated': false,\n\t\t\t'initialValue': '',\n\t\t\t'overflowActive': false,\n\t\t\t'type': props.textarea ? 'textarea' : 'input',\n\t\t};\n\n\t\tif (props.textarea === true) {\n\t\t\tthis.state.expanded = false;\n\t\t}\n\t}\n\n\t// does the text overflow its container?\n\tisOverflowActive() {\n\t\tif (!this.props.textarea) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst element = this.textElement;\n\t\tif (!element) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst overflowActive = element.offsetHeight < element.scrollHeight;\n\n\t\tif (overflowActive !== this.state.overflowActive) {\n\t\t\tthis.setState({ 'overflowActive': overflowActive });\n\t\t}\n\t}\n\n\ttoggleMore() {\n\t\tthis.setState({\n\t\t\t'expanded': !this.state.expanded,\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.isOverflowActive();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.isOverflowActive();\n\t}\n\n\tonKeyUp(e) {\n\t\tvar code = e.keyCode || e.which;\n\t\tif(code === 13) { //13 is the enter keycode\n\t\t\tthis.showInput(e);\n\t\t}\n\t}\n\n\tshowInput(e) {\n\t\tconst isPlaceholder = e.target.classList.contains('placeholder');\n\n\t\tif (!isPlaceholder) {\n\t\t\tthis.setState({\n\t\t\t\t'initialValue': e.target.textContent,\n\t\t\t});\n\t\t}\n\t\tthis.toggleInput();\n\t}\n\n\ttoggleInput() {\n\t\tconst newShowInputValue = !this.state.showInput;\n\n\t\t// optionally, tell the parent component whether the field is being edited\n\t\tif (typeof this.props.isEditing === 'function') {\n\t\t\tthis.props.isEditing(newShowInputValue);\n\t\t}\n\n\t\tthis.setState({\n\t\t\t'showInput': newShowInputValue,\n\t\t});\n\t}\n\n\tcancel = () => {\n\t\t// restore the initial value of the field as though the user had just entered it\n\t\tconst fakeEvent = {\n\t\t\t'target': {\n\t\t\t\t'dataset': { 'state': this.props['data-state'] },\n\t\t\t\t'value': this.state.initialValue,\n\t\t\t}\n\t\t};\n\t\tthis.props.handleInputChange(fakeEvent);\n\t\tthis.toggleInput();\n\t}\n\n\tvalidate = () => {\n\t\t// custom validation for consistency with other forms\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst elem = formEl.querySelector(this.state.type);\n\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\tif (!elem.validity.valid) {\n\t\t\tlet message = elem.validationMessage;\n\t\t\terrorLabel.textContent = message;\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\terrorLabel.textContent = '';\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\t// the user has typed a new value and the parent component should be notified\n\n\t\tconst inputElement = e.target.querySelector(this.state.type);\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.handleNewValue(inputElement);\n\t\t\tthis.toggleInput();\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t}\n\n\trenderValue() {\n\t\t// construct the display of the text value\n\t\tlet expanded = '';\n\t\tif (this.state.expanded) {\n\t\t\texpanded = 'expanded';\n\t\t}\n\n\t\tlet showMoreButton = false;\n\n\t\tif (this.state.overflowActive || this.state.expanded) {\n\t\t\tshowMoreButton = true;\n\t\t}\n\n\t\tlet moreButtonText = 'More...';\n\t\tif (this.state.expanded) {\n\t\t\tmoreButtonText = 'Less...';\n\t\t}\n\n\t\tlet onClick;\n\t\tlet onKeyUp;\n\t\tlet tabIndex = '';\n\n\t\tif (this.props.canEdit) {\n\t\t\ttabIndex = '0';\n\t\t\tonClick=this.showInput.bind(this);\n\t\t\tonKeyUp=this.onKeyUp.bind(this);\n\t\t}\n\n\t\tlet item = (\n\t\t\t<span>\n\t\t\t\t<span className={`text ${expanded}`}\n\t\t\t\t\tref={ref => (this.textElement = ref)}\n\t\t\t\t\tonKeyUp={onKeyUp}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\ttabIndex={tabIndex}\t\n\t\t\t\t>\n\t\t\t\t\t<Markdown \n\t\t\t\t\t\tescapeHtml={true}\n\t\t\t\t\t\tsource={this.props.value} \n\t\t\t\t\t/>\n\t\t\t\t\t{showMoreButton && <span className=\"fader\"></span>}</span>\n\t\t\t\t{showMoreButton && <button type=\"button\" className=\"show-more\" onClick={this.toggleMore.bind(this)}>{moreButtonText}</button>}\n\t\t\t</span>\n\t\t);\n\n\t\treturn item;\n\t}\n\n\trender() {\n\t\tlet type = 'text';\n\t\tif (this.props.textarea) {\n\t\t\ttype = 'textarea';\n\t\t}\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (this.props.className) {\n\t\t\tclassNames = [...this.props.className];\n\t\t\tdelete this.props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\tconst showInput = this.state.showInput;\n\t\tlet item;\n\n\t\tif (this.props.canEdit) {\n\t\t\tif (showInput) {\t\t\t\n\t\t\t\titem = (\n\t\t\t\t\t<form\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tonSubmit={this.handleSubmit.bind(this)}\n\t\t\t\t\t\tclassName={classNames}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<Label for={this.props.id}>{this.props.label}</Label>\n\t\t\t\t\t\t\t\t\t<Input autoFocus\n\t\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\t\tname={this.props.id}\n\t\t\t\t\t\t\t\t\t\trequired={this.props.required}\n\t\t\t\t\t\t\t\t\t\tdata-state={this.props['data-state']}\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props['data-entityid']}\n\t\t\t\t\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\t\t\t\t\tonChange={this.props.handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"controls\">\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\" onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tDone\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span className=\"hint\">You can use <Link to=\"https://help.github.com/articles/basic-writing-and-formatting-syntax/\">Markdown</Link></span>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</form>);\n\t\t\t} else {\n\t\t\t\tif (this.props.value !== '') {\n\t\t\t\t\titem = this.renderValue();\n\t\t\t\t} else {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"placeholder\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\tonClick={this.showInput.bind(this)}\n\t\t\t\t\t\t\tonKeyUp={this.onKeyUp.bind(this)}\n\t\t\t\t\t\t>{this.props.placeholder}</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.props.value !== '') {\n\t\t\t\titem = this.renderValue();\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className={`editable-text-field ${showInput && 'editing'}`}>\n\t\t\t\t{ item }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditableTextField;\n","// An individual item\n// It is a stateful component so that the description field can be shown only if there is a name defined.\n\nimport store from '../store';\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport EditableTextField from './EditableTextField.js';\nimport * as permissions from '../modules/permissions';\nimport './Item.scss';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nclass Item extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\t'isEditingName': false,\n\t\t};\n\t}\n\n\tsetIsEditingName(showInput) {\n\t\tthis.setState({\n\t\t\t'isEditingName': showInput,\n\t\t});\n\t}\n\n\tonCreateChildList = () => {\n\t\tthis.props.onCreateChildList(this.props.item);\n\t}\n\n\tonMoveUp = () => {\n\t\tthis.props.onMoveItemUp(this.props.item.id);\n\t}\n\n\tonMoveDown = () => {\n\t\tthis.props.onMoveItemDown(this.props.item.id);\n\t}\n\n\trender() {\n\t\tlet showDescription = true;\n\t\tif (this.props.item.name === '') {\n\t\t\tshowDescription = false;\n\t\t} else if (this.state.isEditingName && store.getState().item.things[this.props.item.id] && store.getState().item.things[this.props.item.id].name === '') {\n\t\t\tshowDescription = false;\n\t\t}\n\n\t\tlet canCreateChildList = true; // should the \"create child list\" button be visible?\n\n\t\tif (this.props.item.childList || // there is already a child list\n\t\t\tthis.props.item.name === '' || // there is no item\n\t\t\tthis.state.isEditingName || // the item name is being edited\n\t\t\t!this.props.canEdit) { // the user can't edit this list\n\t\t\tcanCreateChildList = false;\n\t\t}\n\n\t\tlet canViewChildList = false;\n\n\t\t// child list exists and user can view it\n\t\tif (this.props.item.childList && permissions.canViewList({ 'slug': this.props.item.childList.slug })) {\n\t\t\tcanViewChildList = true;\n\t\t}\n\n\t\tlet childList;\n\n\t\tif (canCreateChildList) {\n\t\t\tchildList = (<button className=\"btn btn-primary create-childlist\" onClick={this.onCreateChildList.bind(this)}>Create child list</button>);\t\n\t\t} else if (canViewChildList) {\n\t\t\tchildList = (\n\t\t\t\t<div className=\"child-list\">\t\n\t\t\t\t\t<Link to={`/list/${this.props.item.childList.slug}`}>{this.props.item.childList.name} ></Link>\n\t\t\t\t</div>);\n\t\t}\n\n\t\tlet showUp = true;\n\t\tlet showDown = true;\n\n\t\tif (!this.props.canEdit ||\n\t\t\tthis.props.item.name === '' ||\n\t\t\t!showDescription) { // assume that showDescription means there is a saved name i.e. the item exists\n\t\t\tshowUp = false;\n\t\t\tshowDown = false;\n\t\t} else if (this.props.item.order === 1) {\n\t\t\tshowUp = false;\n\t\t} else if (this.props.item.order === MAX_ITEMS_IN_LIST) {\n\t\t\tshowDown = false;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"item-container\">\n\t\t\t\t<div className=\"item-header\">\n\t\t\t\t\t<span className=\"order\">{this.props.item.order}:</span><EditableTextField\n\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\tname={`${this.props.item.order}_name`}\n\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\tplaceholder=\"Click here to add an item\"\n\t\t\t\t\t\tdata-state={`${this.props.item.order}_name`}\n\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\tid={`${this.props.item.order}_name`} // id of the html element\n\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\tisEditing={this.setIsEditingName.bind(this)}\n\t\t\t\t\t\tvalue={this.props.item.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{childList}\n\t\t\t\t{showDescription &&\n\t\t\t\t\t<div className=\"item-body\">\n\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\t\tname={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tplaceholder=\"Click here to add a description\"\n\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\tdata-state={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\t\tid={`${this.props.item.order}_description`} // id of the html element\n\t\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\t\tvalue={this.props.item.description}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{showUp && <button className=\"btn btn-secondary move-up\" onClick={this.onMoveUp.bind(this)}>Up</button>\n\t\t\t\t}\n\t\t\t\t{showDown && <button className=\"btn btn-secondary move-down\" onClick={this.onMoveDown.bind(this)}>Down</button>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Item;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\n\nimport * as itemsReducer from '../modules/item';\n\nimport { MAX_ITEMS_IN_LIST } from '../constants';\nimport Item from './Item';\n\nclass ItemsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\n\t\t// set up the state to hold each item's name and description\n\t\t// coded by order\n\t\t// this is not elegant but keeps state flat\n\t\tfor (let i=1; i<= MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`${i}_name`] = '';\n\t\t\tthis.state[`${i}_description`] = '';\n\t\t}\n\n\t\t// build the items\n\t\t// each item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst items = this.props.items;\n\n\t\tObject.keys(items).forEach((key) => {\n\t\t\tif (items[key].order && items[key].order <= MAX_ITEMS_IN_LIST) {\n\t\t\t\tconst order = items[key].order;\n\n\t\t\t\tthis.state[`${order}_id`] = items[key].id;\n\t\t\t\tthis.state[`${order}_name`] = items[key].name;\n\t\t\t\tthis.state[`${order}_description`] = items[key].description;\n\n\t\t\t\t// child lists\n\t\t\t\tif (items[key].childList) {\n\t\t\t\t\tthis.state[`${order}_childList`] = items[key].childList;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tonMoveItemUp = (itemId) => {\n\t\tthis.props.dispatch(itemsReducer.moveItemUp({ itemId }));\n\t}\n\n\tonMoveItemDown = (itemId) => {\n\t\tthis.props.dispatch(itemsReducer.moveItemDown({ itemId }));\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tlet update = [];\n\t\tfor (let i=0; i<this.props.items.length; i++) {\n\t\t\tconst item = this.props.items[i];\n\n\t\t\tif (prevProps.items[i].id !== this.props.items[i].id) {\n\t\t\t\tconst order = item.order;\n\n\t\t\t\t// update item properties\n\t\t\t\tupdate[`${order}_id`] = item.id;\n\t\t\t\tupdate[`${order}_name`] = item.name;\n\t\t\t\tupdate[`${order}_description`] = item.description;\n\n\t\t\t\t// set child list if exists\n\t\t\t\t// or set to null if it does not\n\t\t\t\tupdate[`${order}_childList`] = item.childList;\n\t\t\t}\n\t\t}\n\t\t// only setState if there is a change to make\n\t\t// otherwise it triggers endless updates\n\t\tif (Object.keys(update).length > 0) {\n\t\t\tthis.setState(update);\n\t\t}\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst itemId = element.dataset.entityid;\n\n\t\t// the item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(itemsReducer.updateItem(itemId, propertyName, value));\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewItemForm': !this.state.showNewItemForm });\n\t}\n\n\trenderItemsList() {\n\t\tlet elements = [];\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tconst name = this.state[`${i}_name`];\n\t\t\tconst canEdit = this.props.canEdit;\n\t\t\tif (name || canEdit) {\n\t\t\t\telements.push(\n\t\t\t\t\t<Row key={`item${i}`}>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\tkey={`item${i}`}\n\t\t\t\t\t\t\t\titem={{\n\t\t\t\t\t\t\t\t\t'id': this.state[`${i}_id`],\n\t\t\t\t\t\t\t\t\t'order': i,\n\t\t\t\t\t\t\t\t\t'name': name,\n\t\t\t\t\t\t\t\t\t'description': this.state[`${i}_description`],\n\t\t\t\t\t\t\t\t\t'childList': this.state[`${i}_childList`],\n\t\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\tcanEdit={canEdit}\n\t\t\t\t\t\t\t\tonCreateChildList={this.props.onCreateChildList}\n\t\t\t\t\t\t\t\tonMoveItemUp={this.onMoveItemUp}\n\t\t\t\t\t\t\t\tonMoveItemDown={this.onMoveItemDown}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"items-list\">\n\t\t\t\t{this.renderItemsList()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(ItemsPage);\n","// a single list to be displayed in the Organizer\n// can be expanded to show items\n// an item can be selected\n\nimport React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\n\nclass OrganizerList extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\t'showItems': props.showItems,\n\t\t};\n\t}\n\n\tonShowItems() {\n\t\tthis.setState({\n\t\t\t'showItems': !this.state.showItems,\n\t\t});\n\t}\n\n\tonSelectItem (e) {\n\t\tthis.props.onSelectItem({ 'list': this.props.list, 'order': e.target.dataset.order, 'childListId': e.target.dataset.childlistid });\n\t}\n\n\trenderItems() {\n\t\tconst selectedItemOrder = parseInt(this.props.selectedItemOrder); // element property is a string. Order should be a number.\n\t\tconst listId = this.props.list.id;\n\t\tconst selectedListId = this.props.selectedListId;\n\n\t\treturn (\n\t\t\t<div className=\"items\">\n\t\t\t\t{this.props.itemOrganizerData[listId].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\t\tconst isSelectedItem = ((listId === selectedListId) && (item.order === selectedItemOrder));\n\n\t\t\t\t\tlet childListElm;\n\n\t\t\t\t\tif (item.childListId) {\n\t\t\t\t\t\tconst childList = this.props.listOrganizerData.find((list) => list.id === item.childListId);\n\t\t\t\t\t\tchildListElm = (\n\t\t\t\t\t\t\t<span className=\"child-list\">> {childList.name}</span>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.name) {\n\t\t\t\t\t\treturn (<div key={item.id} className={`item ${isSelectedItem ? 'selected' : ''}`}>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tonClick={this.onSelectItem.bind(this)}\n\t\t\t\t\t\t\t\tdata-order={item.order}\n\t\t\t\t\t\t\t\tdata-childlistid={item.childListId}\n\t\t\t\t\t\t\t><span className=\"order\">{item.order}:</span>{item.name}</span>{childListElm}\n\t\t\t\t\t\t</div>);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst name = this.props.list.name;\n\n\t\tlet showItemsButtonText = '+';\n\n\t\tif (this.state.showItems) {\n\t\t\tshowItemsButtonText = '-';\n\t\t}\n\n\t\treturn (\n\t\t\t<Row className=\"organizer-list\">\n\t\t\t\t<Col>\n\t\t\t\t\t<button className=\"btn btn-light show-items\" onClick={this.onShowItems.bind(this)}>{showItemsButtonText}</button>\n\t\t\t\t\t<div className=\"name\">{name}</div>\n\t\t\t\t\t{this.state.showItems && this.renderItems()}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default OrganizerList;\n","// Displays the user's lists and items\n// Allows the parent item of a list to be changed\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\n\nimport * as listReducer from '../modules/list';\n\nimport OrganizerList from './OrganizerList';\nimport './Organizer.scss';\n\nclass Organizer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'showOrganizer': false,\n\t\t\t'parentItemId': props.list.parent_item,\n\t\t\t'parentListId': props.parentListId,\n\t\t\t'selectedItemChildListId': undefined,\n\t\t\t'selectedItemOrder': undefined,\n\t\t};\n\t}\n\n\tcomponentDidUpdate = (prevProps) => {\n\t\t// just loaded\n\t\tif ((prevProps.listOrganizerData.length === 0 && this.props.listOrganizerData.length !== 0) ||\n\t\t\t(prevProps.list.parent_item !== this.props.list.parent_item)) { // navigated to new list\n\t\t\tthis.setState({\n\t\t\t\t'parentListId': this.props.parentListId,\n\t\t\t\t'selectedItemOrder': this.selectedItemOrder(),\n\t\t\t});\n\t\t}\n\t}\n\n\tonClickOrganize = () => {\n\t\tthis.setState({\n\t\t\t'showOrganizer': true,\n\t\t});\n\t}\n\n\tonClickCancel = () => {\n\t\tthis.setState({\n\t\t\t'showOrganizer': false,\n\t\t});\n\t}\n\n\tonClickDone = () => {\n\t\tif (this.state.selectedItemChildListId) {\n\t\t\tconst childList = this.props.listOrganizerData.find((list) => list.id === this.state.selectedItemChildListId);\n\t\t\tif (confirm(`The existing child list '${childList.name}' will become a top level list. Are you sure you want to continue?`)) { // eslint-disable-line no-restricted-globals\n\t\t\t\tthis.setParentItem();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setParentItem();\n\t}\n\n\tsetParentItem() {\n\t\tthis.setState({\n\t\t\t'showOrganizer': false,\n\t\t});\n\n\t\tthis.props.dispatch(listReducer.updateList(\n\t\t\tthis.props.list.id,\n\t\t\t'parent_item_id',\n\t\t\tthis.state.parentItemId));\n\t}\n\n\tonSelectParentItem = ({ list, order, childListId }) => {\n\t\tthis.setState({\n\t\t\t'parentItemId': list.item[order-1],\n\t\t\t'parentListId': list.id,\n\t\t\t'selectedItemChildListId': childListId,\n\t\t\t'selectedItemOrder': order,\n\t\t});\n\t}\n\n\tselectedItemOrder() {\n\t\t// find the order of the parent item\n\t\tlet order; // there may not be a parent item, so there may not be a default selection\n\n\t\tif (this.props.parentListId) {\n\t\t\tlet parentItemId = this.state.parentItemId;\n\t\t\tconst parentList = this.props.listOrganizerData.find(list => list.id === this.props.parentListId);\n\t\t\tlet parentListItems = parentList.item;\n\n\t\t\torder = parentListItems.indexOf(parentItemId);\n\n\t\t\tif (order !== -1) { // item is found\n\t\t\t\torder += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn order;\n\t}\n\n\trenderLists() {\n\t\treturn (\n\t\t\t<div className=\"lists\">\n\t\t\t\t<span>Select a new parent item for this list: </span>\n\t\t\t\t{this.props.listOrganizerData.map(list => {\n\t\t\t\t\tconst showItems = (list.id === this.state.parentListId);\n\n\t\t\t\t\treturn (<OrganizerList\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tlistOrganizerData={this.props.listOrganizerData}\n\t\t\t\t\t\titemOrganizerData={this.props.itemOrganizerData}\n\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\tselectedListId={this.state.parentListId}\n\t\t\t\t\t\tselectedItemOrder={this.state.selectedItemOrder}\n\t\t\t\t\t\tonSelectItem={this.onSelectParentItem.bind(this)}\n\t\t\t\t\t\tshowItems={showItems}\n\t\t\t\t\t/>);\n\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet controls;\n\n\t\tif (this.state.showOrganizer) {\n\t\t\tcontrols = (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<button className=\"btn btn-secondary\" onClick={this.onClickCancel.bind(this)}>Cancel</button>\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.onClickDone.bind(this)}>Done</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>);\n\t\t} else {\n\t\t\tcontrols = (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<button className=\"btn btn-secondary\" onClick={this.onClickOrganize.bind(this)}>Organize...</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={`list-organizer ${this.state.showOrganizer ? 'open' : ''}`}>\n\t\t\t\t{controls}\n\t\t\t\t{this.state.showOrganizer && this.renderLists()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(Organizer);\n","// Full detail view of a list\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport SetListIsPublic from '../components/SetListIsPublic';\nimport EditableTextField from '../components/EditableTextField.js';\nimport ItemsPage from '../components/ItemsPage';\nimport Organizer from '../components/Organizer';\n\nimport * as listReducer from '../modules/list';\nimport * as itemReducer from '../modules/item';\nimport * as permissions from '../modules/permissions';\nimport findObjectByProperty from '../modules/findObjectByProperty';\nimport formatErrorMessages from '../modules/formatErrorMessages';import isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nimport './ListDetail.scss';\n\n\nclass ListDetails extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\t// to start with all we know is the slug. We have to find the list id, and then the list details and items can be loaded\n\t\tthis.getListData = this.getListData.bind(this);\n\t\tconst slug = this.getListData(props);\n\n\t\tthis.state = {\n\t\t\tslug,\n\t\t\t'showOrganizer': false,\n\t\t};\n\t}\n\n\tgetListData = (props) => {\n\t\tconst slug = props.match.params.slug;\n\n\t\tprops.dispatch(listReducer.fetchListBySlug(slug));\n\t\tprops.dispatch(clearErrors());\n\t\treturn slug;\n\t}\n\n\tgetOrganizerData = () => {\n\t\t// minimal data for all my lists and items to allow parent list to be changed.\n\t\t// can't do this until the list has been loaded, to find the owner\n\t\tthis.props.dispatch(listReducer.fetchOrganizerData(this.props.list.created_by));\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(listReducer.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = () => {\n\t\tconst id = this.props.list.id;\n\t\tconst name = this.props.list.name;\n\n\t\tif (confirm(`Are you sure you want to delete the list ${name}?`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t  this.props.dispatch(listReducer.deleteList(id));\n\n\t\t  // if there is a visible parent, navigate there\n\t\t  if (this.props.parentList) {\n\t\t  \tif (permissions.canViewList({ 'id': this.props.parentList.id })) {\n\t\t  \t\tthis.props.history.push(`/list/${this.props.parentList.slug}`);\n\t\t  \t\treturn;\n\t\t  \t}\n\t\t  }\n\n\t\t  // otherwise navigate home\n\t\t  this.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst listId = element.dataset.entityid;\n\n\t\t// the list field to update is coded in the 'state' data e.g. 'list_name'\n\t\t// we want to keep item name and list name clearly separate\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(listReducer.updateList(listId, propertyName, value));\n\t}\n\n\tonCreateChildList = (item) => {\n\t\tthis.props.history.push(`/newlist?parent-item-id=${item.id}&parent-item-name=${item.name}&parent-list-name=${this.props.list.name}&parent-list-slug=${this.props.list.slug}`);\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(listReducer.setListIsPublic({ id, is_public }));\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.isLoading && !this.props.isLoading) {\n\t\t\t// just finished loading; need to check if user should view this list\n\t\t\tthis.getOrganizerData();\n\n\t\t\tconst canEditList = permissions.canEditList({ 'slug': this.state.slug });\n\t\t\tconst canViewList = permissions.canViewList({ 'slug': this.state.slug });\n\n\t\t\tthis.setState({\n\t\t\t\t'canView': canViewList,\n\t\t\t\t'canEdit': canEditList,\n\t\t\t});\n\n\t\t\tif(canViewList) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t'list_name': this.props.list.name,\n\t\t\t\t\t'list_description': this.props.list.description,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// user has navigated to a different list\n\t\tif (prevProps.match.params.slug !== this.props.match.params.slug) {\n\t\t\tconst slug = this.getListData(this.props);\n\t\t\tthis.setState({\n\t\t\t\tslug,\n\t\t\t});\n\t\t}\n\n\t\t// user has just logged out\n\t\t// store needs to be repopulated\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.props.dispatch(listReducer.fetchListBySlug(this.state.slug));\n\t\t\tthis.props.dispatch(clearErrors());\n\t\t}\n\t}\n\n\trenderPage() {\n\t\tif (!this.props.list) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet showPrivacyWarning = false;\n\t\tlet privacyWarningText = '';\n\n\t\tif (this.state.canEdit && this.props.parentList) {\n\t\t\tif (this.props.list.is_public && !this.props.parentList.is_public) {\n\t\t\t\tprivacyWarningText = 'This public list has a private parent list';\n\t\t\t\tshowPrivacyWarning = true;\n\t\t\t} else if (!this.props.list.is_public && this.props.parentList.is_public) {\n\t\t\t\tprivacyWarningText = 'This private list has a public parent list';\n\t\t\t\tshowPrivacyWarning = true;\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t{this.props.list && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t{this.props.parentList && (\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<div className=\"breadcrumbs\"><Link to={`/list/${this.props.parentList.slug}`}>{this.props.parentList.name}</Link> > {this.props.parentItem.name}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.state.canEdit &&\n\t\t\t\t\t\t\t\t<Organizer\n\t\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\t\tparentListId={this.props.parentList ? this.props.parentList.id : undefined}\n\t\t\t\t\t\t\t\t\tlistOrganizerData={this.props.listOrganizerData}\n\t\t\t\t\t\t\t\t\titemOrganizerData={this.props.itemOrganizerData}\n\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\t{showPrivacyWarning && (\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<div className=\"privacy-warning\">{privacyWarningText}</div>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"list-name\">\n\t\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\tname={'list_name'}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a name for the list\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\t\t\t\t\tdata-state={'list_name'} // this.state property\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\t\tid='list_name' // id of the html element\n\t\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.list_name}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t{this.state.canEdit && (\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<div className=\"list-detail-controls\">\n\t\t\t\t\t\t\t\t\t\t\t<SetListIsPublic\n\t\t\t\t\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\t\t\t\t\tonIsPublicChange={this.onIsPublicChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={this.onDeleteList.bind(this)}>Delete</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"list-description\">\n\t\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\t\tname={'list_description'}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a description for the list\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\t\t\t\tdata-state={'list_description'} // this.state property\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\t\tid='list_description' // id of the html element\n\t\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.list_description}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t{this.props.thisListItems && (\n\t\t\t\t\t\t\t\t<ItemsPage\n\t\t\t\t\t\t\t\t\titems={this.props.thisListItems}\n\t\t\t\t\t\t\t\t\tlist={this.props.list.id}\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\tonCreateChildList={this.onCreateChildList}\n\t\t\t\t\t\t\t\t\tonMoveItemUp={this.onMoveItemUp}\n\t\t\t\t\t\t\t\t\tonMoveItemDown={this.onMoveItemDown}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t///////////////\n\n\trender() {\n\t\tlet content;\n\n\t\tif (this.state.canView) {\n\t\t\tcontent = this.renderPage();\n\t\t} else {\n\t\t\tcontent = <p>Either this list does not exist or you do not have permission to view it</p>;\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"list-detail\">\n\t\t\t\t{ content }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nListDetails.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'thisListItems': PropTypes.array.isRequired, // items belonging to this list\n\t'listOrganizerData': PropTypes.array.isRequired, // minimal data for all lists owned by the same user.\n\t'itemOrganizerData': PropTypes.object.isRequired, // minimal data for all lists owned by the same user\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst lists = state.list.things; // details of the current list, with parent and child lists if they exist\n\n\t// first find the target list\n\tconst list = findObjectByProperty({ 'parentObject': lists, 'property': 'slug', 'value': ownProps.match.params.slug });\n\n\tconst parentItemAndList = listReducer.getItemAndList(state, list);\n\n\treturn ({\n\t\t'auth': state.auth,\n\t\t'errors': state.errors,\n\t\t'isLoading': state.list.isLoading,\n\t\t'list': list,\n\t\t'thisListItems': listReducer.getItemsForList(state, list),\n\t\t'parentList': parentItemAndList.parentList,\n\t\t'parentItem': parentItemAndList.parentItem,\n\t\t'listOrganizerData': listReducer.getOrganizerLists(state), // array. limited list info: id, name, item (array of child items), parent_item\n\t\t'itemOrganizerData': itemReducer.getOrganizerItemsByList(state), // object. limited item info: id, name, list_id\n\t});\n};\n\nexport default connect(mapStateToProps)(withRouter(ListDetails));\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.confirmEmailNotSent());\n\t}\n\n\tsendConfirmationEmail() {\n\t\tthis.props.dispatch(auth.sendConfirmationEmail());\n\t}\n\n\trender() {\n\t\tconst emailVerified = this.props.auth.user.emailVerified;\n\t\tconst email_status = emailVerified ? 'verified': 'unverified';\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>My account</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div>Username: {this.props.auth.user.username}</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/changepassword\">Change password</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div>Email address: {this.props.auth.user.email}</div>\n\t\t\t\t\t\t<div>Status: {email_status}</div>\n\t\t\t\t\t\t{!emailVerified &&\t<button type=\"button\" className=\"btn btn-primary\"onClick={this.sendConfirmationEmail.bind(this)}>\n\t\t\t\t\t\t\t\tResend confirmation email\n\t\t\t\t\t\t</button>}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{this.props.auth.confirmEmailSent && (<div className=\"valid-feedback\">A verification email has been sent to {this.props.auth.user.email}. If you do not receive the email within a few minutes, please check your Junk or Spam folder.</div>)}\n\t\t\t\t{this.props.auth.confirmEmailAlreadyVerified && (<div className=\"valid-feedback\">The email address {this.props.auth.user.email} has already been verified.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'sendConfirmationEmail': PropTypes.func.isRequired,\n\t'confirmEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'sendConfirmationEmail': auth.sendConfirmationEmail,\n\t'confirmEmailNotSent': auth.confirmEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.forgotPasswordEmailNotSent());\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.dispatch(auth.forgotPassword(user));\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) &&\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>}\n\t\t\t\t<h2>Forgot your password?</h2>\n\t\t\t\t<p>Enter your email address. A reset password link will be emailed to you.</p>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.email && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.email}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"valid-feedback\">If the address {this.state.email} is associated with an account, an email has been sent. If you don't see it within a few minutes, please check your junk mail folder.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'forgotPassword': auth.forgotPassword,\n\t'forgotPasswordEmailNotSent': auth.forgotPasswordEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { changePassword, passwordNotChanged } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass ChangePassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'old_password': '',\n\t\t\t'new_password': '',\n\t\t\t'new_password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst data = {\n\t\t\t'old_password': this.state.old_password,\n\t\t\t'new_password1': this.state.new_password,\n\t\t\t'new_password2': this.state.new_password_confirm\n\t\t};\n\n\t\tthis.props.changePassword(data, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Change your password</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'new_password',\n\t\t\t\t\t'input2': 'new_password_confirm',\n\t\t\t\t\t'message': 'New passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"old_password\">Old password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"old_password\"\n\t\t\t\t\t\t\t\t\tid=\"old_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.old_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your old password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password\">New password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password_confirm\">Confirm your new password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tChange password now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.changePassword && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.changePassword}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t      {this.props.auth.changePasswordComplete && (<div className=\"valid-feedback\">Your new password has been saved</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nChangePassword.propTypes = {\n\t'changePassword': PropTypes.func.isRequired,\n\t'passwordNotChanged': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ changePassword, passwordNotChanged })(withRouter(ChangePassword));\n","// Shown after user successfully verifies email address\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { logoutUser } from '../modules/auth';\n\nclass Verified extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onLogout();\n\t}\n\n\tonLogout(e) {\n\t\t// just in case a different user is logged in\n\t\t// to avoid confusion and force new login\n\t\tif (this.props.auth.isAuthenticated) {\n\t\t\tthis.props.logoutUser(this.props.history);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Your email address has been verified</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/login\" className=\"nav-link\">Login</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nVerified.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Verified));\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport { setCurrentUser, getUserInfo, logoutUser, getAuthToken } from '../modules/auth';\n\nimport Navbar from '../components/Navbar';\nimport Register from '../components/Register';\nimport Welcome from '../components/Welcome';\nimport Login from '../components/Login';\nimport Home from '../containers/Home';\nimport CreateList from '../containers/CreateList';\nimport ListDetails from '../containers/ListDetail';\nimport Account from '../components/Account';\nimport ForgotPassword from '../components/ForgotPassword';\nimport ChangePassword from '../components/ChangePassword';\nimport Verified from '../components/Verified';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password loads the bootstrap css from static/bootstrap\n\n// check if user is already logged in\nif(getAuthToken()) {\n\tstore.dispatch(setCurrentUser(localStorage.mytoptensJwtToken));\n\tstore.dispatch(getUserInfo());\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.mytoptensJwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\t\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t\t<Route exact path=\"/newlist\" component={ CreateList } />\n\t\t\t\t\t\t\t<Route exact path=\"/list/:slug\" component={ ListDetails } />\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/welcome\" component={ Welcome } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t<Route exact path=\"/changepassword\" component={ ChangePassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/verified\" component={ Verified } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./containers/App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}
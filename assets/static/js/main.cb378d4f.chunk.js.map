{"version":3,"sources":["modules/errors.js","modules/formatErrorMessages.js","modules/fetchAPI.js","modules/isEmpty.js","modules/auth.js","constants/index.js","modules/items.js","modules/lists.js","modules/page.js","modules/rootReducer.js","store.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Welcome.js","components/Login.js","components/ListsList.js","components/SetListIsPublic.js","modules/findObjectByProperty.js","modules/permissions.js","components/ListSummary.js","containers/ListsPage.js","components/FlashMessage.js","containers/Home.js","containers/CreateList.js","components/EditableTextField.js","components/Item.js","components/ItemsPage.js","containers/ListDetail.js","components/Account.js","components/ForgotPassword.js","components/ChangePassword.js","components/Verified.js","containers/App.js","serviceWorker.js","index.js"],"names":["getErrors","error","type","payload","clearErrors","updeep","require","initialState","formatErrorMessages","errors","messageArray","Object","keys","forEach","key","push","map","item","join","fetchAPI","_ref","url","data","_ref$method","method","_ref$useAuth","useAuth","_ref$headers","headers","Authorization","concat","store","getState","auth","user","token","fetch","body","then","response","ok","contentType","get","includes","json","catch","Promise","reject","Error","message","text","html","page_type","status","isEmpty","value","undefined","length","trim","LOGOUT_USER_COMPLETE","setCurrentUser","dispatch","localStorage","setItem","setAuthToken","logoutUser","history","removeItem","logout user","getUserInfo","setUserInfo","username","email","id","slug","emailVerified","email_verified","get user info","forgotPasswordEmailNotSent","forgotPassword","formData","FormData","name","append","request password reset email","passwordNotChanged","changePasswordComplete","confirmEmailNotSent","sendConfirmationEmail","isLoading","isAuthenticated","forgotPasswordEmailSent","resetPasswordComplete","confirmEmailSent","LIST_IS_PUBLIC_VALUES","LIST_IS_PUBLIC_TEXTS","MAX_ITEMS_IN_LIST","CREATE_ITEM_SUCCEEDED","UPDATE_ITEM_SUCCEEDED","DELETE_ITEM_SUCCEEDED","MOVE_ITEM_UP_SUCCEEDED","updateItem","itemId","propertyName","Content-Type","JSON","stringify","defineProperty","updateItemSucceeded","update item","moveItemUp","_ref2","console","log","items","move item up error ","moveItemDown","_ref3","things","listId","list_id","order","item_below_id","lists","initialItemsState","RECEIVE_ENTITIES","FETCH_LISTS_STARTED","FETCH_LISTS_FAILED","FETCH_LIST_BY_SLUG_STARTED","FETCH_LIST_BY_SLUG_FAILED","FILTER_LISTS","CREATE_LIST_STARTED","CREATE_LIST_SUCCEEDED","DELETE_LIST_SUCCEEDED","SET_LIST_IS_PUBLIC_SUCCEEDED","UPDATE_LIST_SUCCEEDED","itemSchema","schema","Entity","list","listSchema","receiveEntities","entities","fetchLists","normalizedData","normalize","fetch lists","fetchListBySlug","createList","create list","updateList","updateListSucceeded","deleteList","deleteListSucceeded","delete list","setListIsPublic","is_public","setListIsPublicSucceeded","set list is public","initialListsState","getFilteredLists","createSelector","state","page","searchTerm","filter","match","RegExp","getFilteredPublicLists","grouped","getMyGroupedAndFilteredLists","created_by_id","combineReducers","arguments","action","toConsumableArray","constant","confirmEmailAlreadyVerified","omit","updateIn","itemIndex","findIndex","newItems","splice","itemsArray","itemsObject","createStore","rootReducer","compose","applyMiddleware","thunk","f","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","a","createElement","className","Link","to","onClick","onLogout","bind","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","Component","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","assertThisInitialized","formLength","checkValidity","i","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","handleSubmit","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","node","setCustomValidity","objectSpread","classNames","assign","noValidate","children","Register","password","password_confirm","handleInputChange","target","password1","password2","registerUser","nextProps","Container","ValidatedForm_ValidatedForm","Row","Col","md","lg","Label","for","Input","required","onChange","minLength","pattern","registration","style","display","Welcome","Login","loginUser","authentication","ListsList","headerText","SetListIsPublic","onIsPublicChange","findObjectByProperty","parentObject","property","childObject","canViewList","identifier","userId","canEditList","canCreateList","ListSummary","canEdit","permissions","sm","description","showCreatedBy","created_by_username","src_components_SetListIsPublic","onDeleteList","ListsPage","onSearch","onAddList","getListsToShow","listsList","ListsToShow","topLevelListsOnly","parent_item","handleTabClick","selectedTab","setListSetURL","listset","URLSearchParams","location","search","prevProps","_this$props","publicLists","listsToShow","components_ListsList","src_components_ListSummary","_this$props2","myLists","index","listsByIsPublic","URL","pathname","renderMyLists","renderPublicLists","check","defaultChecked","handleTopLevelListsChange","renderTabs","FlashMessage","aria-hidden","Home","confirm","onCloseFlashMessage","src_containers_ListsPage","onCreateList","CreateList","parentItem","newList","cancel","newItem","elements","renderItemInputs","EditableTextField","fakeEvent","dataset","initialValue","toggleInput","showInput","overflowActive","textarea","expanded","element","textElement","offsetHeight","scrollHeight","isOverflowActive","keyCode","which","classList","contains","newShowInputValue","isEditing","inputElement","handleNewValue","showMoreButton","onKeyUp","moreButtonText","tabIndex","ref","toggleMore","label","autoFocus","data-state","data-entityid","renderValue","Item","onCreateChildList","onMoveUp","onMoveItemUp","onMoveDown","onMoveItemDown","isEditingName","showDescription","canCreateChildList","childList","canViewChildList","showUp","showDown","src_components_EditableTextField","setIsEditingName","ItemsPage","entityid","split","itemsReducer","toggleForm","showNewItemForm","update","src_components_Item","renderItemsList","ListDetails","getListData","params","parentList","canView","list_name","list_description","showPrivacyWarning","privacyWarningText","components_ItemsPage","content","renderPage","ownProps","targetListItems","testList","indexOf","Account","email_status","ForgotPassword","ChangePassword","old_password","new_password","new_password_confirm","new_password1","new_password2","changePassword","Verified","getItem","mytoptensJwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","window","hostname","navigator","serviceWorker","ready","unregister","render","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.cb378d4f.chunk.js","sourcesContent":["// errorReducer.js\n\nconst GET_ERRORS = 'GET_ERRORS';\nconst CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const getErrors = error => {\n\t// error is an object, e.g. { 'registration': error.message }\n\treturn {\n\t\t'type': GET_ERRORS,\n\t\t'payload': error,\n\t};\n};\n\nexport const clearErrors = () => {\n\treturn {\n\t\t'type': CLEAR_ERRORS,\n\t};\n};\n\nvar updeep = require('updeep');\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\t// ensure we have an array of strings to allow multiple errors to be displayed\n\t\t\tlet errors = {};\n\n\t\t\tObject.keys(action.payload).forEach((key) => {\n\t\t\t\tif (typeof action.payload[key] === 'string') {\n\t\t\t\t\t// a string is simply copied\n\t\t\t\t\terrors[key] = [action.payload[key]];\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = [...action.payload[key]];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn updeep(errors, {}); // clear any existing errors\n\t\t}\n\n\t\tcase CLEAR_ERRORS: {\n\t\t\treturn {};\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// join arrays of error messages from different errors, into a single string.\n// it is expected that there will only ever be one type of error, e.g. 'register', but the object is parsed to be on the safe side.\n/*\n{ {'register': [\n\t\t'email already in use',\n\t\t'username already in use'\n\t\t]},\n\t{'login': [\n\t\t'could not log in'\n\t]\n}\n*/\n\nexport default function (errors) {\n\tlet messageArray = [];\n\tObject.keys(errors).forEach((key) => {\n\t\tif (typeof errors[key] === 'string') {\n\t\t\tmessageArray.push(errors[key]); // plain string error\n\t\t} else { // arary of errors\n\t\t\terrors[key].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\tmessageArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst message = messageArray.join(' ');\n\n\treturn message;\n};\n","// uses fetch to get or post data.\n// passes up useful errors to the calling function.\n// set useAuth to true for validating logged-in user: token will be sent in header\nimport store from '../store';\nimport formatErrorMessages from '../modules/formatErrorMessages';\n\nexport default function fetchAPI({ url, data, method = 'GET', useAuth = false, headers = {} }) {\n\tif (useAuth) {\n\t\theaders.Authorization = `Token ${store.getState().auth.user.token}`;\n\t}\n\n\treturn fetch(url, { headers, 'method': method, 'body': data })\n\t\t.then(response => {\n\t\t\t// fetch returns ok true / false in most situations\n\t\t\t// true is a successful response\n\t\t\tif (response.ok) {\n\t\t\t\tconst contentType = response.headers.get('Content-Type') || '';\n\n\t\t\t\tif (contentType.includes('application/json')) {\n\t\t\t\t\treturn response.json().catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('Invalid JSON: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (contentType.includes('text/html')) {\n\t\t\t\t\treturn response.text().then(html => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'page_type': 'generic',\n\t\t\t\t\t\t\t'html': html\n\t\t\t\t\t\t};\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('HTML error: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// ok == false means some problem to display\n\t\t\t\t// even though no error was returned\n\t\t\t\tif (response.status === 404) {\n\t\t\t\t\treturn Promise.reject(new Error('Page not found: ' + url));\n\t\t\t\t}\n\n\t\t\t\tif (response.status === 500) {\n\t\t\t\t\treturn Promise.reject(new Error('Internal server error: ' + url));\n\t\t\t\t}\n\n\t\t\t\treturn response.json().then(response => {\n\t\t\t\t\t// the server rejected the request, e.g. because of a wrong password, we want to display the reason\n\t\t\t\t\t// the information is contained in the json()\n\t\t\t\t\t// there may be more than one error, so join them into a single string.\n\t\t\t\t\t// multiline display would be more elegant but this will do for now and makes all errors consistent (one message string)\n\n\t\t\t\t\treturn Promise.reject(new Error(formatErrorMessages(response))\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\t// fetch returned an error\n\t\t\treturn Promise.reject(new Error(error.message));\n\t\t});\n};\n","// check for a null, empty, undefined object\n\nconst isEmpty = (value) => {\n\treturn (\n\t\tvalue === undefined ||\n\t\tvalue === null ||\n\t\t(typeof value === 'object' && Object.keys(value).length === 0) ||\n\t\t(typeof value === 'string' && value.trim().length === 0)\n\t);\n};\n\nexport default isEmpty;\n","// authReducer.js\n\nimport store from '../store';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors, clearErrors } from '../modules/errors';\nimport isEmpty from '../modules/isEmpty';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\nexport const PASSWORD_NOT_CHANGED = 'PASSWORD_NOT_CHANGED';\nexport const CHANGE_PASSWORD_COMPLETE = 'CHANGE_PASSWORD_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_NOT_SENT = 'CONFIRM_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_SENT = 'CONFIRM_EMAIL_SENT';\nexport const CONFIRM_EMAIL_ALREADY_VERIFIED = 'CONFIRM_EMAIL_ALREADY_VERIFIED';\n\n// Side effects Services\nexport const getAuthToken = () => {\n\treturn localStorage.getItem('mytoptensJwtToken');\n};\n\nfunction setAuthToken(token) {\n\tlocalStorage.setItem('mytoptensJwtToken', token);\n\treturn;\n}\n\nfunction removeAuthToken() {\n\tlocalStorage.removeItem('mytoptensJwtToken');\n\treturn;\n}\n\nexport const registerUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/registration/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t}).then(response => {\n\t\thistory.push('/welcome');\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'registration': error.message }));\n\t});\n};\n\nexport const loginUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/login/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\treturn dispatch(setCurrentUser(response.key));\n\t}).then(() => {\n\t\thistory.push('/');\n\t\t// after store has been updated with token, we can query the server for current user info\n\t\treturn store.dispatch(getUserInfo());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'authentication': 'Unable to log in with the provided credentials, please try again.' }));\n\t});\n};\n\nexport const setCurrentUser = (token, dispatch) => {\n\tsetAuthToken(token);\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': { token },\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\tdispatch(clearErrors());\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/logout/',\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\tremoveAuthToken();\n\t\treturn dispatch(logoutUserComplete());\n\t}).then(() => {\n\t\t// ensure token is removed from localStorage and store before redirecting\n\t\t// history.push('/');\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'logout user': 'Unable to logout' }));\n\t});\n};\n\n///////////////////////////////\n// get user info\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = () => (dispatch) => {\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/user/',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t}).then(user => {\n\t\treturn dispatch(setUserInfo({\n\t\t\t'username': user.username,\n\t\t\t'email': user.email,\n\t\t\t'id': user.id,\n\t\t\t'slug': user.slug,\n\t\t\t'emailVerified': user.email_verified,\n\t\t}));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'get user info': 'Unable to get user info' }));\n\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/reset/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\t return dispatch(forgotPasswordEmailSent());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'request password reset email': `Unable to send a password reset email. It is likely that the email address ${email} is not associated with a registered user` }));\n\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n//////////////////////////////////\n// change password\nexport const changePassword = (data) => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(passwordNotChanged());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in data) {\n\t\tformData.append(name, data[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/change/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tdispatch(changePasswordComplete());\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'changePassword': error.message }));\n\t});\n};\n\nexport const passwordNotChanged = token => {\n\treturn {\n\t\t'type': PASSWORD_NOT_CHANGED,\n\t};\n};\n\nexport const changePasswordComplete = (token) => {\n\treturn {\n\t\t'type': CHANGE_PASSWORD_COMPLETE,\n\t};\n};\n\n//////////////////////////////////\n// Email confirmation\nexport const confirmEmailNotSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_NOT_SENT\n\t};\n};\n\nexport const confirmEmailSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_SENT\n\t};\n};\n\nexport const confirmEmailAlreadyVerified = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_ALREADY_VERIFIED\n\t};\n};\n\n//////////////////////////////////\n\nexport const sendConfirmationEmail = () => (dispatch) => {\n\tdispatch(clearErrors());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/sendconfirmationemail/',\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tif (response.message === 'Email confirmation sent') {\n\t\t\treturn dispatch(confirmEmailSent());\n\t\t} else if (response.message === 'Email already verified') {\n\t\t\treturn dispatch(confirmEmailAlreadyVerified());\n\t\t}\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'sendConfirmationEmail': error.message }));\n\t});\n};\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isLoading': false,\n\t'isAuthenticated': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'changePasswordComplete': false,\n\t'confirmEmailSent': false,\n\t'user': {}\n};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'isLoading': true,\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user info\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user info\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': false,\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'slug': action.payload.slug,\n\t\t\t\t\t'id': action.payload.id,\n\t\t\t\t\t'emailVerified': action.payload.emailVerified,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// forgot password\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase PASSWORD_NOT_CHANGED: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': false,\n\t\t\t\t'errors': {}\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CHANGE_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// confirm email\n\t\tcase CONFIRM_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': false,\n\t\t\t\t'confirmEmailAlreadyVerified': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_ALREADY_VERIFIED: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailAlreadyVerified': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","export const LIST_IS_PUBLIC_VALUES = [false, true];\nexport const LIST_IS_PUBLIC_TEXTS = ['Private', 'Public'];\nexport const MAX_ITEMS_IN_LIST = 10;\n","// import { createSelector } from 'reselect';\nimport { RECEIVE_ENTITIES } from '../modules/lists';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport store from '../store';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tFETCH_LIST_BY_SLUG_STARTED\n} from './lists';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const CREATE_ITEM_REQUESTED = 'CREATE_ITEM_REQUESTED';\nexport const CREATE_ITEM_SUCCEEDED = 'CREATE_ITEM_SUCCEEDED';\nexport const UPDATE_ITEM_SUCCEEDED = 'UPDATE_ITEM_SUCCEEDED';\nexport const DELETE_ITEM_SUCCEEDED = 'DELETE_ITEM_SUCCEEDED';\nexport const MOVE_ITEM_UP_SUCCEEDED = 'MOVE_ITEM_UP_SUCCEEDED';\n\n////////////////////////////////////\n// create item\nexport const createItem = item => dispatch => {\n\tdispatch(createItemRequested());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/items/',\n\t\t'data': JSON.stringify(item),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\treturn dispatch(createItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create item': error.message }));\n\t});\n};\n\nexport function createItemRequested() {\n\treturn {\n\t\t'type': 'CREATE_ITEM_REQUESTED',\n\t};\n}\n\nexport function createItemSucceeded(item) {\n\treturn {\n\t\t'type': 'CREATE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titem\n\t\t}\n\t};\n}\n\n////////////////////////////////////\n// update item\nexport const updateItem = (itemId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateItemSucceeded({ id }) {\n\treturn {\n\t\t'type': UPDATE_ITEM_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// move item up\nexport const moveItemUp = ({ itemId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/moveup/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tconsole.log('response ', response);\n\t\treturn dispatch(moveItemUpSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'move item up error ': error.message }));\n\t});\n};\n\nexport const moveItemDown = ({ itemId }) => dispatch => {\n\t// to move an item down, we move the item below up\n\t// find the item\n\tconst item = store.getState().items.things[itemId];\n\n\t// find its parent list\n\tconst listId = item.list_id;\n\n\t// find the item's order\n\tconst order = item.order;\n\n\t// find the item below it in the parent list\n\tconst item_below_id = store.getState().lists.things[listId].items[order];\n\n\tdispatch(moveItemUp({ 'itemId': item_below_id }));\n};\n\nexport function moveItemUpSucceeded(items) {\n\treturn {\n\t\t'type': 'MOVE_ITEM_UP_SUCCEEDED',\n\t\t'payload': {\n\t\t\titems,\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// delete item\nexport const deleteItem = ({ itemId, listId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'method': 'DELETE',\n\t}).then(response => {\n\t\treturn dispatch(deleteItemSucceeded({ itemId, listId }));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete item': error.message }));\n\t});\n};\n\nexport function deleteItemSucceeded({ itemId, listId }) {\n\treturn {\n\t\t'type': 'DELETE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titemId,\n\t\t\tlistId\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialItemsState = {\n\t'things': {},\n\t'isLoading': false,\n\t'error': null,\n};\n\nexport default function items(state = initialItemsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialItemsState, {});\n\t\t}\n\t\t\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tif (entities && entities.items) {\n\t\t\t\treturn updeep({ 'things': entities.items, 'isLoading': false }, state);\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'things': updeep.constant({}), // remove all existing items\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\t\t\treturn updeep({ 'things': { [item.id]: item } }, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tcase MOVE_ITEM_UP_SUCCEEDED: {\n\t\t\tconst itemsArray = action.payload.items; // array containing the two items that have been swapped\n\t\t\t// update items.things object, change order\n\n\t\t\tlet itemsObject = {};\n\t\t\titemsArray.map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\titemsObject[item.id] = item;\n\t\t\t});\n\t\t\t//return state;\n\t\t\treturn updeep({ 'things': itemsObject }, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n// all items, for selector to use\nexport const getItems = state => state.items.things;\n\n//// not currently used but left in as an example of sorting list items by order\n// items belonging to the current list\n/* export const sortedItems = createSelector(\n\t[getItems],\n\t(items) => {\n\t\tlet listItems = (Object.keys(items).map(id => {\n\t\t\treturn items[id];\n\t\t})).sort(function(a, b){\n\t\t\treturn a.order - b.order; // sort to index order\n\t\t});\n\n\t\treturn listItems;\n\t}\n); */\n\n","import { createSelector } from 'reselect';\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport { normalize, schema } from 'normalizr';\nimport store from '../store';\n\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tCREATE_ITEM_SUCCEEDED,\n\tDELETE_ITEM_SUCCEEDED,\n\tMOVE_ITEM_UP_SUCCEEDED,\n} from './items';\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const RECEIVE_ENTITIES = 'RECEIVE_ENTITIES';\nexport const FETCH_LISTS_STARTED = 'FETCH_LISTS_STARTED';\nexport const FETCH_LISTS_FAILED = 'FETCH_LISTS_FAILED';\nexport const FETCH_LIST_BY_SLUG_STARTED = 'FETCH_LIST_BY_SLUG_STARTED';\nexport const FETCH_LIST_BY_SLUG_FAILED = 'FETCH_LISTS_FAILED';\nexport const FILTER_LISTS = 'FILTER_LISTS';\nexport const CREATE_LIST_STARTED = 'CREATE_LIST_STARTED';\nexport const CREATE_LIST_SUCCEEDED = 'CREATE_LIST_SUCCEEDED';\nexport const DELETE_LIST_SUCCEEDED = 'DELETE_LIST_SUCCEEDED';\nexport const SET_LIST_IS_PUBLIC_SUCCEEDED = 'SET_LIST_IS_PUBLIC_SUCCEEDED';\nexport const UPDATE_LIST_SUCCEEDED = 'UPDATE_LIST_SUCCEEDED';\n\nconst itemSchema = new schema.Entity('items', {\n\t'list': ['listSchema'],\n});\nconst listSchema = new schema.Entity('lists', {\n\t'items': [itemSchema],\n});\n\nfunction receiveEntities(entities) {\n\treturn {\n\t\t'type': RECEIVE_ENTITIES,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchListsStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_LISTS_STARTED,\n\t};\n}\n\nfunction fetchListsFailed() {\n\treturn {\n\t\t'type': FETCH_LISTS_FAILED\n\t};\n}\n\nexport function fetchLists() {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListsStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return only the lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': '/api/v1/content/lists/',\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\t\t\t\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListsFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////\n// fetch a single list by slug\nexport function fetchListBySlugStarted() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_STARTED,\n\t};\n}\n\nfunction fetchListBySlugFailed() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_FAILED\n\t};\n}\n\nexport function fetchListBySlug(slug) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListBySlugStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return the list if a non-authenticated user should see it.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/list/?slug=${slug}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListBySlugFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\nexport function filterLists(searchTerm) {\n\treturn { \n\t\t'type': FILTER_LISTS,\n\t\t'payload': { searchTerm },\n\t};\n}\n\n/////////////////////////////\n// create list\nexport const createList = (list, history) => dispatch => {\n\tdispatch(createListStarted());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/lists/',\n\t\t'data': JSON.stringify(list),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\tdispatch(createListSucceeded(response));\n\t\thistory.push(`/list/${response.slug}`);\n\t\treturn;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create list': error.message }));\n\t});\n};\n\nexport function createListStarted() {\n\treturn {\n\t\t'type': CREATE_LIST_STARTED,\n\t};\n}\n\nexport function createListSucceeded(list) {\n\treturn {\n\t\t'type': CREATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tlist\n\t\t}\n\t};\n}\n\n///////////////////////////\n// update list\nexport const updateList = (listId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${listId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateListSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateListSucceeded({ id }) {\n\treturn {\n\t\t'type': UPDATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t}\n\t};\n}\n\n///////////////////////////\n// delete list\nexport const deleteList = id => (dispatch, getState) => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'method': 'DELETE',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(deleteListSucceeded(id));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete list': error.message }));\n\t});\n};\n\nexport function deleteListSucceeded(id) {\n\treturn {\n\t\t'type': DELETE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport const setListIsPublic = ({ id, is_public }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ is_public }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(setListIsPublicSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'set list is public': error.message }));\n\t});\n};\n\nexport function setListIsPublicSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': SET_LIST_IS_PUBLIC_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\n// this is initial state of lists and the list loading states\nconst initialListsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'things': {},\n};\n\n// 'state' here is global state\nexport const getSearchTerm = state => {\n\treturn state.page.searchTerm;\n};\n\nexport const getLists = state => {\n\treturn Object.keys(state.lists.things).map(id => {\n\t\treturn state.lists.things[id];\n\t});\n};\n\nexport const getFilteredLists = createSelector(\n\t[getLists, getSearchTerm],\n\t(lists, searchTerm) => {\n\t\treturn lists.filter(list => {\n\t\t\t// if no search term, return every list\n\t\t\tif (searchTerm === '') {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\treturn list.name.match(new RegExp(searchTerm, 'i'));\n\t\t});\n\t}\n);\n\nexport const getGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => list.is_public === is_public);\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\nexport const getFilteredPublicLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\treturn lists.filter(list => {\n\t\t\treturn list.is_public;\n\t\t});\n\t}\n);\n\nexport const getMyGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => (list.created_by_id === store.getState().auth.user.id) && (list.is_public === is_public));\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\n// state here is the substate state.lists\n// the book uses 'items' for the list of things i.e. lists. items\n// as 'items' for us is a specific thing, we need another name for the set of entities to be displayed i.e. the lists themselves\n// so those are globalState.lists.things\n// i.e. state.things here\nexport default function lists(state = initialListsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialListsState, {});\n\t\t}\n\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tlet lists = {};\n\n\t\t\tif (entities && entities.lists) {\n\t\t\t\tlists = entities.lists; // there is at least one list\n\t\t\t}\n\n\t\t\treturn updeep({ 'things': lists, 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': true,\n\t\t\t\t'things': updeep.constant({}), // remove all existing lists\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase CREATE_LIST_STARTED: {\n\t\t\t// at present this does nothing, it's really just to track that the action happened\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase CREATE_LIST_SUCCEEDED: {\n\t\t\tconst list = action.payload.list;\n\t\t\treturn updeep({ 'things': { [list.id]: list } }, state);\n\t\t}\n\n\t\tcase DELETE_LIST_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tcase SET_LIST_IS_PUBLIC_SUCCEEDED: {\n\t\t\tconst listId = action.payload.id;\n\n\t\t\treturn updeep({ 'things': { [listId]: { 'is_public': action.payload.is_public } } }, state);\n\t\t\t// reminder of another way to update nested arrays\n\t\t\t/* const index = state.things.findIndex((list) => list.id === action.payload.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\treturn updeep.updateIn(`things.${index}.is_public`, action.payload.is_public, state);\n\t\t\t} \n\n\t\t\treturn state; // in case list was not found\n\t\t\t*/\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\n\t\t\tfunction addItem(items) {\n\t\t\t\treturn [].concat(items, item.id);\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${item.list}.items`, addItem, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\tfunction deleteItem(items) {\n\t\t\t\tconst itemIndex = items.findIndex((item) => item === action.payload.itemId); \n\t\t\t\tlet newItems = [].concat(items);\n\t\t\t\tnewItems.splice(itemIndex, 1);\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${action.payload.listId}.items`, deleteItem, state);\n\t\t}\n\n\t\tcase MOVE_ITEM_UP_SUCCEEDED: {\n\t\t\tconst itemsArray = action.payload.items; // array containing the two items that have been swapped\n\t\t\t// update the Items array in their parent list, change order\n\t\t\tconst listId = itemsArray[0].list_id;\n\n\t\t\tfunction replaceItems(items) {\n\t\t\t\tlet newItems = [].concat(items);\n\t\t\t\titemsArray.map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\t\tnewItems[item.order-1] = item.id;\n\t\t\t\t});\n\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${listId}.items`, replaceItems, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","import {\n\tFILTER_LISTS,\n} from './lists';\n\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'searchTerm': '',\n};\n\nexport default function page(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FILTER_LISTS: {\n\t\t\treturn updeep({ 'searchTerm': action.payload.searchTerm }, state);\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","// index.js\n\n// import the partial reducers\nimport { combineReducers } from 'redux';\nimport errors from './errors';\nimport auth from './auth';\nimport page from './page';\nimport lists from './lists';\nimport items from './items';\n// by importing the actual reducer as the default, the state of each is initialised\n\nexport default combineReducers({\n\t'errors': errors,\n\t'auth': auth,\n\t'page': page,\n\t'lists': lists,\n\t'items': items,\n});\n","// store.js\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules/rootReducer';\n\nconst store = createStore(\n\trootReducer, \n\t// inititalState, // by not supplying initial state, we tell the store to use the defaults specified in the reducer\n\tcompose(applyMiddleware(thunk), \n\t\tprocess.env.NODE_ENV !== 'production' &&\n    window.devToolsExtension ? window.devToolsExtension() : f => f)); // devTools in production break app on mobile\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./modules/rootReducer', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../modules/auth';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(e);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's handleSubmit\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email address to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row md=\"9\" lg=\"6\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.registration && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.registration}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Shown after successful registration of a new user\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Welcome extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Welcome to My Top Tens</h2>\n\t\t\t\t<p>Your account has been created.</p>\n\t\t\t\t<p>To create lists, you will need to verify your email address. An email containing a verification link has been sent to the email address with which you registered. Please click the link to verify your email address.</p>\n\t\t\t\t<p>If you do not receive the email within a few minutes, please check your Junk or Spam folder.</p>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<p>You can request a new registration email by <Link to=\"/login\">Logging in</Link> and going to your user account (click your username in the header bar).</p>\n\t\t\t\t\t\t\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nWelcome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps)(Welcome);\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={this.handleSubmit.bind(this)}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange.bind(this) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.authentication && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.authentication}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","// List of all lists\n\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst ListsList = ({ children, is_public, headerText }) => {\n\treturn (\n\t\t<Container className=\"lists-list\">\n\t\t\t{headerText &&\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h3 className=\"lists-list-name\">\n\t\t\t\t\t\t{headerText}\n\t\t\t\t\t</h3>\n\t\t\t\t</Col>\n\t\t\t</Row>}\n\t\t\t<Row>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default ListsList;\n","// Set whether the list is public\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport React from 'react';\nimport { Label } from 'reactstrap';\n\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nimport './SetListIsPublic.scss';\n\nconst SetListIsPublic = props => {\n\tlet id=`select-${props.list.id}`;\n\tlet value = props.list.is_public ? 'Public' : 'Private';\n\n\tfunction onIsPublicChange(e) {\n\t\t// map from select options to true / false\n\t\tconst value = e.target.value === 'Public' ? true : false;\n\t\tprops.onIsPublicChange({ 'id': props.list.id, 'is_public': value });\n\t}\n\n\treturn (\n\t\t<div className=\"list-status\">\n\t\t\t<Label>Set list private/public status\n\t\t\t\t<select className=\"form-control\" value={value} onChange={onIsPublicChange} id={id}>\n\t\t\t\t\t{LIST_IS_PUBLIC_TEXTS.map(is_public => (\n\t\t\t\t\t\t<option key={is_public} value={is_public}>{is_public}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</Label>\n\t\t</div>\n\t);\n};\n\nexport default SetListIsPublic;\n","export default function findObjectByProperty({ parentObject, property, value }) {\n\t// e.g. find a list in the store based on its slug\n\t// it feels like there ought to be a smarter way to do this!\n\t// but this does work, and stops once the object is found\n\tconst keys = Object.keys(parentObject);\n\n\tfor (let i=0; i<keys.length; i++) {\n\t\tlet childObject = parentObject[keys[i]];\n\t\tif (childObject[property] === value) {\n\t\t\treturn childObject;\n\t\t}\n\t}\n\n\treturn;\n}\n","// check whether the user can perform actions on lists, items\n// items inherit permissions from their list\n\n// result depends on whether they are logged in:\n// whether they own the list:\n// whether the list is public\n\n// list may be identified by id (primary key) or by slug (provided by URL)\n// for viewing, we could trust the server that if a list is returned, it can be viewed.\n// but for editing, we need to check if the user created it\n\n// identifier should be like { 'slug': 'abc' } or { 'id': 'efg' } i.e. an object with one property\n\nimport store from '../store';\nimport findObjectByProperty from './findObjectByProperty';\n\nexport function canViewList(identifier) {\n\t// a list can be viewed if public or if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.lists.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canViewList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.is_public || (list.created_by_id === userId))) {\n\t\t\tcanViewList = true;\n\t\t}\n\t}\n\n\treturn canViewList;\n}\n\nexport function canEditList(identifier) {\n\t// a list can be edited if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.lists.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canEditList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.created_by_id === userId)) {\n\t\t\tcanEditList = true;\n\t\t}\n\t}\n\n\treturn canEditList;\n}\n\nexport function canCreateList() {\n\t// the user can create a list if they are logged in\n\t// and have verified their email address\n\tconst state = store.getState();\n\n\tif (state.auth.isAuthenticated && state.auth.user.emailVerified) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n","// Top-level summary of a list\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport SetListIsPublic from './SetListIsPublic';\n\nimport * as permissions from '../modules/permissions';\n\nimport './ListSummary.scss';\n\nconst ListSummary = props => {\n\tlet canEdit = permissions.canEditList({ 'id': props.list.id });\n\n\treturn (\n\t\t<Col sm=\"12\" md=\"6\">\n\t\t\t<div className=\"list-summary\">\n\t\t\t\t<Link to={`/list/${props.list.slug}`}>\n\t\t\t\t\t<div className=\"list-header\">\n\t\t\t\t\t\t<div>{props.list.name}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"list-body\">{props.list.description}</div>\n\t\t\t\t</Link>\n\t\t\t\t{props.showCreatedBy && \n\t\t\t\t\t<div className=\"list-created-by\">{props.list.created_by_username}</div>\n\n\t\t\t\t}\n\t\t\t\t{canEdit && (\n\t\t\t\t\t<div className=\"list-controls\">\n\t\t\t\t\t\t<SetListIsPublic\n\t\t\t\t\t\t\tlist={props.list}\n\t\t\t\t\t\t\tonIsPublicChange={props.onIsPublicChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={onDeleteList}>Delete</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Col>\n\t);\n\n\tfunction onDeleteList(e) {\n\t\tprops.onDeleteList({ 'id': props.list.id, 'name': props.list.name });\n\t}\n};\n\nexport default ListSummary;\n","// Page to display list of lists\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ListsList from '../components/ListsList';\nimport ListSummary from '../components/ListSummary';\nimport './ListsPage.scss';\n\nclass ListsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// which set of lists to view\n\t\t// if logged in, default my-lists\n\t\t// if not logged in, only show public-lists\n\t\tlet listset = 'public-lists';\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(this.props.location.search);\n\t\t\tlistset = urlParams.get('listset') || 'my-lists';\n\t\t}\n\n\t\tthis.setListSetURL(listset);\n\n\t\tthis.state = {\n\t\t\t'selectedTab': listset,\n\t\t\t'topLevelListsOnly': true,\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// user has just logged out\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': 'public-lists',\n\t\t\t});\n\n\t\t\tthis.setListSetURL('public-lists');\n\t\t}\n\t}\n\n\tonSearch = e => {\n\t\tthis.props.onSearch(e.target.value);\n\t}\n\n\tonAddList = () => {\n\t\tthis.props.history.push('/newlist');\n\t}\n\n\tgetListsToShow = (listsList) => {\n\t\tlet ListsToShow = [];\n\n\t\t// filter out lists that are not top level\n\t\tif (this.state.topLevelListsOnly) {\n\t\t\tlistsList.map(list => { // eslint-disable-line array-callback-return\n\t\t\t\tif (!list.parent_item) {\n\t\t\t\t\tListsToShow.push(list);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ListsToShow;\n\t\t}\n\n\t\treturn listsList;\n\t}\n\n\trenderPublicLists() {\n\t\tconst { publicLists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\tconst listsToShow = this.getListsToShow(publicLists);\n\n\t\treturn (\n\t\t\t<ListsList headerText=\"All public lists\">\n\t\t\t\t{listsToShow.map(list => \n\t\t\t\t\t<ListSummary\n\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\tshowCreatedBy={true}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ListsList>\n\t\t);\n\t}\n\n\trenderMyLists() {\n\t\tconst { myLists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\treturn Object.keys(myLists).map((is_public, index) => {\n\t\t\tconst listsByIsPublic = myLists[is_public];\n\t\t\tlet headerText = is_public === 'true' ? 'My public lists' : 'My private lists';\n\n\t\t\tconst listsToShow = this.getListsToShow(listsByIsPublic);\n\n\t\t\treturn (\n\t\t\t\t<div key={index}>\n\t\t\t\t\t{(listsToShow.length > 0) && (\n\t\t\t\t\t\t<ListsList is_public={is_public} headerText={headerText}>\n\t\t\t\t\t\t\t{listsToShow.map(list => \n\t\t\t\t\t\t\t\t<ListSummary\n\t\t\t\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ListsList>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\tsetListSetURL(listset) {\n\t\tlet URL = `${this.props.location.pathname}?listset=${listset}`;\n\t\tthis.props.history.push(URL);\n\t}\n\n\thandleTopLevelListsChange() {\n\t\tthis.setState({\n\t\t\t'topLevelListsOnly': !this.state.topLevelListsOnly,\n\t\t});\n\t}\n\n\thandleTabClick = (e) => {\n\t\tif (this.state.selectedTab !== e.target.id) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': e.target.id,\n\t\t\t});\n\n\t\t\tthis.setListSetURL(e.target.id);\n\t\t}\n\t}\n\n\trenderTabs() {\n\t\treturn (\n\t\t\t<ul><li>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.state.selectedTab === 'my-lists'? 'selected' : ''}\n\t\t\t\t\tid='my-lists'\n\t\t\t\t\tonClick={this.handleTabClick}>My lists\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.state.selectedTab === 'public-lists'? 'selected' : ''}\n\t\t\t\t\tid='public-lists'\n\t\t\t\t\tonClick={this.handleTabClick}>Public lists\n\t\t\t\t</span>\n\t\t\t</li></ul>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet listsList;\n\n\t\tif (this.state.selectedTab === 'my-lists') {\n\t\t\tlistsList = this.renderMyLists();\n\t\t} else if (this.state.selectedTab === 'public-lists') {\n\t\t\tlistsList = this.renderPublicLists();\n\t\t}\n\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"lists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet createList;\n\t\tif (this.props.canCreateList()) {\n\t\t\tcreateList = (<button\n\t\t\t\tclassName=\"btn btn-primary create-list\"\n\t\t\t\tonClick={this.onAddList}\n\t\t\t>+ New list</button>);\n\t\t} else if (this.props.auth.isAuthenticated) {\n\t\t\tcreateList = (<div>In order to create new lists, please verify your email address by clicking the link in the email you were sent when you registered. You can request a new verification email from your <Link to=\"/account\">Account</Link> page.</div>);\n\t\t} else {\n\t\t\tcreateList = (<div>In order to create new lists, please <Link to=\"/login\">log in</Link> or <Link to=\"/register\">register a My Top Tens account</Link>.</div>);\n\t\t}\n\n\n\t\treturn (\n\t\t\t<div className=\"lists-list\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col  className=\"top-level-lists-control\">\n\t\t\t\t\t\t\t<Label check>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tdefaultChecked={this.state.topLevelListsOnly}\n\t\t\t\t\t\t\t\t\tonChange={this.handleTopLevelListsChange.bind(this)}/>{' '}\n\t\t\t\t\t\t\t\tShow top level lists only\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col sm=\"12\" md=\"9\">\n\t\t\t\t\t\t\t<div className=\"search\">\n\t\t\t\t\t\t\t\t<Input className=\"form-control\"\n\t\t\t\t\t\t\t\t\tonChange={this.onSearch}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{createList}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t{this.props.auth.isAuthenticated && <div className=\"tabs\">\n\t\t\t\t\t{this.renderTabs()}\n\t\t\t\t\t<div className=\"clearing\"></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"lists\">\n\t\t\t\t\t{listsList}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ListsPage);\n","import React from 'react';\n\n// onClick should dismiss the condition that caused the FlashMessage to be displayed\n// it is the responsibility of the component that triggers the FlashMessage, to also provide the way to dismiss it\nexport default function FlashMessage({ message, type, onClick }) {\n\treturn (\n\t\t<div className={`flash-error ${type}`}>\n\t\t\t<span>{message}</span>\n\t\t\t<button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={onClick}>\n\t\t\t  <span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","// Home.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport ListsPage from './ListsPage';\n\nimport * as lists from '../modules/lists';\nimport { getFilteredPublicLists, getMyGroupedAndFilteredLists } from '../modules/lists';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\t\n\t\tprops.dispatch(clearErrors());\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(lists.fetchLists());\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user's status has changed, refresh Lists\n\t\tif(prevProps.auth.user.token !== this.props.auth.user.token){\n\t\t\tthis.props.dispatch(lists.fetchLists());\n\t\t}\n\t}\n\n\tonSearch = searchTerm => {\n\t\tthis.props.dispatch(lists.filterLists(searchTerm));\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(lists.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = ({ id, name }) => {\n\t\tif (confirm(`Are you sure you want to delete the list ${name}`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t  this.props.dispatch(lists.deleteList(id));\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<ListsPage\n\t\t\t\t\tauth={this.props.auth}\n\t\t\t\t\tmyLists={this.props.myLists}\n\t\t\t\t\tpublicLists={this.props.publicLists}\n\t\t\t\t\tcanCreateList={permissions.canCreateList}\n\t\t\t\t\tonSearch={this.onSearch}\n\t\t\t\t\tonCreateList={this.onCreateList}\n\t\t\t\t\tonIsPublicChange={this.onIsPublicChange}\n\t\t\t\t\tonDeleteList={this.onDeleteList}\n\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'publicLists': PropTypes.array.isRequired,\n\t'myLists': PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.lists.isLoading,\n\t'publicLists': getFilteredPublicLists(state),\n\t'myLists': getMyGroupedAndFilteredLists(state),\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { createList } from '../modules/lists';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\n\nimport ValidatedForm from '../components/ValidatedForm.js';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nimport './CreateList.scss';\n\nclass CreateList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'name': '',\n\t\t\t'description': '',\n\t\t};\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`item${i}_name`] = '';\n\t\t\tthis.state[`item${i}_description`] = '';\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\n\t\tprops.dispatch(clearErrors());\n\n\t\tlet parentItem;\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(props.location.search);\n\t\t\tparentItem = urlParams.get('parent-item');\n\t\t}\n\n\t\tif (typeof parentItem === 'string') {\n\t\t\tthis.state.parentItem = parentItem;\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tcancel(e) {\n\t\tthis.props.history.push('/');\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tlet newList = {\n\t\t\t'name': this.state.name,\n\t\t\t'description': this.state.description,\n\t\t\t'items': [],\n\t\t};\n\t\t\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tif (this.state[`item${i}`] !== '') {\n\t\t\t\tconst newItem = {\n\t\t\t\t\t'name': this.state[`item${i}_name`],\n\t\t\t\t\t'description': this.state[`item${i}_description`],\n\t\t\t\t\t'order': i,\n\t\t\t\t};\n\t\t\t\tnewList.items.push(newItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.state.parentItem) {\n\t\t\tnewList.parent_item = this.state.parentItem;\n\t\t}\n\n\t\tthis.onCreateList(newList);\n\t}\n\n\tonCreateList = (newList) => {\n\t\tthis.props.dispatch(createList(newList, this.props.history));\n\t}\n\n\n\tcomponentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user cannot create a list, redirect to Home\n\t\tif(!permissions.canCreateList() && !this.props.auth.isLoading){\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderItemInputs() {\n\t\tlet elements = [];\n\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\telements.push(\n\t\t\t\t<div className=\"form-group\" key={`item${i}`}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<h3>Item {i}</h3>\n\t\t\t\t\t\t\t<Label for={`item${i}_name`}>Name</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_name`}\n\t\t\t\t\t\t\t\tid={`item${i}_name`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_name`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<Label for={`item${i}_description`}>Description</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tname={`item${i}_description`}\n\t\t\t\t\t\t\t\tid={`item${i}_description`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_description`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>);\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<h2>Create a new list</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t\t<Label for=\"name\">Name</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.name }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Name is required</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Description</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.description }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.renderItemInputs()}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSave list\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t{this.props.errors.lists && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.lists}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nCreateList.propTypes = {\n\t//'createList': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n});\n\nexport default connect(mapStateToProps)(withRouter(CreateList));\n","// An input or textarea that can be edited by clicking on it\n// It can be blank, or required\n// note custom property data-state which is the name of the property in this.state\n// Can be used with keyboard only\n// It is a regular form with cancel, submit. This allows keyboard navigation but the form stays open on blur - otherwise cancel would not be possible with keyboard.\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Row, Col, Label, Input } from 'reactstrap';\nimport './EditableTextField.scss';\n\nclass EditableTextField extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'showInput': false,\n\t\t\t'isValidated': false,\n\t\t\t'initialValue': '',\n\t\t\t'overflowActive': false,\n\t\t\t'type': props.textarea ? 'textarea' : 'input',\n\t\t};\n\n\t\tif (props.textarea === true) {\n\t\t\tthis.state.expanded = false;\n\t\t}\n\t}\n\n\t// does the text overflow its container?\n\tisOverflowActive() {\n\t\tif (!this.props.textarea) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst element = this.textElement;\n\t\tif (!element) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst overflowActive = element.offsetHeight < element.scrollHeight;\n\n\t\tif (overflowActive !== this.state.overflowActive) {\n\t\t\tthis.setState({ 'overflowActive': overflowActive });\n\t\t}\n\t}\n\n\ttoggleMore() {\n\t\tthis.setState({\n\t\t\t'expanded': !this.state.expanded,\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.isOverflowActive();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.isOverflowActive();\n\t}\n\n\tonKeyUp(e) {\n\t\tvar code = e.keyCode || e.which;\n\t\tif(code === 13) { //13 is the enter keycode\n\t\t\tthis.showInput(e);\n\t\t}\n\t}\n\n\tshowInput(e) {\n\t\tconst isPlaceholder = e.target.classList.contains('placeholder');\n\n\t\tif (!isPlaceholder) {\n\t\t\tthis.setState({\n\t\t\t\t'initialValue': e.target.textContent,\n\t\t\t});\n\t\t}\n\t\tthis.toggleInput();\n\t}\n\n\ttoggleInput() {\n\t\tconst newShowInputValue = !this.state.showInput;\n\n\t\t// optionally, tell the parent component whether the field is being edited\n\t\tif (typeof this.props.isEditing === 'function') {\n\t\t\tthis.props.isEditing(newShowInputValue);\n\t\t}\n\n\t\tthis.setState({\n\t\t\t'showInput': newShowInputValue,\n\t\t});\n\t}\n\n\tcancel = () => {\n\t\t// restore the initial value of the field as though the user had just entered it\n\t\tconst fakeEvent = {\n\t\t\t'target': {\n\t\t\t\t'dataset': { 'state': this.props['data-state'] },\n\t\t\t\t'value': this.state.initialValue,\n\t\t\t}\n\t\t};\n\t\tthis.props.handleInputChange(fakeEvent);\n\t\tthis.toggleInput();\n\t}\n\n\tvalidate = () => {\n\t\t// custom validation for consistency with other forms\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst elem = formEl.querySelector(this.state.type);\n\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\tif (!elem.validity.valid) {\n\t\t\tlet message = elem.validationMessage;\n\t\t\terrorLabel.textContent = message;\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\terrorLabel.textContent = '';\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\t// the user has typed a new value and the parent component should be notified\n\n\t\tconst inputElement = e.target.querySelector(this.state.type);\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.handleNewValue(inputElement);\n\t\t\tthis.toggleInput();\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t}\n\n\trenderValue() {\n\t\t// construct the display of the text value\n\t\tlet expanded = '';\n\t\tif (this.state.expanded) {\n\t\t\texpanded = 'expanded';\n\t\t}\n\n\t\tlet showMoreButton = false;\n\n\t\tif (this.state.overflowActive || this.state.expanded) {\n\t\t\tshowMoreButton = true;\n\t\t}\n\n\t\tlet moreButtonText = 'More...';\n\t\tif (this.state.expanded) {\n\t\t\tmoreButtonText = 'Less...';\n\t\t}\n\n\t\tlet onClick;\n\t\tlet onKeyUp;\n\t\tlet tabIndex = '';\n\n\t\tif (this.props.canEdit) {\n\t\t\ttabIndex = '0';\n\t\t\tonClick=this.showInput.bind(this);\n\t\t\tonKeyUp=this.onKeyUp.bind(this);\n\t\t}\n\n\t\tlet item = (\n\t\t\t<span>\n\t\t\t\t<span className={`text ${expanded}`}\n\t\t\t\t\tref={ref => (this.textElement = ref)}\n\t\t\t\t\tonKeyUp={onKeyUp}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\ttabIndex={tabIndex}\t\n\t\t\t\t>{this.props.value}{showMoreButton && <span className=\"fader\"></span>}</span>\n\t\t\t\t{showMoreButton && <button type=\"button\" className=\"show-more\" onClick={this.toggleMore.bind(this)}>{moreButtonText}</button>}\n\t\t\t</span>\n\t\t);\n\n\t\treturn item;\n\t}\n\n\trender() {\n\t\tlet type = 'text';\n\t\tif (this.props.textarea) {\n\t\t\ttype = 'textarea';\n\t\t}\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (this.props.className) {\n\t\t\tclassNames = [...this.props.className];\n\t\t\tdelete this.props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\tconst showInput = this.state.showInput;\n\t\tlet item;\n\n\t\tif (this.props.canEdit) {\n\t\t\tif (showInput) {\t\t\t\n\t\t\t\titem = (\n\t\t\t\t\t<form\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tonSubmit={this.handleSubmit.bind(this)}\n\t\t\t\t\t\tclassName={classNames}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<Label for={this.props.id}>{this.props.label}</Label>\n\t\t\t\t\t\t\t\t\t<Input autoFocus\n\t\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\t\tname={this.props.id}\n\t\t\t\t\t\t\t\t\t\trequired={this.props.required}\n\t\t\t\t\t\t\t\t\t\tdata-state={this.props['data-state']}\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props['data-entityid']}\n\t\t\t\t\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\t\t\t\t\tonChange={this.props.handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\" onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tDone\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</form>);\n\t\t\t} else {\n\t\t\t\tif (this.props.value !== '') {\n\t\t\t\t\titem = this.renderValue();\n\t\t\t\t} else {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"placeholder\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\tonClick={this.showInput.bind(this)}\n\t\t\t\t\t\t\tonKeyUp={this.onKeyUp.bind(this)}\n\t\t\t\t\t\t>{this.props.placeholder}</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.props.value !== '') {\n\t\t\t\titem = this.renderValue();\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className={`editable-text-field ${showInput && 'editing'}`}>\n\t\t\t\t{ item }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditableTextField;\n","// An individual item\n// It is a stateful component so that the description field can be shown only if there is a name defined.\n\nimport store from '../store';\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport EditableTextField from './EditableTextField.js';\nimport * as permissions from '../modules/permissions';\nimport './Item.scss';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nclass Item extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\t'isEditingName': false,\n\t\t};\n\t}\n\n\tsetIsEditingName(showInput) {\n\t\tthis.setState({\n\t\t\t'isEditingName': showInput,\n\t\t});\n\t}\n\n\tonCreateChildList = () => {\n\t\tthis.props.onCreateChildList(this.props.item.id);\n\t}\n\n\tonMoveUp = () => {\n\t\tthis.props.onMoveItemUp(this.props.item.id);\n\t}\n\n\tonMoveDown = () => {\n\t\tthis.props.onMoveItemDown(this.props.item.id);\n\t}\n\n\trender() {\n\t\tlet showDescription = true;\n\t\tif (this.props.item.name === '') {\n\t\t\tshowDescription = false;\n\t\t} else if (this.state.isEditingName && store.getState().items.things[this.props.item.id] && store.getState().items.things[this.props.item.id].name === '') {\n\t\t\tshowDescription = false;\n\t\t}\n\n\t\tlet canCreateChildList = true; // should the \"create child list\" button be visible?\n\n\t\tif (this.props.item.childList || // there is already a child list\n\t\t\tthis.props.item.name === '' || // there is no item\n\t\t\tthis.state.isEditingName || // the item name is being edited\n\t\t\t!this.props.canEdit) { // the user can't edit this list\n\t\t\tcanCreateChildList = false;\n\t\t}\n\n\t\tlet canViewChildList = false;\n\n\t\t// child list exists and user can view it\n\t\tif (this.props.item.childList && permissions.canViewList({ 'slug': this.props.item.childList.slug })) {\n\t\t\tcanViewChildList = true;\n\t\t}\n\n\t\tlet childList;\n\n\t\tif (canCreateChildList) {\n\t\t\tchildList = (<button className=\"btn btn-primary create-childlist\" onClick={this.onCreateChildList.bind(this)}>Create child list</button>);\t\n\t\t} else if (canViewChildList) {\n\t\t\tchildList = (\n\t\t\t\t<div className=\"child-list\">\t\n\t\t\t\t\t<Link to={`/list/${this.props.item.childList.slug}`}>{this.props.item.childList.name} ></Link>\n\t\t\t\t</div>);\n\t\t}\n\n\t\tlet showUp = true;\n\t\tlet showDown = true;\n\n\t\tif (!this.props.canEdit ||\n\t\t\tthis.props.item.name === '' ||\n\t\t\t!showDescription) { // assume that showDescription means there is a saved name i.e. the item exists\n\t\t\tshowUp = false;\n\t\t\tshowDown = false;\n\t\t} else if (this.props.item.order === 1) {\n\t\t\tshowUp = false;\n\t\t} else if (this.props.item.order === MAX_ITEMS_IN_LIST) {\n\t\t\tshowDown = false;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"item-container\">\n\t\t\t\t<div className=\"item-header\">\n\t\t\t\t\t<span className=\"order\">{this.props.item.order}:</span><EditableTextField\n\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\tname={`${this.props.item.order}_name`}\n\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\tplaceholder=\"Click here to add an item\"\n\t\t\t\t\t\tdata-state={`${this.props.item.order}_name`}\n\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\tid={`${this.props.item.order}_name`} // id of the html element\n\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\tisEditing={this.setIsEditingName.bind(this)}\n\t\t\t\t\t\tvalue={this.props.item.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{childList}\n\t\t\t\t{showDescription &&\n\t\t\t\t\t<div className=\"item-body\">\n\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\t\tname={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tplaceholder=\"Click here to add a description\"\n\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\tdata-state={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\t\tid={`${this.props.item.order}_description`} // id of the html element\n\t\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\t\tvalue={this.props.item.description}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{showUp && <button className=\"btn btn-secondary move-up\" onClick={this.onMoveUp.bind(this)}>Up</button>\n\t\t\t\t}\n\t\t\t\t{showDown && <button className=\"btn btn-secondary move-down\" onClick={this.onMoveDown.bind(this)}>Down</button>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Item;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\n\nimport * as itemsReducer from '../modules/items';\n\nimport { MAX_ITEMS_IN_LIST } from '../constants';\nimport Item from './Item';\n\nclass ItemsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\n\t\t// set up the state to hold each item's name and description\n\t\t// coded by order\n\t\t// this is not elegant but keeps state flat\n\t\tfor (let i=1; i<= MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`${i}_name`] = '';\n\t\t\tthis.state[`${i}_description`] = '';\n\t\t}\n\n\t\t// build the items\n\t\t// each item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst items = this.props.items;\n\n\t\tObject.keys(items).forEach((key) => {\n\t\t\tif (items[key].order && items[key].order <= MAX_ITEMS_IN_LIST) {\n\t\t\t\tconst order = items[key].order;\n\n\t\t\t\tthis.state[`${order}_id`] = items[key].id;\n\t\t\t\tthis.state[`${order}_name`] = items[key].name;\n\t\t\t\tthis.state[`${order}_description`] = items[key].description;\n\n\t\t\t\t// child lists\n\t\t\t\tif (items[key].childList) {\n\t\t\t\t\tthis.state[`${order}_childList`] = items[key].childList;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tlet update = [];\n\t\tfor (let i=0; i<this.props.items.length; i++) {\n\t\t\tconst item = this.props.items[i];\n\n\t\t\tif (prevProps.items[i].id !== this.props.items[i].id) {\n\t\t\t\tconst order = item.order;\n\n\t\t\t\t// update item properties\n\t\t\t\tupdate[`${order}_id`] = item.id;\n\t\t\t\tupdate[`${order}_name`] = item.name;\n\t\t\t\tupdate[`${order}_description`] = item.description;\n\n\t\t\t\t// set child list if exists\n\t\t\t\t// or set to null if it does not\n\t\t\t\tupdate[`${order}_childList`] = item.childList;\n\t\t\t}\n\t\t}\n\t\t// only setState if there is a change to make\n\t\t// otherwise it triggers endless updates\n\t\tif (Object.keys(update).length > 0) {\n\t\t\tthis.setState(update);\n\t\t}\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst itemId = element.dataset.entityid;\n\n\t\t// the item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(itemsReducer.updateItem(itemId, propertyName, value));\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewItemForm': !this.state.showNewItemForm });\n\t}\n\n\trenderItemsList() {\n\t\tlet elements = [];\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tconst name = this.state[`${i}_name`];\n\t\t\tconst canEdit = this.props.canEdit;\n\t\t\tif (name || canEdit) {\n\t\t\t\telements.push(\n\t\t\t\t\t<Row key={`item${i}`}>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\tkey={`item${i}`}\n\t\t\t\t\t\t\t\titem={{\n\t\t\t\t\t\t\t\t\t'id': this.state[`${i}_id`],\n\t\t\t\t\t\t\t\t\t'order': i,\n\t\t\t\t\t\t\t\t\t'name': name,\n\t\t\t\t\t\t\t\t\t'description': this.state[`${i}_description`],\n\t\t\t\t\t\t\t\t\t'childList': this.state[`${i}_childList`],\n\t\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\tcanEdit={canEdit}\n\t\t\t\t\t\t\t\tonCreateChildList={this.props.onCreateChildList}\n\t\t\t\t\t\t\t\tonMoveItemUp={this.props.onMoveItemUp}\n\t\t\t\t\t\t\t\tonMoveItemDown={this.props.onMoveItemDown}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"items-list\">\n\t\t\t\t{this.renderItemsList()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(ItemsPage);\n","// Full detail view of a list\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport SetListIsPublic from '../components/SetListIsPublic';\nimport EditableTextField from '../components/EditableTextField.js';\nimport ItemsPage from '../components/ItemsPage';\n\nimport * as lists from '../modules/lists';\nimport * as items from '../modules/items';\nimport * as permissions from '../modules/permissions';\nimport findObjectByProperty from '../modules/findObjectByProperty';\nimport formatErrorMessages from '../modules/formatErrorMessages';import isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nimport './ListDetail.scss';\n\n\nclass ListDetails extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\t// to start with all we know is the slug. We have to find the list id, and then the list details and items can be loaded\n\t\tthis.state = {};\n\t\tthis.getListData = this.getListData.bind(this);\n\t\tconst slug = this.getListData(props);\n\n\t\tthis.state = {\n\t\t\tslug,\n\t\t};\n\t}\n\n\tgetListData = (props) => {\n\t\tconst slug = props.match.params.slug;\n\n\t\tprops.dispatch(lists.fetchListBySlug(slug));\n\t\tprops.dispatch(clearErrors());\n\t\treturn slug;\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(lists.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = () => {\n\t\tconst id = this.props.list.id;\n\t\tconst name = this.props.list.name;\n\n\t\tif (confirm(`Are you sure you want to delete the list ${name}`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t  this.props.dispatch(lists.deleteList(id));\n\n\t\t  // if there is a visible parent, navigate there\n\t\t  if (this.props.parentList) {\n\t\t  \tif (permissions.canViewList({ 'id': this.props.parentList.id })) {\n\t\t  \t\tthis.props.history.push(`/list/${this.props.parentList.slug}`);\n\t\t  \t\treturn;\n\t\t  \t}\n\t\t  }\n\n\t\t  // otherwise navigate home\n\t\t  this.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst listId = element.dataset.entityid;\n\n\t\t// the list field to update is coded in the 'state' data e.g. 'list_name'\n\t\t// we want to keep item name and list name clearly separate\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(lists.updateList(listId, propertyName, value));\n\t}\n\n\tonCreateChildList = (itemId) => {\n\t\tthis.props.history.push(`/newlist?parent-item=${itemId}`);\n\t}\n\n\tonMoveItemUp = (itemId) => {\n\t\tthis.props.dispatch(items.moveItemUp({ itemId }));\n\t}\n\n\tonMoveItemDown = (itemId) => {\n\t\tthis.props.dispatch(items.moveItemDown({ itemId }));\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(lists.setListIsPublic({ id, is_public }));\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.isLoading && !this.props.isLoading) {\n\t\t\t// just finished loading; need to check if user should view this list\n\t\t\tconst canEditList = permissions.canEditList({ 'slug': this.state.slug });\n\t\t\tconst canViewList = permissions.canViewList({ 'slug': this.state.slug });\n\n\t\t\tthis.setState({\n\t\t\t\t'canView': canViewList,\n\t\t\t\t'canEdit': canEditList,\n\t\t\t});\n\n\t\t\tif(canViewList) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t'list_name': this.props.list.name,\n\t\t\t\t\t'list_description': this.props.list.description,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// user has navigated to a different list\n\t\tif (prevProps.match.params.slug !== this.props.match.params.slug) {\n\t\t\tconst slug = this.getListData(this.props);\n\t\t\tthis.setState({\n\t\t\t\tslug,\n\t\t\t});\n\t\t}\n\n\t\t// user has just logged out\n\t\t// store needs to be repopulated\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.props.dispatch(lists.fetchListBySlug(this.state.slug));\n\t\t\tthis.props.dispatch(clearErrors());\n\t\t}\n\t}\n\n\trenderPage() {\n\t\tif (!this.props.list) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet showPrivacyWarning = false;\n\t\tlet privacyWarningText = '';\n\n\t\tif (this.state.canEdit && this.props.parentList) {\n\t\t\tif (this.props.list.is_public && !this.props.parentList.is_public) {\n\t\t\t\tprivacyWarningText = 'This public list has a private parent list';\n\t\t\t\tshowPrivacyWarning = true;\n\t\t\t} else if (!this.props.list.is_public && this.props.parentList.is_public) {\n\t\t\t\tprivacyWarningText = 'This private list has a public parent list';\n\t\t\t\tshowPrivacyWarning = true;\n\t\t\t}\n\t\t}\n\n\t\treturn <div>\n\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>)}\n\t\t\t{this.props.list && (\n\t\t\t\t<div>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{this.props.parentList && (\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<div className=\"breadcrumbs\"><Link to={`/list/${this.props.parentList.slug}`}>{this.props.parentList.name}</Link> > {this.props.parentItem.name}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{this.state.canEdit && (\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<div className=\"list-detail-controls\">\n\t\t\t\t\t\t\t\t\t\t<SetListIsPublic\n\t\t\t\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\t\t\t\tonIsPublicChange={this.onIsPublicChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={this.onDeleteList.bind(this)}>Delete</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{showPrivacyWarning && (\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<div className=\"privacy-warning\">{privacyWarningText}</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"list-name\">\n\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tname={'list_name'}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a name for the list\"\n\t\t\t\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\t\t\t\tdata-state={'list_name'} // this.state property\n\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\tid='list_name' // id of the html element\n\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\tvalue={this.state.list_name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"list-description\">\n\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\tname={'list_description'}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a description for the list\"\n\t\t\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\t\t\tdata-state={'list_description'} // this.state property\n\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\tid='list_description' // id of the html element\n\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\tvalue={this.state.list_description}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{this.props.items && (\n\t\t\t\t\t\t\t<ItemsPage\n\t\t\t\t\t\t\t\titems={this.props.items}\n\t\t\t\t\t\t\t\tlist={this.props.list.id}\n\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\tonCreateChildList={this.onCreateChildList}\n\t\t\t\t\t\t\t\tonMoveItemUp={this.onMoveItemUp}\n\t\t\t\t\t\t\t\tonMoveItemDown={this.onMoveItemDown}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>;\n\t}\n\n\t///////////////\n\n\trender() {\n\t\tlet content;\n\n\t\tif (this.state.canView) {\n\t\t\tcontent = this.renderPage();\n\t\t} else {\n\t\t\tcontent = <p>Either this list does not exist or you do not have permission to view it</p>;\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"list-detail\">\n\t\t\t\t{ content }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nListDetails.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'lists': PropTypes.object.isRequired,\n\t'items': PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\t// the store should contain our target list, identified by slug\n\t// It may also contain the parent list, and / or any child lists\n\t// plus the items for all these lists\n\tconst lists = state.lists.things;\n\tconst items = state.items.things;\n\n\t// first find the target list\n\tconst list = findObjectByProperty({ 'parentObject': lists, 'property': 'slug', 'value': ownProps.match.params.slug });\n\n\tlet parentList; // list object\n\tlet parentItem; // item object\n\tlet targetListItems = []; // items for just the target list\n\n\t// find the parent item and its list\n\tif (list) { // avoid error while loading or if list not visible\n\t\t// find the items for the target list\n\t\ttargetListItems = list.items.map((itemId) => {\n\t\t\treturn { ...items[itemId] }; // shallow copy so item is extensible\n\t\t});\n\n\t\tparentItem = findObjectByProperty({ 'parentObject': items, 'property': 'id', 'value': list.parent_item });\n\n\t\tconst keys = Object.keys(lists);\n\n\t\tfor (let i=0; i<keys.length; i++) {\n\t\t\t// search lists to find the one which contains the parent item\n\t\t\t// item ids are an array property of the list\n\t\t\tconst testList = lists[keys[i]];\n\n\t\t\tif (list.parent_item) {\n\t\t\t\tif (testList.items.indexOf(list.parent_item) !== -1) {\n\t\t\t\t\tparentList = testList;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// find any list that is a child of an item in the target list\n\t\t\tconst index = list.items.indexOf(testList.parent_item);\n\n\t\t\tif (index !== -1) {\n\t\t\t\ttargetListItems[index].childList = { ...testList };\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ({\n\t\t'auth': state.auth,\n\t\t'errors': state.errors,\n\t\t'isLoading': state.lists.isLoading,\n\t\t'lists': lists,\n\t\t'list': list,\n\t\t'parentList': parentList,\n\t\t'items': targetListItems,\n\t\t'parentItem': parentItem,\n\t});\n};\n\nexport default connect(mapStateToProps)(withRouter(ListDetails));\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.confirmEmailNotSent());\n\t}\n\n\tsendConfirmationEmail() {\n\t\tthis.props.dispatch(auth.sendConfirmationEmail());\n\t}\n\n\trender() {\n\t\tconst emailVerified = this.props.auth.user.emailVerified;\n\t\tconst email_status = emailVerified ? 'verified': 'unverified';\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>My account</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div>Username: {this.props.auth.user.username}</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/changepassword\">Change password</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div>Email address: {this.props.auth.user.email}</div>\n\t\t\t\t\t\t<div>Status: {email_status}</div>\n\t\t\t\t\t\t{!emailVerified &&\t<button type=\"button\" className=\"btn btn-primary\"onClick={this.sendConfirmationEmail.bind(this)}>\n\t\t\t\t\t\t\t\tResend confirmation email\n\t\t\t\t\t\t</button>}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{this.props.auth.confirmEmailSent && (<div className=\"valid-feedback\">A verification email has been sent to {this.props.auth.user.email}. If you do not receive the email within a few minutes, please check your Junk or Spam folder.</div>)}\n\t\t\t\t{this.props.auth.confirmEmailAlreadyVerified && (<div className=\"valid-feedback\">The email address {this.props.auth.user.email} has already been verified.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'sendConfirmationEmail': PropTypes.func.isRequired,\n\t'confirmEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'sendConfirmationEmail': auth.sendConfirmationEmail,\n\t'confirmEmailNotSent': auth.confirmEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.forgotPasswordEmailNotSent());\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.dispatch(auth.forgotPassword(user));\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) &&\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>}\n\t\t\t\t<h2>Forgot your password?</h2>\n\t\t\t\t<p>Enter your email address. A reset password link will be emailed to you.</p>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.email && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.email}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"valid-feedback\">If the address {this.state.email} is associated with an account, an email has been sent. If you don't see it within a few minutes, please check your junk mail folder.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'forgotPassword': auth.forgotPassword,\n\t'forgotPasswordEmailNotSent': auth.forgotPasswordEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { changePassword, passwordNotChanged } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass ChangePassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'old_password': '',\n\t\t\t'new_password': '',\n\t\t\t'new_password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst data = {\n\t\t\t'old_password': this.state.old_password,\n\t\t\t'new_password1': this.state.new_password,\n\t\t\t'new_password2': this.state.new_password_confirm\n\t\t};\n\n\t\tthis.props.changePassword(data, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Change your password</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'new_password',\n\t\t\t\t\t'input2': 'new_password_confirm',\n\t\t\t\t\t'message': 'New passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"old_password\">Old password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"old_password\"\n\t\t\t\t\t\t\t\t\tid=\"old_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.old_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your old password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password\">New password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password_confirm\">Confirm your new password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tChange password now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.changePassword && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.changePassword}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t      {this.props.auth.changePasswordComplete && (<div className=\"valid-feedback\">Your new password has been saved</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nChangePassword.propTypes = {\n\t'changePassword': PropTypes.func.isRequired,\n\t'passwordNotChanged': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ changePassword, passwordNotChanged })(withRouter(ChangePassword));\n","// Shown after user successfully verifies email address\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { logoutUser } from '../modules/auth';\n\nclass Verified extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onLogout();\n\t}\n\n\tonLogout(e) {\n\t\t// just in case a different user is logged in\n\t\t// to avoid confusion and force new login\n\t\tif (this.props.auth.isAuthenticated) {\n\t\t\tthis.props.logoutUser(this.props.history);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Your email address has been verified</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/login\" className=\"nav-link\">Login</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nVerified.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Verified));\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport { setCurrentUser, getUserInfo, logoutUser, getAuthToken } from '../modules/auth';\n\nimport Navbar from '../components/Navbar';\nimport Register from '../components/Register';\nimport Welcome from '../components/Welcome';\nimport Login from '../components/Login';\nimport Home from '../containers/Home';\nimport CreateList from '../containers/CreateList';\nimport ListDetails from '../containers/ListDetail';\nimport Account from '../components/Account';\nimport ForgotPassword from '../components/ForgotPassword';\nimport ChangePassword from '../components/ChangePassword';\nimport Verified from '../components/Verified';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password loads the bootstrap css from static/bootstrap\n\n// check if user is already logged in\nif(getAuthToken()) {\n\tstore.dispatch(setCurrentUser(localStorage.mytoptensJwtToken));\n\tstore.dispatch(getUserInfo());\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.mytoptensJwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\t\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t\t<Route exact path=\"/newlist\" component={ CreateList } />\n\t\t\t\t\t\t\t<Route exact path=\"/list/:slug\" component={ ListDetails } />\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/welcome\" component={ Welcome } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t<Route exact path=\"/changepassword\" component={ ChangePassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/verified\" component={ Verified } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./containers/App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}
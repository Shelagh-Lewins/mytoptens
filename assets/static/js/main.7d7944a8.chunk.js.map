{"version":3,"sources":["modules/errors.js","modules/formatErrorMessages.js","modules/fetchAPI.js","modules/isEmpty.js","modules/auth.js","constants/index.js","modules/items.js","modules/lists.js","modules/page.js","modules/rootReducer.js","store.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Welcome.js","components/Login.js","components/ListSummary.js","components/ListsList.js","containers/ListsPage.js","components/FlashMessage.js","containers/Home.js","containers/CreateList.js","modules/findObjectByProperty.js","components/EditableTextField.js","components/Item.js","components/ItemsPage.js","containers/ListDetail.js","modules/permissions.js","components/Account.js","components/ForgotPassword.js","components/ChangePassword.js","containers/App.js","serviceWorker.js","index.js"],"names":["getErrors","error","type","payload","clearErrors","updeep","require","initialState","formatErrorMessages","errors","messageArray","Object","keys","forEach","key","push","map","item","join","fetchAPI","_ref","url","data","_ref$method","method","_ref$useAuth","useAuth","_ref$headers","headers","Authorization","concat","store","getState","auth","user","token","fetch","body","then","response","ok","contentType","get","includes","json","catch","Promise","reject","Error","message","text","html","page_type","status","isEmpty","value","undefined","length","trim","LOGOUT_USER_COMPLETE","setCurrentUser","dispatch","localStorage","setItem","setAuthToken","logoutUser","history","removeItem","logout user","getUserInfo","setUserInfo","username","email","id","slug","get user info","forgotPasswordEmailNotSent","forgotPassword","formData","FormData","name","append","request password reset email","passwordNotChanged","changePasswordComplete","isAuthenticated","canCreateList","forgotPasswordEmailSent","resetPasswordComplete","LIST_IS_PUBLIC_VALUES","LIST_IS_PUBLIC_TEXTS","MAX_ITEMS_IN_LIST","CREATE_ITEM_SUCCEEDED","UPDATE_ITEM_SUCCEEDED","DELETE_ITEM_SUCCEEDED","createItem","JSON","stringify","Content-Type","create item","updateItem","itemId","propertyName","defineProperty","is_public","updateItemSucceeded","update item","deleteItem","_ref2","listId","_ref3","deleteItemSucceeded","delete item","initialItemsState","things","isLoading","sortedItems","createSelector","state","items","sort","a","b","order","RECEIVE_ENTITIES","FETCH_LISTS_STARTED","FETCH_LISTS_FAILED","FETCH_LIST_BY_SLUG_STARTED","FETCH_LIST_BY_SLUG_FAILED","FILTER_LISTS","CREATE_LIST_STARTED","CREATE_LIST_SUCCEEDED","DELETE_LIST_SUCCEEDED","SET_LIST_IS_PUBLIC_SUCCEEDED","itemSchema","schema","Entity","listSchema","receiveEntities","entities","fetchLists","normalizedData","normalize","fetch lists","fetchListBySlug","createList","list","create list","deleteList","deleteListSucceeded","delete list","setListIsPublic","setListIsPublicSucceeded","set list is public","initialListsState","getFilteredLists","lists","page","searchTerm","filter","match","RegExp","getGroupedAndFilteredLists","grouped","combineReducers","arguments","action","toConsumableArray","constant","omit","updateIn","itemIndex","findIndex","newItems","splice","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","createElement","className","Link","to","onClick","onLogout","bind","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","Component","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","assertThisInitialized","formLength","checkValidity","i","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","submitHandler","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","node","setCustomValidity","objectSpread","classNames","assign","noValidate","children","Register","password","password_confirm","handleInputChange","handleSubmit","target","password1","password2","registerUser","nextProps","Container","ValidatedForm_ValidatedForm","Row","Col","Label","for","Input","required","onChange","minLength","pattern","registration","style","display","Welcome","Login","loginUser","authentication","ListSummary","sm","md","description","onIsPublicChange","onDeleteList","ListsList","index","indexOf","headerText","components_ListSummary","ListsPage","onSearch","onAddList","prevProps","_this$props","listsByIsPublic","components_ListsList","renderListsList","FlashMessage","aria-hidden","Home","onCloseFlashMessage","src_containers_ListsPage","onCreateList","CreateList","newList","cancel","newItem","elements","renderItemInputs","findObjectByProperty","parentObject","property","childObject","EditableTextField","showInput","onBlur","toggleInput","handleNewValue","autoFocus","data-state","data-entityid","Item","components_EditableTextField","labelText","ItemsPage","dataset","entityid","split","toggleForm","showNewItemForm","src_components_Item","renderItemsList","ListDetails","onCreateItem","onDeleteItem","params","canViewList","identifier","userId","created_by","permissions","console","log","canUpdateList","src_components_ItemsPage","ownProps","Account","ForgotPassword","ChangePassword","old_password","new_password","new_password_confirm","new_password1","new_password2","changePassword","getItem","jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","location","hostname","navigator","serviceWorker","ready","unregister","render","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.7d7944a8.chunk.js","sourcesContent":["// errorReducer.js\n\nconst GET_ERRORS = 'GET_ERRORS';\nconst CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const getErrors = error => {\n\t// error is an object, e.g. { 'registration': error.message }\n\treturn {\n\t\t'type': GET_ERRORS,\n\t\t'payload': error,\n\t};\n};\n\nexport const clearErrors = () => {\n\treturn {\n\t\t'type': CLEAR_ERRORS,\n\t};\n};\n\nvar updeep = require('updeep');\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\t// ensure we have an array of strings to allow multiple errors to be displayed\n\t\t\tlet errors = {};\n\n\t\t\tObject.keys(action.payload).forEach((key) => {\n\t\t\t\tif (typeof action.payload[key] === 'string') {\n\t\t\t\t\t// a string is simply copied\n\t\t\t\t\terrors[key] = [action.payload[key]];\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = [...action.payload[key]];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn updeep(errors, {}); // clear any existing errors\n\t\t}\n\n\t\tcase CLEAR_ERRORS: {\n\t\t\treturn {};\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// join arrays of error messages from different errors, into a single string.\n// it is expected that there will only ever be one type of error, e.g. 'register', but the object is parsed to be on the safe side.\n/*\n{ {'register': [\n\t\t'email already in use',\n\t\t'username already in use'\n\t\t]},\n\t{'login': [\n\t\t'could not log in'\n\t]\n}\n*/\n\nexport default function (errors) {\n\tlet messageArray = [];\n\tObject.keys(errors).forEach((key) => {\n\t\tif (typeof errors[key] === 'string') {\n\t\t\tmessageArray.push(errors[key]); // plain string error\n\t\t} else { // arary of errors\n\t\t\terrors[key].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\tmessageArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst message = messageArray.join(' ');\n\n\treturn message;\n};\n","// uses fetch to get or post data.\n// passes up useful errors to the calling function.\n// set useAuth to true for validating logged-in user: token will be sent in header\nimport store from '../store';\nimport formatErrorMessages from '../modules/formatErrorMessages';\n\nexport default function fetchAPI({ url, data, method = 'GET', useAuth = false, headers = {} }) {\n\tif (useAuth) {\n\t\theaders.Authorization = `Token ${store.getState().auth.user.token}`;\n\t}\n\n\treturn fetch(url, { headers, 'method': method, 'body': data })\n\t\t.then(response => {\n\t\t\t// fetch returns ok true / false in most situations\n\t\t\t// true is a successful response\n\t\t\tif (response.ok) {\n\t\t\t\tconst contentType = response.headers.get('Content-Type') || '';\n\n\t\t\t\tif (contentType.includes('application/json')) {\n\t\t\t\t\treturn response.json().catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('Invalid JSON: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (contentType.includes('text/html')) {\n\t\t\t\t\treturn response.text().then(html => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'page_type': 'generic',\n\t\t\t\t\t\t\t'html': html\n\t\t\t\t\t\t};\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('HTML error: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// ok == false means some problem to display\n\t\t\t\t// even though no error was returned\n\t\t\t\tif (response.status === 404) {\n\t\t\t\t\treturn Promise.reject(new Error('Page not found: ' + url));\n\t\t\t\t}\n\n\t\t\t\tif (response.status === 500) {\n\t\t\t\t\treturn Promise.reject(new Error('Internal server error: ' + url));\n\t\t\t\t}\n\n\t\t\t\treturn response.json().then(response => {\n\t\t\t\t\t// the server rejected the request, e.g. because of a wrong password, we want to display the reason\n\t\t\t\t\t// the information is contained in the json()\n\t\t\t\t\t// there may be more than one error, so join them into a single string.\n\t\t\t\t\t// multiline display would be more elegant but this will do for now and makes all errors consistent (one message string)\n\n\t\t\t\t\treturn Promise.reject(new Error(formatErrorMessages(response))\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\t// fetch returned an error\n\t\t\treturn Promise.reject(new Error(error.message));\n\t\t});\n};\n","// check for a null, empty, undefined object\n\nconst isEmpty = (value) => {\n\treturn (\n\t\tvalue === undefined ||\n\t\tvalue === null ||\n\t\t(typeof value === 'object' && Object.keys(value).length === 0) ||\n\t\t(typeof value === 'string' && value.trim().length === 0)\n\t);\n};\n\nexport default isEmpty;\n","// authReducer.js\n\nimport store from '../store';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors, clearErrors } from '../modules/errors';\nimport isEmpty from '../modules/isEmpty';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\nexport const PASSWORD_NOT_CHANGED = 'PASSWORD_NOT_CHANGED';\nexport const CHANGE_PASSWORD_COMPLETE = 'CHANGE_PASSWORD_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\n\n// Side effects Services\nexport const getAuthToken = () => {\n\treturn localStorage.getItem('jwtToken');\n};\n\nfunction setAuthToken(token) {\n\tlocalStorage.setItem('jwtToken', token);\n\treturn;\n}\n\nfunction removeAuthToken() {\n\tlocalStorage.removeItem('jwtToken');\n\treturn;\n}\n\nexport const registerUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/registration/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t}).then(response => {\n\t  \thistory.push('/welcome');\n\t    return response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'registration': error.message }));\n\t});\n};\n\n// TODO rework auth as a saga with token refresh\n// https://github.com/redux-saga/redux-saga/issues/14\n// https://github.com/alvelig/redux-saga-auth\nexport const loginUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/login/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t  \thistory.push('/');\n\t    return dispatch(setCurrentUser(response.key));\n\t}).then(() => {\n\t\t// after store has been updated with token, we can query the server for current user info\n\t\treturn store.dispatch(getUserInfo());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'authentication': 'Unable to log in with the provided credentials, please try again.' }));\n\t});\n};\n\nexport const setCurrentUser = (token, dispatch) => {\n\tsetAuthToken(token);\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': { token },\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\tdispatch(clearErrors());\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/logout/',\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\tremoveAuthToken();\n\t  return dispatch(logoutUserComplete());\n\t  }).then(() => {\n\t  \t// ensure token is removed from localStorage and store before redirecting\n\t  \thistory.push('/');\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'logout user': 'Unable to logout' }));\n\t});\n};\n\n///////////////////////////////\n// get user info\n// TODO rebuild as saga with login using state token\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\n// should get token from state. Currently it is passed in by referring function because state is not updated synchronously.\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = () => (dispatch) => {\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/user/',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t}).then(user => {\n\t  \treturn dispatch(setUserInfo({\n\t\t\t'username': user.username,\n\t\t\t'email': user.email,\n\t\t\t'id': user.id,\n\t\t\t'slug': user.slug,\n\t\t}));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'get user info': 'Unable to get user info' }));\n\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t//'url': '/api/v1/rest-auth/password/reset1/',\n\t\t'url': '/api/v1/rest-auth/password/reset/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t   return dispatch(forgotPasswordEmailSent());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'request password reset email': `Unable to send a password reset email. It is likely that the email address ${email} is not associated with a registered user` }));\n\t\t// return dispatch(getErrors(error.response.data));\n\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n//////////////////////////////////\n// change password\nexport const changePassword = (data) => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(passwordNotChanged());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in data) {\n\t\tformData.append(name, data[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/change/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t  dispatch(changePasswordComplete());\n\t    return response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'changePassword': error.message }));\n\t});\n};\n\nexport const passwordNotChanged = token => {\n\treturn {\n\t\t'type': PASSWORD_NOT_CHANGED,\n\t};\n};\n\nexport const changePasswordComplete = (token) => {\n\treturn {\n\t\t'type': CHANGE_PASSWORD_COMPLETE,\n\t};\n};\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isAuthenticated': false,\n\t'canCreateList': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'changePasswordComplete': false,\n\t'user': {}\n};\n\nfunction canCreateList(token) {\n\t// for now, simply check whether the user is logged in\n\t// in future, further checks will be added e.g. email validated, number of lists exceeded?\n\treturn !isEmpty(token);\n}\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'canCreateList': canCreateList(action.payload.token),\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user info\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user info\n\t\t\treturn updeep({\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'slug': action.payload.slug,\n\t\t\t\t\t'id': action.payload.id,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'canCreateList': canCreateList(),\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase PASSWORD_NOT_CHANGED: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': false,\n\t\t\t\t'errors': {}\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CHANGE_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","export const LIST_IS_PUBLIC_VALUES = [false, true];\nexport const LIST_IS_PUBLIC_TEXTS = ['Private', 'Public'];\nexport const MAX_ITEMS_IN_LIST = 10;\n","import { createSelector } from 'reselect';\nimport { RECEIVE_ENTITIES } from '../modules/lists';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tFETCH_LIST_BY_SLUG_STARTED\n} from './lists';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const CREATE_ITEM_REQUESTED = 'CREATE_ITEM_REQUESTED';\nexport const CREATE_ITEM_SUCCEEDED = 'CREATE_ITEM_SUCCEEDED';\nexport const UPDATE_ITEM_SUCCEEDED = 'UPDATE_ITEM_SUCCEEDED';\nexport const DELETE_ITEM_SUCCEEDED = 'DELETE_ITEM_SUCCEEDED';\n\nexport const createItem = item => dispatch => {\n\tdispatch(createItemRequested());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/items/',\n\t\t'data': JSON.stringify(item),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\treturn dispatch(createItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create item': error.message }));\n\t});\n};\n\nexport function createItemRequested() {\n\treturn {\n\t\t'type': 'CREATE_ITEM_REQUESTED',\n\t};\n}\n\nexport function createItemSucceeded(item) {\n\treturn {\n\t\t'type': 'CREATE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titem\n\t\t}\n\t};\n}\n\nexport const updateItem = (itemId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateItemSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': UPDATE_ITEM_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t}\n\t};\n}\n\nexport const deleteItem = ({ itemId, listId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'method': 'DELETE',\n\t}).then(response => {\n\t\treturn dispatch(deleteItemSucceeded({ itemId, listId }));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete item': error.message }));\n\t});\n};\n\nexport function deleteItemSucceeded({ itemId, listId }) {\n\treturn {\n\t\t'type': 'DELETE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titemId,\n\t\t\tlistId\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialItemsState = {\n\t'things': {},\n\t'isLoading': false,\n\t'error': null,\n};\n\nexport default function items(state = initialItemsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialItemsState, {});\n\t\t}\n\t\t\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tif (entities && entities.items) {\n\t\t\t\treturn updeep({ 'things': entities.items, 'isLoading': false }, state);\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'things': updeep.constant({}), // remove all existing items\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\t\t\treturn updeep({ 'things': { [item.id]: item } }, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n// all items, for selector to use\nexport const getItems = state => state.items.things;\n\n// items belonging to the current list\nexport const sortedItems = createSelector(\n\t[getItems],\n\t(items) => {\n\t\tlet listItems = (Object.keys(items).map(id => {\n\t\t\treturn items[id];\n\t\t})).sort(function(a, b){\n\t\t\treturn a.order - b.order; // sort to index order\n\t\t});\n\n\t\treturn listItems;\n\t}\n);\n\n","import { createSelector } from 'reselect';\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport { normalize, schema } from 'normalizr';\n\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tCREATE_ITEM_SUCCEEDED,\n\tDELETE_ITEM_SUCCEEDED\n} from './items';\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const RECEIVE_ENTITIES = 'RECEIVE_ENTITIES';\nexport const FETCH_LISTS_STARTED = 'FETCH_LISTS_STARTED';\nexport const FETCH_LISTS_FAILED = 'FETCH_LISTS_FAILED';\nexport const FETCH_LIST_BY_SLUG_STARTED = 'FETCH_LIST_BY_SLUG_STARTED';\nexport const FETCH_LIST_BY_SLUG_FAILED = 'FETCH_LISTS_FAILED';\nexport const FILTER_LISTS = 'FILTER_LISTS';\nexport const CREATE_LIST_STARTED = 'CREATE_LIST_STARTED';\nexport const CREATE_LIST_SUCCEEDED = 'CREATE_LIST_SUCCEEDED';\nexport const DELETE_LIST_SUCCEEDED = 'DELETE_LIST_SUCCEEDED';\nexport const SET_LIST_IS_PUBLIC_SUCCEEDED = 'SET_LIST_IS_PUBLIC_SUCCEEDED';\n\nconst itemSchema = new schema.Entity('items');\nconst listSchema = new schema.Entity('lists', {\n\t'items': [itemSchema],\n});\n\nfunction receiveEntities(entities) {\n\treturn {\n\t\t'type': RECEIVE_ENTITIES,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchListsStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_LISTS_STARTED,\n\t};\n}\n\nfunction fetchListsFailed() {\n\treturn {\n\t\t'type': FETCH_LISTS_FAILED\n\t};\n}\n\nexport function fetchLists() {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListsStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return only the lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': '/api/v1/content/lists/',\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\t\t\t\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListsFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////\n// fetch a single list by slug\nexport function fetchListBySlugStarted() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_STARTED,\n\t};\n}\n\nfunction fetchListBySlugFailed() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_FAILED\n\t};\n}\n\nexport function fetchListBySlug(slug) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListBySlugStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return the list if a non-authenticated user should see it.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/list/?slug=${slug}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListBySlugFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\nexport function filterLists(searchTerm) {\n\treturn { \n\t\t'type': FILTER_LISTS,\n\t\t'payload': { searchTerm },\n\t};\n}\n\nexport const createList = (list, history) => dispatch => {\n\tdispatch(createListStarted());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/lists/',\n\t\t'data': JSON.stringify(list),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\tdispatch(createListSucceeded(response));\n\t\thistory.push(`/list/${response.slug}`);\n\t\treturn;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create list': error.message }));\n\t});\n};\n\nexport function createListStarted() {\n\treturn {\n\t\t'type': CREATE_LIST_STARTED,\n\t};\n}\n\nexport function createListSucceeded(list) {\n\treturn {\n\t\t'type': CREATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tlist\n\t\t}\n\t};\n}\n\nexport const deleteList = id => (dispatch, getState) => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'method': 'DELETE',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(deleteListSucceeded(id));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete list': error.message }));\n\t});\n};\n\nexport function deleteListSucceeded(id) {\n\treturn {\n\t\t'type': DELETE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport const setListIsPublic = ({ id, is_public }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ is_public }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(setListIsPublicSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'set list is public': error.message }));\n\t});\n};\n\nexport function setListIsPublicSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': SET_LIST_IS_PUBLIC_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\n// this is initial state of lists and the list loading states\nconst initialListsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'things': {},\n};\n\n// 'state' here is global state\nexport const getSearchTerm = state => {\n\treturn state.page.searchTerm;\n};\n\nexport const getLists = state => {\n\treturn Object.keys(state.lists.things).map(id => {\n\t\treturn state.lists.things[id];\n\t});\n};\n\nexport const getFilteredLists = createSelector(\n\t[getLists, getSearchTerm],\n\t(lists, searchTerm) => {\n\t\treturn lists.filter(list => {\n\t\t\t// if no search term, return every list\n\t\t\tif (searchTerm === '') {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\treturn list.name.match(new RegExp(searchTerm, 'i'));\n\t\t});\n\t}\n);\n\nexport const getGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => list.is_public === is_public);\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\n// state here is the substate state.lists\n// the book uses 'items' for the list of things i.e. lists. items\n// as 'items' for us is a specific thing, we need another name for the set of entities to be displayed i.e. the lists themselves\n// so those are globalState.lists.things\n// i.e. state.things here\nexport default function lists(state = initialListsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialListsState, {});\n\t\t}\n\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tlet lists = {};\n\n\t\t\tif (entities && entities.lists) {\n\t\t\t\tlists = entities.lists; // there is at least one list\n\t\t\t}\n\n\t\t\treturn updeep({ 'things': lists, 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': true,\n\t\t\t\t'things': updeep.constant({}), // remove all existing lists\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase CREATE_LIST_STARTED: {\n\t\t\t// at present this does nothing, it's really just to track that the action happened\n\t\t\treturn updeep(state);\n\t\t}\n\n\t\tcase CREATE_LIST_SUCCEEDED: {\n\t\t\tconst list = action.payload.list;\n\t\t\treturn updeep({ 'things': { [list.id]: list } }, state);\n\t\t}\n\n\t\tcase DELETE_LIST_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tcase SET_LIST_IS_PUBLIC_SUCCEEDED: {\n\t\t\tconst listId = action.payload.id;\n\n\t\t\treturn updeep({ 'things': { [listId]: { 'is_public': action.payload.is_public } } }, state);\n\t\t\t// reminder of another way to update nested arrays\n\t\t\t/* const index = state.things.findIndex((list) => list.id === action.payload.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\treturn updeep.updateIn(`things.${index}.is_public`, action.payload.is_public, state);\n\t\t\t} \n\n\t\t\treturn state; // in case list was not found\n\t\t\t*/\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\n\t\t\tfunction addItem(items) {\n\t\t\t\treturn [].concat(items, item.id);\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${item.list}.items`, addItem, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\tfunction deleteItem(items) {\n\t\t\t\tconst itemIndex = items.findIndex((item) => item === action.payload.itemId); \n\t\t\t\tlet newItems = [].concat(items);\n\t\t\t\tnewItems.splice(itemIndex, 1);\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${action.payload.listId}.items`, deleteItem, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","import {\n\tFILTER_LISTS,\n} from './lists';\n\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'searchTerm': '',\n};\n\nexport default function page(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FILTER_LISTS: {\n\t\t\treturn updeep({ 'searchTerm': action.payload.searchTerm }, state);\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","// index.js\n\n// import the partial reducers\nimport { combineReducers } from 'redux';\nimport errors from './errors';\nimport auth from './auth';\nimport page from './page';\nimport lists from './lists';\nimport items from './items';\n// by importing the actual reducer as the default, the state of each is initialised\n\nexport default combineReducers({\n\t'errors': errors,\n\t'auth': auth,\n\t'page': page,\n\t'lists': lists,\n\t'items': items,\n});\n","// store.js\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules/rootReducer';\n\nconst store = createStore(\n\trootReducer, \n\t// inititalState, // by not supplying initial state, we tell the store to use the defaults specified in the reducer\n\tcompose(applyMiddleware(thunk), \n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./modules/rootReducer', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../modules/auth';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\tsubmitHandler = e => {\n\t\te.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(e);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's submitHandler\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.submitHandler}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email address to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.registration && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.registration}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Shown after successful registration of a new user\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Welcome extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Welcome to My Top Tens</h2>\n\t\t\t\t<p>Your account has been created. Click the link below to login.</p>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/login\" className=\"nav-link\">Login</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nWelcome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps)(Welcome);\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.authentication && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.authentication}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","// An individual list\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nconst ListSummary = props => {\n\tlet id=`select-${props.list.id}`;\n\tlet value = props.list.is_public ? 'Public' : 'Private';\n\n\treturn (\n\t\t<Col sm=\"3\" md=\"4\" className=\"list-container\">\n\t\t\t<Link to={`/list/${props.list.slug}`}>\n\t\t\t\t<div className=\"list-header\">\n\t\t\t\t\t<div>{props.list.name}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"list-body\">{props.list.description}</div>\n\t\t\t</Link>\n\t\t\t<div className=\"list-status\">\n\t\t\t\t<label>Set list private/public status\n\t\t\t\t\t<select className=\"form-control\" value={value} onChange={onIsPublicChange} id={id}>\n\t\t\t\t\t\t{LIST_IS_PUBLIC_TEXTS.map(is_public => (\n\t\t\t\t\t\t\t<option key={is_public} value={is_public}>{is_public}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<button className=\"btn btn-danger\" onClick={onDeleteList}>Delete</button>\n\t\t\t\n\t\t</Col>\n\t);\n\n\tfunction onIsPublicChange(e) {\n\t\t// map from select options to true / false\n\t\tconst value = e.target.value === 'Public' ? true : false;\n\t\tprops.onIsPublicChange({ 'id': props.list.id, 'is_public': value });\n\t}\n\n\tfunction onDeleteList(e) {\n\t\tprops.onDeleteList(props.list.id);\n\t}\n};\n\nexport default ListSummary;\n","// List of all lists\n\nimport React from 'react';\nimport ListSummary from './ListSummary';\nimport { Container, Row } from 'reactstrap';\n\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nconst ListsList = props => {\n\tconst index = LIST_IS_PUBLIC_VALUES.indexOf(props.is_public === 'true');\n\tconst headerText = LIST_IS_PUBLIC_TEXTS[index];\n\n\treturn (\n\t\t<Container className=\"lists-list\">\n\t\t\t<Row>\n\t\t\t\t<h3 className=\"lists-list-name\">\n\t\t\t\t\t<strong>{headerText}</strong>\n\t\t\t\t</h3>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t{props.lists.map(list => (\n\t\t\t\t\t<ListSummary\n\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tonIsPublicChange={props.onIsPublicChange}\n\t\t\t\t\t\tonDeleteList={props.onDeleteList}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default ListsList;\n","// Page to display list of lists\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\nimport ListsList from '../components/ListsList';\nimport './ListsPage.scss';\n\nclass ListsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\n\t}\n\n\tonSearch = e => {\n\t\tthis.props.onSearch(e.target.value);\n\t}\n\n\tonDeleteList = (id) => {\n\t\tthis.props.onDeleteList(id);\n\t}\n\n\tonAddList = () => {\n\t\tthis.props.history.push('/newlist');\n\t}\n\n\trenderListsList() {\n\t\tconst { lists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\treturn Object.keys(lists).map((is_public, index) => {\n\t\t\tconst listsByIsPublic = lists[is_public];\n\n\t\t\treturn (\n\t\t\t\t<div key={index}>\n\t\t\t\t\t{(listsByIsPublic.length > 0) && (\n\t\t\t\t\t\t<ListsList\n\t\t\t\t\t\t\tlists={listsByIsPublic}\n\t\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\t\tis_public={is_public}\n\t\t\t\t\t\t\tkey={is_public}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"lists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"lists-list\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col sm=\"6\">\n\t\t\t\t\t\t\t<div className=\"lists-list-header\">\n\t\t\t\t\t\t\t\t<input className=\"form-control\"\n\t\t\t\t\t\t\t\t\tonChange={this.onSearch}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{this.props.canCreateList && (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.onAddList}\n\t\t\t\t\t\t\t\t\t>+ New list</button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t<div className=\"lists\">\n\t\t\t\t\t{this.renderListsList()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ListsPage);\n","import React from 'react';\n\n// onClick should dismiss the condition that caused the FlashMessage to be displayed\n// it is the responsibility of the component that triggers the FlashMessage, to also provide the way to dismiss it\nexport default function FlashMessage({ message, type, onClick }) {\n\treturn (\n\t\t<div className={`flash-error ${type}`}>\n\t\t\t<span>{message}</span>\n\t\t\t<button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={onClick}>\n\t\t\t  <span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","// Home.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport ListsPage from './ListsPage';\n\nimport * as lists from '../modules/lists';\nimport { getGroupedAndFilteredLists } from '../modules/lists';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass Home extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(lists.fetchLists());\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user's status has changed, refresh Lists\n\t\tif(prevProps.auth.user.token !== this.props.auth.user.token){\n\t\t\tthis.props.dispatch(lists.fetchLists());\n\t\t}\n\t}\n\n\tonSearch = searchTerm => {\n\t\tthis.props.dispatch(lists.filterLists(searchTerm));\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(lists.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = (id) => {\n\t\tthis.props.dispatch(lists.deleteList(id));\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<ListsPage\n\t\t\t\t\tlists={this.props.lists}\n\t\t\t\t\tcanCreateList={this.props.auth.canCreateList}\n\t\t\t\t\tonSearch={this.onSearch}\n\t\t\t\t\tonCreateList={this.onCreateList}\n\t\t\t\t\tonIsPublicChange={this.onIsPublicChange}\n\t\t\t\t\tonDeleteList={this.onDeleteList}\n\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'lists': PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.lists.isLoading,\n\t'lists': getGroupedAndFilteredLists(state),\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { createList } from '../modules/lists';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nimport ValidatedForm from '../components/ValidatedForm.js';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nclass CreateList extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'name': '',\n\t\t\t'description': '',\n\t\t};\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`item${i}_name`] = '';\n\t\t\tthis.state[`item${i}_description`] = '';\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tcancel(e) {\n\t\tthis.props.history.push('/');\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tlet newList = {\n\t\t\t'name': this.state.name,\n\t\t\t'description': this.state.description,\n\t\t\t'items': [],\n\t\t};\n\n\t\t\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tif (this.state[`item${i}`] !== '') {\n\t\t\t\tconst newItem = {\n\t\t\t\t\t'name': this.state[`item${i}_name`],\n\t\t\t\t\t'description': this.state[`item${i}_description`],\n\t\t\t\t\t'order': i,\n\t\t\t\t};\n\t\t\t\tnewList.items.push(newItem);\n\t\t\t}\n\t\t}\n\n\t\t//this.props.onCreateList(newList, this.props.history);\n\t\tthis.onCreateList(newList);\n\t}\n\n\tonCreateList = (newList) => {\n\t\tthis.props.dispatch(createList(newList, this.props.history));\n\t}\n\n\n\tcomponentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user cannot create a list, redirect to Home\n\t\tif(!this.props.auth.canCreateList){\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderItemInputs() {\n\t\tlet elements = [];\n\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\telements.push(\n\t\t\t\t<div className=\"form-group\" key={`item${i}`}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<h3>Item {i}</h3>\n\t\t\t\t\t\t\t<Label for={`item${i}_name`}>Name</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_name`}\n\t\t\t\t\t\t\t\tid={`item${i}_name`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_name`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Label for={`item${i}_description`}>Description</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_description`}\n\t\t\t\t\t\t\t\tid={`item${i}_description`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_description`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>);\n\t\t}\n\t\treturn elements;\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<h2>Create a new list</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"name\">Name</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.name }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Name is required</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Description</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.description }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t{this.renderItemInputs()}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSave list\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.lists && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.lists}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nCreateList.propTypes = {\n\t//'createList': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n});\n\nexport default connect(mapStateToProps)(withRouter(CreateList));\n","export default function findObjectByProperty({ parentObject, property, value }) {\n\t// e.g. find a list in the store based on its slug\n\t// it feels like there ought to be a smarter way to do this!\n\t// but this does work, and stops once the object is found\n\n\tconst keys = Object.keys(parentObject);\n\n\tfor (let i=0; i<keys.length; i++) {\n\t\tlet childObject = parentObject[keys[i]];\n\t\tif (childObject[property] === value) {\n\t\t\treturn childObject;\n\t\t}\n\t}\n\n\treturn;\n}\n","// A text field that can be edited by clicking on it\n// It can be blank, it is not required, there is no validation\n// note custom property data-state which is the name of the property in this.state\n\n// TODO add placeholder text\n\nimport React, { Component } from 'react';\nimport { Label, Input } from 'reactstrap';\n\nclass EditableTextField extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'showInput': false,\n\t\t};\n\n\t\tthis.onBlur = this.onBlur.bind(this);\n\t\tthis.toggleInput = this.toggleInput.bind(this);\n\t}\n\n\ttoggleInput(e) {\n\t\tthis.setState({\n\t\t\t'showInput': !this.state.showInput,\n\t\t});\n\t}\n\n\tonBlur(e) {\n\t\t// the user has typed a new value and the parent component should be notified\n\t\tthis.props.handleNewValue(e);\n\t\tthis.toggleInput(e);\n\t}\n\n\trender() {\n\t\tconst showInput = this.state.showInput;\n\t\tlet item;\n\n\t\tif (showInput) {\t\t\t\n\t\t\titem = (\n\t\t\t\t<div><Label for={this.props.id}>Title</Label>\n\t\t\t\t\t<Input autoFocus\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname={this.props.id}\n\t\t\t\t\t\tdata-state={this.props['data-state']}\n\t\t\t\t\t\tdata-entityid={this.props['data-entityid']}\n\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\tonChange={this.props.handleInputChange}\n\t\t\t\t\t\tonBlur={this.onBlur}\n\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t/>\n\t\t\t\t</div>);\n\t\t} else {\n\t\t\titem = (\n\t\t\t\t<p onClick={this.toggleInput} >{this.props.value}</p>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ item }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditableTextField;\n","// An individual item\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\nimport EditableTextField from './EditableTextField';\nimport './Item.scss';\n\nconst Item = props => {\n\treturn (\n\t\t<Col className=\"item-container\">\n\t\t\t<div className=\"item-header\">\n\t\t\t\t<span className=\"order\">{props.item.order}:</span><EditableTextField\n\t\t\t\t\tname={`${props.item.order}_name`}\n\t\t\t\t\trequired={true}\n\t\t\t\t\tlabelText=\"Name\"\n\t\t\t\t\tdata-state={`${props.item.order}_name`}\n\t\t\t\t\tdata-entityid={props.item.id} // database id of the item\n\t\t\t\t\tid={`${props.item.order}_name`} // id of the html element\n\t\t\t\t\thandleInputChange={props.handleInputChange}\n\t\t\t\t\thandleNewValue={props.handleNewValue}\n\t\t\t\t\tvalue={props.item.name}\n\t\t\t\t\tplaceholder=\"Enter the item name\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"item-body\">\n\t\t\t\t<span>Description:</span>\n\t\t\t\t<EditableTextField\n\t\t\t\t\tname={`${props.item.order}_description`}\n\t\t\t\t\trequired={true}\n\t\t\t\t\tlabelText=\"Description\"\n\t\t\t\t\tdata-state={`${props.item.order}_description`}\n\t\t\t\t\tdata-entityid={props.item.id} // database id of the item\n\t\t\t\t\tid={`${props.item.order}_description`} // id of the html element\n\t\t\t\t\thandleInputChange={props.handleInputChange}\n\t\t\t\t\thandleNewValue={props.handleNewValue}\n\t\t\t\t\tvalue={props.item.description}\n\t\t\t\t\tplaceholder=\"Enter the item description\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Col>\n\t);\n\t/*\n\tfunction onDeleteItem(e) {\n\t\tprops.onDeleteItem({\n\t\t\t'itemId': props.item.id,\n\t\t\t'listId': props.list,\n\t\t});\n\t} */\n};\n\nexport default Item;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport * as items from '../modules/items';\n\nimport { MAX_ITEMS_IN_LIST } from '../constants';\nimport './ItemsPage.scss';\nimport Item from './Item';\n\nclass ItemsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\n\t\t// set up the state to hold each item's name and description\n\t\t// coded by order\n\t\t// this is not elegant but keeps state flat\n\t\tfor (let i=1; i<= MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`${i}_name`] = '';\n\t\t\tthis.state[`${i}_description`] = '';\n\t\t}\n\n\t\t// fill in whatever items exist\n\t\tconst items = this.props.items;\n\n\t\tObject.keys(items).forEach((key) => {\n\t\t\tif (items[key].order && items[key].order <= MAX_ITEMS_IN_LIST) {\n\t\t\t\tconst order = items[key].order;\n\n\t\t\t\tthis.state[`${order}_id`] = items[key].id;\n\t\t\t\tthis.state[`${order}_name`] = items[key].name;\n\t\t\t\tthis.state[`${order}_description`] = items[key].description;\n\t\t\t}\n\t\t});\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (e) => {\n\t\tconst itemId = e.target.dataset.entityid;\n\n\t\t// the item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst identifiers = e.target.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = e.target.value;\n\n\t\tthis.props.dispatch(items.updateItem(itemId, propertyName, value));\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewItemForm': !this.state.showNewItemForm });\n\t}\n\n\trenderItemsList() {\n\t\tlet elements = [];\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\telements.push(\n\t\t\t\t<Row key={`item${i}`}>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\tkey={`item${i}`}\n\t\t\t\t\t\t\titem={{\n\t\t\t\t\t\t\t\t'id': this.state[`${i}_id`],\n\t\t\t\t\t\t\t\t'order': i,\n\t\t\t\t\t\t\t\t'name': this.state[`${i}_name`],\n\t\t\t\t\t\t\t\t'description': this.state[`${i}_description`],\n\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t);\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"items-list\">\n\t\t\t\t{this.renderItemsList()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(ItemsPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport * as lists from '../modules/lists';\nimport * as items from '../modules/items';\nimport * as permissions from '../modules/permissions';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport ItemsPage from '../components/ItemsPage';\nimport { sortedItems } from '../modules/items';\n\nclass ListDetails extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\t// to start with all we know is the slug. We have to find the list id, and then the list details and items can be loaded\n\t\tconst slug = props.match.params.slug;\n\n\t\tthis.state = {\n\t\t\t// find the list slug from the url\n\t\t\tslug,\n\t\t};\n\n\t\tprops.dispatch(lists.fetchListBySlug(slug));\n\t}\n\n\tonCreateItem = (item) => {\n\t\tthis.props.dispatch(items.createItem(item));\n\t}\n\n\tonDeleteItem = (item) => {\n\t\tthis.props.dispatch(items.deleteItem(item));\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\tif (prevProps.isLoading && !this.props.isLoading) {\n\t\t\t// just finished loading, need to check if user should view this list\n\t\t\tconst canViewList = permissions.canViewList({ 'slug': this.state.slug });\n\t\t\tconsole.log('canViewList ', canViewList);\n\t\t\tconst canUpdateList = permissions.canUpdateList({ 'slug': this.state.slug });\n\t\t\tconsole.log('canUpdateList ', canUpdateList);\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t{this.props.list && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2>{this.props.list.name}</h2>\n\t\t\t\t\t\t<p>Description: {this.props.list.description}</p>\n\t\t\t\t\t\t{this.props.items && (\n\t\t\t\t\t\t\t<ItemsPage\n\t\t\t\t\t\t\t\titems={this.props.items}\n\t\t\t\t\t\t\t\tlist={this.props.list.id}\n\t\t\t\t\t\t\t\tonCreateItem={this.onCreateItem}\n\t\t\t\t\t\t\t\tonDeleteItem={this.onDeleteItem}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nListDetails.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'lists': PropTypes.object.isRequired,\n\t'items': PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst lists = state.lists.things;\n\tconst list = lists[Object.keys(lists)[0]];\n\n\treturn ({\n\t\t'auth': state.auth,\n\t\t'errors': state.errors,\n\t\t'isLoading': state.lists.isLoading,\n\t\t'lists': lists,\n\t\t'list': list,\n\t\t'items': sortedItems(state),\n\t});\n};\n\nexport default connect(mapStateToProps)(withRouter(ListDetails));\n","// check whether the user can perform actions on lists, items\n// items inherit permissions from their list\n\n// result depends on whether they are logged in:\n// whether they own the list:\n// whether the list is public\n\n// list may be identified by id (primary key) or by slug (provided by URL)\n// for viewing, we could trust the server that if a list is returned, it can be viewed.\n// but for editing, we need to check if the user created it\n\n// identifier should be like { 'slug': 'abc' } or { 'id': 'efg' } i.e. an object with one property\n\nimport store from '../store';\nimport findObjectByProperty from './findObjectByProperty';\n\nexport function canViewList(identifier) {\n\t// a list can be viewed if public or if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.lists.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canViewList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.is_public || (list.created_by === userId))) {\n\t\t\tcanViewList = true;\n\t\t}\n\t}\n\n\treturn canViewList;\n}\n\nexport function canUpdateList(identifier) {\n\t// a list can be edited if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.lists.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canUpdateList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.created_by === userId)) {\n\t\t\tcanUpdateList = true;\n\t\t}\n\t}\n\n\treturn canUpdateList;\n}\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Account management</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/changepassword\" className=\"nav-link\">Change password</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps,)(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.forgotPasswordEmailNotSent());\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.dispatch(auth.forgotPassword(user));\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) &&\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>}\n\t\t\t\t<h2>Forgot your password?</h2>\n\t\t\t\t<p>Enter your email address. A reset password link will be emailed to you.</p>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.email && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.email}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"valid-feedback\">If the address {this.state.email} is associated with an account, an email has been sent. If you don't see it within a few minutes, please check your junk mail folder.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'forgotPassword': auth.forgotPassword,\n\t'forgotPasswordEmailNotSent': auth.forgotPasswordEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { changePassword, passwordNotChanged } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass ChangePassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'old_password': '',\n\t\t\t'new_password': '',\n\t\t\t'new_password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconsole.log('submit changePassword');\n\t\tconst data = {\n\t\t\t'old_password': this.state.old_password,\n\t\t\t'new_password1': this.state.new_password,\n\t\t\t'new_password2': this.state.new_password_confirm\n\t\t};\n\n\t\tthis.props.changePassword(data, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Change your password</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'new_password',\n\t\t\t\t\t'input2': 'new_password_confirm',\n\t\t\t\t\t'message': 'New passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"old_password\">Old password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"old_password\"\n\t\t\t\t\t\t\t\t\tid=\"old_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.old_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your old password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password\">New password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password_confirm\">Confirm your new password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tChange password now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.changePassword && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.changePassword}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t      {this.props.auth.changePasswordComplete && (<div className=\"valid-feedback\">Your new password has been saved</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nChangePassword.propTypes = {\n\t'changePassword': PropTypes.func.isRequired,\n\t'passwordNotChanged': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ changePassword, passwordNotChanged })(withRouter(ChangePassword));\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport { setCurrentUser, getUserInfo, logoutUser, getAuthToken } from '../modules/auth';\n\nimport Navbar from '../components/Navbar';\nimport Register from '../components/Register';\nimport Welcome from '../components/Welcome';\nimport Login from '../components/Login';\nimport Home from '../containers/Home';\nimport CreateList from '../containers/CreateList';\nimport ListDetails from '../containers/ListDetail';\nimport Account from '../components/Account';\nimport ForgotPassword from '../components/ForgotPassword';\nimport ChangePassword from '../components/ChangePassword';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password loads the bootstrap css from static/bootstrap\n\n// check if user is already logged in\nif(getAuthToken()) {\n\tstore.dispatch(setCurrentUser(localStorage.jwtToken));\n\tstore.dispatch(getUserInfo());\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.jwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\t\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t\t<Route exact path=\"/newlist\" component={ CreateList } />\n\t\t\t\t\t\t\t<Route exact path=\"/list/:slug\" component={ ListDetails } />\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/welcome\" component={ Welcome } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t<Route exact path=\"/changepassword\" component={ ChangePassword } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./containers/App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}
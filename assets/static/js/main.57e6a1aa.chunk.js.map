{"version":3,"sources":["modules/errors.js","modules/formatErrorMessages.js","modules/fetchAPI.js","modules/isEmpty.js","modules/auth.js","constants/index.js","modules/item.js","modules/list.js","modules/page.js","modules/rootReducer.js","store.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Welcome.js","components/Login.js","components/FlashMessage.js","components/Loading.js","components/ListsList.js","components/SetListIsPublic.js","modules/findObjectByProperty.js","modules/permissions.js","components/ListSummary.js","components/Pagination.js","components/ListsPage.js","containers/Home.js","containers/CreateList.js","components/EditableTextField.js","components/Item.js","components/ItemsPage.js","components/OrganizerList.js","components/Organizer.js","containers/ListDetail.js","components/Account.js","components/ForgotPassword.js","components/ChangePassword.js","components/Verified.js","containers/App.js","serviceWorker.js","index.js"],"names":["getErrors","error","type","payload","clearErrors","updeep","require","initialState","formatErrorMessages","errors","messageArray","Object","keys","forEach","key","push","map","item","join","fetchAPI","_ref","url","data","_ref$method","method","_ref$useAuth","useAuth","_ref$headers","headers","Authorization","concat","store","getState","auth","user","token","fetch","body","then","response","ok","contentType","get","includes","json","catch","Promise","reject","Error","message","text","html","page_type","status","isEmpty","value","undefined","length","trim","LOGOUT_USER_COMPLETE","setCurrentUser","dispatch","localStorage","setItem","setAuthToken","logoutUser","history","removeItem","logout user","getUserInfo","setUserInfo","username","email","id","slug","emailVerified","email_verified","get user info","forgotPasswordEmailNotSent","forgotPassword","formData","FormData","name","append","request password reset email","passwordNotChanged","changePasswordComplete","confirmEmailNotSent","sendConfirmationEmail","isLoading","isAuthenticated","forgotPasswordEmailSent","resetPasswordComplete","confirmEmailSent","LIST_IS_PUBLIC_VALUES","MAX_ITEMS_IN_LIST","CREATE_ITEM_SUCCEEDED","UPDATE_ITEM_SUCCEEDED","MOVE_ITEM_UP_SUCCEEDED","updateItem","itemId","propertyName","Content-Type","JSON","stringify","defineProperty","updateItemSucceeded","update item","moveItemUp","items","move item up error ","moveItemDown","_ref2","things","listId","list_id","order","item_below_id","list","initialItemsState","count","next","previous","organizerData","groupedItems","createSelector","state","lists","itemsByList","itemsArray","i","objectSpread","parent_item","parentItem","find","childListId","RECEIVE_ENTITIES","FETCH_LISTS_STARTED","FETCH_LISTS_FAILED","FETCH_LIST_BY_SLUG_STARTED","FETCH_LIST_BY_SLUG_FAILED","FILTER_LISTS","CREATE_LIST_STARTED","CREATE_LIST_SUCCEEDED","DELETE_LIST_SUCCEEDED","SET_LIST_IS_PUBLIC_SUCCEEDED","UPDATE_LIST_SUCCEEDED","RECEIVE_ORGANIZER_DATA","FETCH_ORGANIZER_DATA_STARTED","FETCH_ORGANIZER_DATA_FAILED","itemSchema","schema","Entity","listSchema","receiveEntities","entities","fetchLists","arguments","listset","topLevelListsOnly","limit","offset","normalize","results","fetch lists","fetchListBySlug","normalizedData","createList","create list","updateList","updateListSucceeded","deleteList","deleteListSucceeded","delete list","setListIsPublic","is_public","_ref3","setListIsPublicSucceeded","set list is public","fetchOrganizerData","userId","fetch my list names","initialListsState","getLists","getFilteredLists","page","searchTerm","filter","match","RegExp","getFilteredPublicLists","grouped","getMyGroupedAndFilteredLists","created_by","getOrganizerLists","getSortedOrganizerLists","listsArray","sort","a","b","localeCompare","getItemsForList","listItems","childList","getParentItemAndList","parentList","combineReducers","action","toConsumableArray","constant","confirmEmailAlreadyVerified","_action$payload","omit","updateIn","update","description","modified_by","modified_at","newItems","itemsObject","composeEnhancers","composeWithDevTools","createStore","rootReducer","applyMiddleware","thunk","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","onLogout","bind","assertThisInitialized","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","createElement","className","Link","to","onClick","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","Component","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","formLength","checkValidity","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","handleSubmit","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","node","setCustomValidity","classNames","assign","noValidate","children","Register","password","password_confirm","handleInputChange","target","password1","password2","registerUser","nextProps","Container","ValidatedForm_ValidatedForm","Row","Col","md","lg","Label","for","Input","required","onChange","minLength","pattern","registration","style","display","Welcome","Login","loginUser","authentication","FlashMessage","aria-hidden","Loading","Spinner","color","width","height","ListsList","headerText","SetListIsPublic","isPublic","tooltip","dataset","ispublic","onChangeIsPublic","listid","data-listid","data-ispublic","title","findObjectByProperty","parentObject","property","childObject","canViewList","identifier","canEditList","canCreateList","ListSummary","canEdit","permissions","sm","src_components_SetListIsPublic","onDeleteList","showCreatedBy","created_by_username","Pagination","pager","initialPage","currentPage","defaultPage","setPage","prevProps","pageNumber","_this$props","pageSize","getPager","totalPages","Math","min","onChangePage","totalItems","startPage","endPage","ceil","startIndex","endIndex","pages","Array","index","React","defaultProps","ListsPage","onSearch","onAddList","publicLists","components_ListsList","src_components_ListSummary","_this$props2","myLists","listsByIsPublic","selectedTab","handleTabClick","listsList","renderMyLists","renderPublicLists","check","defaultChecked","handleTopLevelListsChange","renderTabs","src_components_Pagination","Home","listReducer","confirm","setListSetURL","onCloseFlashMessage","URLSearchParams","location","search","_ref3$listset","_ref3$topLevelListsOn","_ref3$currentPage","URL","pathname","Loading_Loading","src_components_ListsPage","onCreateList","CreateList","newList","cancel","urlParams","parentItemId","parentItemName","parentListName","parentListSlug","newItem","elements","renderItemInputs","EditableTextField","fakeEvent","initialValue","toggleInput","showInput","overflowActive","textarea","expanded","onKeyUp","toggleMore","element","textElement","offsetHeight","scrollHeight","isOverflowActive","keyCode","which","classList","contains","newShowInputValue","isEditing","inputElement","handleNewValue","showMoreButton","moreButtonText","tabIndex","ref","react_markdown_default","escapeHtml","source","label","autoFocus","data-state","data-entityid","renderValue","Item","onCreateChildList","onMoveUp","onMoveItemUp","onMoveDown","onMoveItemDown","isEditingName","setIsEditingName","showDescription","canCreateChildList","canViewChildList","showUp","showDown","src_components_EditableTextField","ItemsPage","itemsReducer","entityid","split","toggleForm","showNewItemForm","src_components_Item","renderItemsList","OrganizerList","showItems","onSelectItem","onShowItems","childlistid","selectedItemOrder","parseInt","selectedListId","itemOrganizerData","childListElm","isSelectedItem","listOrganizerData","data-order","data-childlistid","isSelectedList","showItemsButtonText","renderItems","Organizer","componentDidUpdate","showOrganizer","parentListId","onClickOrganize","setTimeout","scrollIntoView","onClickCancel","onClickDone","selectedItemChildListId","setParentItem","onSelectParentItem","indexOf","_this3","components_OrganizerList","controls","renderLists","ListDetails","getListData","params","getOrganizerData","console","log","canView","list_name","list_description","showPrivacyWarning","privacyWarningText","breadcrumbs","src_components_Organizer","thisListItems","components_ItemsPage","content","renderPage","ownProps","parentItemAndList","itemReducer","Account","email_status","ForgotPassword","ChangePassword","old_password","new_password","new_password_confirm","new_password1","new_password2","changePassword","Verified","getItem","mytoptensJwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","window","hostname","navigator","serviceWorker","ready","unregister","render","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.57e6a1aa.chunk.js","sourcesContent":["// errorReducer.js\n\nconst GET_ERRORS = 'GET_ERRORS';\nconst CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const getErrors = error => {\n\t// error is an object, e.g. { 'registration': error.message }\n\treturn {\n\t\t'type': GET_ERRORS,\n\t\t'payload': error,\n\t};\n};\n\nexport const clearErrors = () => {\n\treturn {\n\t\t'type': CLEAR_ERRORS,\n\t};\n};\n\nvar updeep = require('updeep');\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\t// ensure we have an array of strings to allow multiple errors to be displayed\n\t\t\tlet errors = {};\n\n\t\t\tObject.keys(action.payload).forEach((key) => {\n\t\t\t\tif (typeof action.payload[key] === 'string') {\n\t\t\t\t\t// a string is simply copied\n\t\t\t\t\terrors[key] = [action.payload[key]];\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = [...action.payload[key]];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn updeep(errors, {}); // clear any existing errors\n\t\t}\n\n\t\tcase CLEAR_ERRORS: {\n\t\t\treturn {};\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// join arrays of error messages from different errors, into a single string.\n// it is expected that there will only ever be one type of error, e.g. 'register', but the object is parsed to be on the safe side.\n/*\n{ {'register': [\n\t\t'email already in use',\n\t\t'username already in use'\n\t\t]},\n\t{'login': [\n\t\t'could not log in'\n\t]\n}\n*/\n\nexport default function (errors) {\n\tlet messageArray = [];\n\tObject.keys(errors).forEach((key) => {\n\t\tif (typeof errors[key] === 'string') {\n\t\t\tmessageArray.push(errors[key]); // plain string error\n\t\t} else { // arary of errors\n\t\t\terrors[key].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\tmessageArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst message = messageArray.join(' ');\n\n\treturn message;\n};\n","// uses fetch to get or post data.\n// passes up useful errors to the calling function.\n// set useAuth to true for validating logged-in user: token will be sent in header\nimport store from '../store';\nimport formatErrorMessages from '../modules/formatErrorMessages';\n\nexport default function fetchAPI({ url, data, method = 'GET', useAuth = false, headers = {} }) {\n\tif (useAuth) {\n\t\theaders.Authorization = `Token ${store.getState().auth.user.token}`;\n\t}\n\n\treturn fetch(url, { headers, 'method': method, 'body': data })\n\t\t.then(response => {\n\t\t\t// fetch returns ok true / false in most situations\n\t\t\t// true is a successful response\n\t\t\tif (response.ok) {\n\t\t\t\tconst contentType = response.headers.get('Content-Type') || '';\n\n\t\t\t\tif (contentType.includes('application/json')) {\n\t\t\t\t\treturn response.json().catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('Invalid JSON: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (contentType.includes('text/html')) {\n\t\t\t\t\treturn response.text().then(html => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'page_type': 'generic',\n\t\t\t\t\t\t\t'html': html\n\t\t\t\t\t\t};\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('HTML error: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// ok == false means some problem to display\n\t\t\t\t// even though no error was returned\n\t\t\t\tif (response.status === 404) {\n\t\t\t\t\treturn Promise.reject(new Error('Page not found: ' + url));\n\t\t\t\t}\n\n\t\t\t\tif (response.status === 500) {\n\t\t\t\t\treturn Promise.reject(new Error('Internal server error: ' + url));\n\t\t\t\t}\n\n\t\t\t\treturn response.json().then(response => {\n\t\t\t\t\t// the server rejected the request, e.g. because of a wrong password, we want to display the reason\n\t\t\t\t\t// the information is contained in the json()\n\t\t\t\t\t// there may be more than one error, so join them into a single string.\n\t\t\t\t\t// multiline display would be more elegant but this will do for now and makes all errors consistent (one message string)\n\n\t\t\t\t\treturn Promise.reject(new Error(formatErrorMessages(response))\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\t// fetch returned an error\n\t\t\treturn Promise.reject(new Error(error.message));\n\t\t});\n};\n","// check for a null, empty, undefined object\n\nconst isEmpty = (value) => {\n\treturn (\n\t\tvalue === undefined ||\n\t\tvalue === null ||\n\t\t(typeof value === 'object' && Object.keys(value).length === 0) ||\n\t\t(typeof value === 'string' && value.trim().length === 0)\n\t);\n};\n\nexport default isEmpty;\n","// authReducer.js\n\nimport store from '../store';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors, clearErrors } from '../modules/errors';\nimport isEmpty from '../modules/isEmpty';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\nexport const PASSWORD_NOT_CHANGED = 'PASSWORD_NOT_CHANGED';\nexport const CHANGE_PASSWORD_COMPLETE = 'CHANGE_PASSWORD_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_NOT_SENT = 'CONFIRM_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_SENT = 'CONFIRM_EMAIL_SENT';\nexport const CONFIRM_EMAIL_ALREADY_VERIFIED = 'CONFIRM_EMAIL_ALREADY_VERIFIED';\n\n// Side effects Services\nexport const getAuthToken = () => {\n\treturn localStorage.getItem('mytoptensJwtToken');\n};\n\nfunction setAuthToken(token) {\n\tlocalStorage.setItem('mytoptensJwtToken', token);\n\treturn;\n}\n\nfunction removeAuthToken() {\n\tlocalStorage.removeItem('mytoptensJwtToken');\n\treturn;\n}\n\nexport const registerUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/registration/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t}).then(response => {\n\t\thistory.push('/welcome');\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'registration': error.message }));\n\t});\n};\n\nexport const loginUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/login/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\treturn dispatch(setCurrentUser(response.key));\n\t}).then(() => {\n\t\thistory.push('/');\n\t\t// after store has been updated with token, we can query the server for current user info\n\t\treturn store.dispatch(getUserInfo());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'authentication': 'Unable to log in with the provided credentials, please try again.' }));\n\t});\n};\n\nexport const setCurrentUser = (token, dispatch) => {\n\tsetAuthToken(token);\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': { token },\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\tdispatch(clearErrors());\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/logout/',\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\tremoveAuthToken();\n\t\treturn dispatch(logoutUserComplete());\n\t}).then(() => {\n\t\t// ensure token is removed from localStorage and store before redirecting\n\t\t// history.push('/');\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'logout user': 'Unable to logout' }));\n\t});\n};\n\n///////////////////////////////\n// get user info\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = () => (dispatch) => {\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/user/',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t}).then(user => {\n\t\treturn dispatch(setUserInfo({\n\t\t\t'username': user.username,\n\t\t\t'email': user.email,\n\t\t\t'id': user.id,\n\t\t\t'slug': user.slug,\n\t\t\t'emailVerified': user.email_verified,\n\t\t}));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'get user info': 'Unable to get user info' }));\n\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/reset/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\t return dispatch(forgotPasswordEmailSent());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'request password reset email': `Unable to send a password reset email. It is likely that the email address ${email} is not associated with a registered user` }));\n\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n//////////////////////////////////\n// change password\nexport const changePassword = (data) => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(passwordNotChanged());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in data) {\n\t\tformData.append(name, data[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/change/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tdispatch(changePasswordComplete());\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'changePassword': error.message }));\n\t});\n};\n\nexport const passwordNotChanged = token => {\n\treturn {\n\t\t'type': PASSWORD_NOT_CHANGED,\n\t};\n};\n\nexport const changePasswordComplete = (token) => {\n\treturn {\n\t\t'type': CHANGE_PASSWORD_COMPLETE,\n\t};\n};\n\n//////////////////////////////////\n// Email confirmation\nexport const confirmEmailNotSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_NOT_SENT\n\t};\n};\n\nexport const confirmEmailSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_SENT\n\t};\n};\n\nexport const confirmEmailAlreadyVerified = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_ALREADY_VERIFIED\n\t};\n};\n\n//////////////////////////////////\n\nexport const sendConfirmationEmail = () => (dispatch) => {\n\tdispatch(clearErrors());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/sendconfirmationemail/',\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tif (response.message === 'Email confirmation sent') {\n\t\t\treturn dispatch(confirmEmailSent());\n\t\t} else if (response.message === 'Email already verified') {\n\t\t\treturn dispatch(confirmEmailAlreadyVerified());\n\t\t}\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'sendConfirmationEmail': error.message }));\n\t});\n};\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isLoading': false,\n\t'isAuthenticated': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'changePasswordComplete': false,\n\t'confirmEmailSent': false,\n\t'user': {}\n};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'isLoading': true,\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user info\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user info\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': false,\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'slug': action.payload.slug,\n\t\t\t\t\t'id': action.payload.id,\n\t\t\t\t\t'emailVerified': action.payload.emailVerified,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// forgot password\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase PASSWORD_NOT_CHANGED: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': false,\n\t\t\t\t'errors': {}\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CHANGE_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// confirm email\n\t\tcase CONFIRM_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': false,\n\t\t\t\t'confirmEmailAlreadyVerified': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_ALREADY_VERIFIED: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailAlreadyVerified': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","export const LIST_IS_PUBLIC_VALUES = [false, true];\nexport const MAX_ITEMS_IN_LIST = 10;\nexport const PAGE_SIZE = 10;\n","import { createSelector } from 'reselect';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport store from '../store';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tRECEIVE_ENTITIES,\n\tFETCH_LIST_BY_SLUG_STARTED,\n\tRECEIVE_ORGANIZER_DATA,\n} from './list';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const CREATE_ITEM_REQUESTED = 'CREATE_ITEM_REQUESTED';\nexport const CREATE_ITEM_SUCCEEDED = 'CREATE_ITEM_SUCCEEDED';\nexport const UPDATE_ITEM_SUCCEEDED = 'UPDATE_ITEM_SUCCEEDED';\nexport const MOVE_ITEM_UP_SUCCEEDED = 'MOVE_ITEM_UP_SUCCEEDED';\n\n////////////////////////////////////\n// create item\nexport const createItem = item => dispatch => {\n\tdispatch(createItemRequested());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/item/',\n\t\t'data': JSON.stringify(item),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\treturn dispatch(createItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create item': error.message }));\n\t});\n};\n\nexport function createItemRequested() {\n\treturn {\n\t\t'type': 'CREATE_ITEM_REQUESTED',\n\t};\n}\n\nexport function createItemSucceeded(item) {\n\treturn {\n\t\t'type': 'CREATE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titem\n\t\t}\n\t};\n}\n\n////////////////////////////////////\n// update item\nexport const updateItem = (itemId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/item/${itemId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateItemSucceeded(response) {\n\treturn {\n\t\t'type': UPDATE_ITEM_SUCCEEDED,\n\t\t'payload': response,\n\t};\n}\n\n//////////////////////////////////\n// move item up\nexport const moveItemUp = ({ itemId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/item/${itemId}/moveup/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(moveItemUpSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'move item up error ': error.message }));\n\t});\n};\n\nexport const moveItemDown = ({ itemId }) => dispatch => {\n\t// to move an item down, we move the item below up\n\t// find the item\n\tconst item = store.getState().item.things[itemId];\n\n\t// find its parent list\n\tconst listId = item.list_id;\n\n\t// find the item's order\n\tconst order = item.order;\n\n\t// find the item below it in the parent list\n\tconst item_below_id = store.getState().list.things[listId].item[order];\n\n\tdispatch(moveItemUp({ 'itemId': item_below_id }));\n};\n\nexport function moveItemUpSucceeded(items) {\n\treturn {\n\t\t'type': 'MOVE_ITEM_UP_SUCCEEDED',\n\t\t'payload': {\n\t\t\titems,\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialItemsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'count': null,\n\t'next': null,\n\t'previous': null,\n\t'things': {},\n\t'organizerData': {},\n};\n\n/////////////////////////////\n// organizer data\n// all items and lists, for selector to use\nexport const getOrganizerItems = state => state.item.organizerData;\nconst getOrganizerLists = state => state.list.organizerData;\n\nexport const groupedItems = createSelector(\n\t[getOrganizerItems, getOrganizerLists],\n\t(items, lists) => {\n\t\tlet itemsByList = {};\n\n\t\t// find the items for each list\n\t\tObject.keys(lists).map(listId => { // eslint-disable-line array-callback-return\n\t\t\tconst list = lists[listId];\n\n\t\t\tlet itemsArray = [];\n\n\t\t\tfor (let i=0; i<list.item.length; i++) {\n\t\t\t\tlet item = { ...items[list.item[i]] };\n\n\t\t\t\tif (item.name !== '') {\n\t\t\t\t\titemsArray.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsByList[list.id] = itemsArray;\n\t\t});\n\n\t\t// note the parent_item, if any, of each list\n\t\t// add the list's id to the item as childListId\n\t\tObject.keys(lists).map(listId => { // eslint-disable-line array-callback-return\n\t\t\tconst list = lists[listId];\n\n\t\t\tif (list.parent_item) {\n\t\t\t\tconst parentItem = items[list.parent_item];\n\n\t\t\t\tif (parentItem) {\n\t\t\t\t\t// can't use array order to pull out item, because items with no name have been removed\n\t\t\t\t\t// instead, explicitly find the item object in the array by its 'order' property\n\n\t\t\t\t\tlet itemsArray = itemsByList[parentItem.list_id];\n\t\t\t\t\tlet item = itemsArray.find(item => item.order === parentItem.order);\n\t\t\t\t\titem.childListId = list.id;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn itemsByList;\n\t}\n\n);\n\n/////////////////////////////\n// state updates\n\nexport default function item(state = initialItemsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialItemsState, {}); // constant provides placement instead of update, so all previous entries are removed\n\t\t}\n\t\t\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\n\t\t\tlet things = {};\n\n\t\t\tif (entities && entities.item) {\n\t\t\t\tthings = entities.item;\n\t\t\t}\n\n\t\t\treturn updeep({\n\t\t\t\t'things': updeep.constant(things),\n\t\t\t\t'organizerData': updeep.constant({}), // new list data so clear out old organizer data, this must be loaded separately\n\t\t\t\t'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\t\t\treturn updeep({ 'things': { [item.id]: item } }, state);\n\t\t}\n\n\t\tcase UPDATE_ITEM_SUCCEEDED: {\n\t\t\t// update editable properties\n\t\t\tconst update = {\n\t\t\t\t'name': action.payload.name,\n\t\t\t\t'description': action.payload.description,\n\t\t\t\t'modified_at': action.payload.modified_at,\n\t\t\t\t'order': action.payload.order,\n\t\t\t};\n\n\t\t\treturn updeep({ 'things': { [action.payload.id]: update } }, state);\n\t\t}\n\n\t\tcase MOVE_ITEM_UP_SUCCEEDED: {\n\t\t\tconst itemsArray = action.payload.items; // array containing the two items that have been swapped\n\n\t\t\tlet itemsObject = {};\n\t\t\titemsArray.map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\titemsObject[item.id] = item;\n\t\t\t});\n\t\t\treturn updeep({ 'things': itemsObject }, state);\n\t\t}\n\n\t\tcase RECEIVE_ORGANIZER_DATA: {\n\t\t\tconst { entities } = action.payload;\n\n\t\t\tif (entities && entities.item) {\n\t\t\t\treturn updeep({ 'organizerData': updeep.constant(entities.item), 'isLoading': false }, state);\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n// all items, for selector to use\n// export const getItems = state => state.item.things;\n\n//// not currently used but left in as an example of sorting list items by order\n// items belonging to the current list\n/* export const sortedItems = createSelector(\n\t[getItems],\n\t(items) => {\n\t\tlet listItems = (Object.keys(items).map(id => {\n\t\t\treturn items[id];\n\t\t})).sort(function(a, b){\n\t\t\treturn a.order - b.order; // sort to index order\n\t\t});\n\n\t\treturn listItems;\n\t}\n); */\n\n","import { createSelector } from 'reselect';\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport { normalize, schema } from 'normalizr';\nimport store from '../store';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tCREATE_ITEM_SUCCEEDED,\n\t// DELETE_ITEM_SUCCEEDED,\n\tMOVE_ITEM_UP_SUCCEEDED,\n} from './item';\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const RECEIVE_ENTITIES = 'RECEIVE_ENTITIES';\nexport const FETCH_LISTS_STARTED = 'FETCH_LISTS_STARTED';\nexport const FETCH_LISTS_FAILED = 'FETCH_LISTS_FAILED';\nexport const FETCH_LIST_BY_SLUG_STARTED = 'FETCH_LIST_BY_SLUG_STARTED';\nexport const FETCH_LIST_BY_SLUG_FAILED = 'FETCH_LISTS_FAILED';\nexport const FILTER_LISTS = 'FILTER_LISTS';\nexport const CREATE_LIST_STARTED = 'CREATE_LIST_STARTED';\nexport const CREATE_LIST_SUCCEEDED = 'CREATE_LIST_SUCCEEDED';\nexport const DELETE_LIST_SUCCEEDED = 'DELETE_LIST_SUCCEEDED';\nexport const SET_LIST_IS_PUBLIC_SUCCEEDED = 'SET_LIST_IS_PUBLIC_SUCCEEDED';\nexport const UPDATE_LIST_SUCCEEDED = 'UPDATE_LIST_SUCCEEDED';\n\nexport const RECEIVE_ORGANIZER_DATA = 'RECEIVE_ORGANIZER_DATA';\nexport const FETCH_ORGANIZER_DATA_STARTED = 'FETCH_ORGANIZER_DATA_STARTED';\nexport const FETCH_ORGANIZER_DATA_FAILED = 'FETCH_ORGANIZER_DATA_FAILED';\n\nconst itemSchema = new schema.Entity('item', {\n\t'list': ['listSchema'],\n});\nconst listSchema = new schema.Entity('list', {\n\t'item': [itemSchema],\n});\n\nfunction receiveEntities(entities) {\n\treturn {\n\t\t'type': RECEIVE_ENTITIES,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchListsStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_LISTS_STARTED,\n\t};\n}\n\nfunction fetchListsFailed() {\n\treturn {\n\t\t'type': FETCH_LISTS_FAILED\n\t};\n}\n\nexport function fetchLists({ listset, topLevelListsOnly, limit, offset } = {}) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListsStarted());\n\t\t// if the user is not logged in, don't use auth. The server should return only the lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\tlet url = `/api/v1/content/list/?`;\n\n\t\tif (topLevelListsOnly) {\n\t\t\turl += '&toplevel=1';\n\t\t}\n\n\t\tif (listset) {\n\t\t\turl += `&listset=${listset}`;\n\t\t}\n\n\t\tif (limit) {\n\t\t\turl += `&limit=${limit}`;\n\t\t}\n\n\t\tif (offset) {\n\t\t\turl += `&offset=${offset}`;\n\t\t}\n\t\treturn fetchAPI({\n\t\t\t'url': url,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tlet data = {\n\t\t\t\t'count': response.count,\n\t\t\t\t'next': response.next,\n\t\t\t\t'previous': response.previous,\n\t\t\t\t'entities': normalize(response.results, [listSchema]).entities,\n\t\t\t};\n\n\t\t\treturn dispatch(receiveEntities(data));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListsFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////\n// fetch a single list by slug\nexport function fetchListBySlugStarted() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_STARTED,\n\t};\n}\n\nfunction fetchListBySlugFailed() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_FAILED\n\t};\n}\n\nexport function fetchListBySlug(slug) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListBySlugStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return the list if a non-authenticated user should see it.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/listbyslug/?slug=${slug}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListBySlugFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\nexport function filterLists(searchTerm) {\n\treturn { \n\t\t'type': FILTER_LISTS,\n\t\t'payload': { searchTerm },\n\t};\n}\n\n/////////////////////////////\n// create list\nexport const createList = (list, history) => dispatch => {\n\tdispatch(createListStarted());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/list/',\n\t\t'data': JSON.stringify(list),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\tdispatch(createListSucceeded(response));\n\t\thistory.push(`/list/${response.slug}`);\n\t\treturn;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create list': error.message }));\n\t});\n};\n\nexport function createListStarted() {\n\treturn {\n\t\t'type': CREATE_LIST_STARTED,\n\t};\n}\n\nexport function createListSucceeded(list) {\n\treturn {\n\t\t'type': CREATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tlist\n\t\t}\n\t};\n}\n\n///////////////////////////\n// update list\nexport const updateList = (listId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/list/${listId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateListSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateListSucceeded(response) {\n\treturn {\n\t\t'type': UPDATE_LIST_SUCCEEDED,\n\t\t'payload': response,\n\t};\n}\n\n///////////////////////////\n// delete list\nexport const deleteList = id => (dispatch, getState) => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/list/${id}/`,\n\t\t'method': 'DELETE',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(deleteListSucceeded(id));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete list': error.message }));\n\t});\n};\n\nexport function deleteListSucceeded(id) {\n\treturn {\n\t\t'type': DELETE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport const setListIsPublic = ({ id, is_public }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/list/${id}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ is_public }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(setListIsPublicSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'set list is public': error.message }));\n\t});\n};\n\nexport function setListIsPublicSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': SET_LIST_IS_PUBLIC_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// fetch the names of my lists and their items\n// for displaying and managing list hierarchy i.e. list parent_item\n// returns only the fields that are required for this function\nfunction receiveOrganizerData(entities) {\n\treturn {\n\t\t'type': RECEIVE_ORGANIZER_DATA,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchOrganizerDataStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_ORGANIZER_DATA_STARTED,\n\t};\n}\n\nfunction fetchOrganizerDataFailed() {\n\treturn {\n\t\t'type': FETCH_ORGANIZER_DATA_FAILED\n\t};\n}\n\nexport function fetchOrganizerData(userId) {\n\t// get minimal information about all lists owned by one user\n\t// for use in organizer\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchOrganizerDataStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return only the lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/list/?expand=item&fields=id,name,item,is_public,order,parent_item,slug&created_by=${userId}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\t\t\t\n\t\t\treturn dispatch(receiveOrganizerData(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchOrganizerDataFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch my list names': error.message }));\n\t\t});\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\n// this is initial state of lists and the list loading states\n// note that the lists's list of items is called 'item' for consistency with the database.\nconst initialListsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'count': 0,\n\t'next': '',\n\t'previous': '',\n\t'things': {},\n\t'organizerData': {},\n};\n\n// 'state' here is global state\nexport const getSearchTerm = state => {\n\treturn state.page.searchTerm;\n};\n\n// returns lists as an array not an object\nexport const getLists = state => {\n\treturn Object.keys(state.list.things).map(id => {\n\t\treturn state.list.things[id];\n\t});\n};\n\nconst getItems = state => state.item.things;\n\nexport const getFilteredLists = createSelector(\n\t[getLists, getSearchTerm],\n\t(lists, searchTerm) => {\n\t\treturn lists.filter(list => {\n\t\t\t// if no search term, return every list\n\t\t\tif (searchTerm === '') {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\treturn list.name.match(new RegExp(searchTerm, 'i'));\n\t\t});\n\t}\n);\n\nexport const getGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => list.is_public === is_public);\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\nexport const getFilteredPublicLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\treturn lists.filter(list => {\n\t\t\treturn list.is_public;\n\t\t});\n\t}\n);\n\nexport const getMyGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => (list.created_by === store.getState().auth.user.id) && (list.is_public === is_public));\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\n/////////////////////////////\n// organizer data\nexport const getOrganizerLists = state => state.list.organizerData;\nconst getOrganizerItems = state => state.item.organizerData;\n\n// returns lists in an array, sorted by name\n// instead of the state.list.organizerData object, keyed by id\nexport const getSortedOrganizerLists = createSelector(\n\t[getOrganizerLists],\n\t(lists) => {\n\t\tconst listsArray = Object.keys(lists).map(id => {\n\t\t\treturn lists[id];\n\t\t});\n\n\t\tlistsArray.sort(function (a, b) {\n\t\t\treturn a.name.localeCompare(b.name);\n\t\t});\n\n\t\treturn listsArray;\n\t}\n);\n\n// lists, items should be memoized\n// even though the rest of the selector will be rerun, it's still a gain\nexport const getItemsForList = createSelector(\n\t[getLists, getItems],\n\t(lists, items) => (list) => {\n\t\tlet listItems = [];\n\n\t\tif (list) {\n\t\t\tlist.item.map((itemId) => { // eslint-disable-line array-callback-return\n\t\t\t\tlet item = { ...items[itemId] }; // shallow copy is extensible\n\n\t\t\t\tconst childList = lists.find(list => list.parent_item === itemId);\n\n\t\t\t\tif (childList) {\n\t\t\t\t\titem.childList = { ...childList };\n\t\t\t\t}\n\n\t\t\t\tlistItems.push(item);\n\t\t\t});\n\t\t}\n\t\treturn listItems;\n\t}\n);\n\n// lists, items should be memoized\n// even though the rest of the selector will be rerun, it's still a gain\nexport const getParentItemAndList = createSelector(\n\t[getOrganizerLists, getOrganizerItems],\n\t// find a lists's parent item and the parent list, if any\n\t// uses the organizer data which has minimal data for all lists belonging to that user\n\t(lists, items) => (list) => {\n\t\tlet parentItem;\n\t\tlet parentList;\n\n\t\tif (list && list.parent_item) {\n\t\t\tif (items) {\n\t\t\t\tparentItem = items[list.parent_item];\n\n\t\t\t\tif (parentItem) {\n\t\t\t\t\tparentList = lists[parentItem.list_id];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { parentItem, parentList };\n\t}\n);\n\n/////////////////////////////\n// state updates\n\n// state here is the substate state.lists\n// the book uses 'items' for the list of things i.e. lists. items\n// as 'items' for us is a specific thing, we need another name for the set of entities to be displayed i.e. the lists themselves\n// so those are globalState.lists.things\n// i.e. state.things here\nexport default function list(state = initialListsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialListsState, {});\n\t\t}\n\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\t// load lists data into store\n\t\t\tconst { count, previous, next, entities } = action.payload;\n\n\t\t\tlet things = {};\n\n\t\t\tif (entities && entities.list) {\n\t\t\t\tthings = entities.list;\n\t\t\t}\n\n\t\t\treturn updeep({\n\t\t\t\t'count': count,\n\t\t\t\t'previous': previous,\n\t\t\t\t'next': next,\n\t\t\t\t'things': updeep.constant(things), // constant provides placement instead of update, so all previous entries are removed\n\t\t\t\t'organizerData': updeep.constant({}), // new list data so clear out old organizer data, this must be loaded separately\n\t\t\t\t'isLoading': false\n\t\t\t}, state);\n\n\t\t\t//return updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true\t}, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase CREATE_LIST_STARTED: {\n\t\t\t// at present this does nothing, it's really just to track that the action happened\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase CREATE_LIST_SUCCEEDED: {\n\t\t\tconst list = action.payload.list;\n\t\t\treturn updeep({ 'things': { [list.id]: list } }, state);\n\t\t}\n\n\t\tcase DELETE_LIST_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tcase SET_LIST_IS_PUBLIC_SUCCEEDED: {\n\t\t\tconst listId = action.payload.id;\n\n\t\t\treturn updeep({ 'things': { [listId]: { 'is_public': action.payload.is_public } } }, state);\n\t\t\t// reminder of another way to update nested arrays\n\t\t\t/* const index = state.things.findIndex((list) => list.id === action.payload.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\treturn updeep.updateIn(`things.${index}.is_public`, action.payload.is_public, state);\n\t\t\t} \n\n\t\t\treturn state; // in case list was not found\n\t\t\t*/\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\n\t\t\tfunction addItem(items) {\n\t\t\t\treturn [].concat(items, item.id);\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${item.list}.item`, addItem, state);\n\t\t}\n\n\t\t/* case DELETE_ITEM_SUCCEEDED: {\n\t\t\tfunction deleteItem(items) {\n\t\t\t\tconst itemIndex = items.findIndex((item) => item === action.payload.itemId); \n\t\t\t\tlet newItems = [].concat(items);\n\t\t\t\tnewItems.splice(itemIndex, 1);\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${action.payload.listId}.items`, deleteItem, state);\n\t\t} */\n\n\t\tcase UPDATE_LIST_SUCCEEDED: {\n\t\t\t// update editable properties\n\t\t\tconst update = {\n\t\t\t\t'name': action.payload.name,\n\t\t\t\t'description': action.payload.description,\n\t\t\t\t'is_public': action.payload.is_public,\n\t\t\t\t'modified_by': action.payload.modified_by,\n\t\t\t\t'modified_at': action.payload.modified_at,\n\t\t\t\t'parent_item': action.payload.parent_item,\n\t\t\t};\n\n\t\t\treturn updeep({ 'things': { [action.payload.id]: update } }, state);\n\t\t}\n\n\t\tcase MOVE_ITEM_UP_SUCCEEDED: {\n\t\t\tconst itemsArray = action.payload.items; // array containing the two items that have been swapped\n\t\t\t// update the Items array in their parent list, change order\n\t\t\tconst listId = itemsArray[0].list_id;\n\n\t\t\tfunction replaceItems(items) {\n\t\t\t\tlet newItems = [].concat(state.things[listId].item);\n\t\t\t\titemsArray.map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\t\tnewItems[item.order-1] = item.id;\n\t\t\t\t});\n\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${listId}.item`, replaceItems, state);\n\t\t}\n\n\t\tcase RECEIVE_ORGANIZER_DATA: {\n\t\t\t// load lists data into store\n\t\t\tconst { entities } = action.payload;\n\t\t\tlet lists = {};\n\n\t\t\tif (entities && entities.list) {\n\t\t\t\tlists = entities.list; // there is at least one list\n\t\t\t}\n\n\t\t\treturn updeep({ 'organizerData': updeep.constant(lists), 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_ORGANIZER_DATA_STARTED: {\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase FETCH_ORGANIZER_DATA_FAILED: {\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","import {\n\tFILTER_LISTS,\n} from './list';\n\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'searchTerm': '',\n};\n\nexport default function page(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FILTER_LISTS: {\n\t\t\treturn updeep({ 'searchTerm': action.payload.searchTerm }, state);\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","// note that the reducers are called 'list', 'item' for consistency with the database and endpoints\n// this terminology is maintained in the store\n// however in the UI we use 'lists' and 'items' for the plural\n// this isn't ideal but absolute naming consistency seems to be required on the server for DRF FlexFields to work\n\n\n// server, store: list, listbyslug, item\n// React components: lists, items\n\n// import the partial reducers\nimport { combineReducers } from 'redux';\nimport errors from './errors';\nimport auth from './auth';\nimport page from './page';\nimport list from './list';\nimport item from './item';\n// by importing the actual reducer as the default, the state of each is initialised\n\nexport default combineReducers({\n\t'errors': errors,\n\t'auth': auth,\n\t'page': page,\n\t'list': list,\n\t'item': item,\n});\n","// store.js\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules/rootReducer';\n\nconst composeEnhancers = composeWithDevTools({\n\t// options like actionSanitizer, stateSanitizer\n});\n\nconst store = createStore(\n\trootReducer, \n\t// inititalState, // by not supplying initial state, we tell the store to use the defaults specified in the reducer\n\tcomposeEnhancers(\n\t\tapplyMiddleware(thunk),\n\t));\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./modules/rootReducer', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../modules/auth';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\n\t\tthis.onLogout = this.onLogout.bind(this);\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(e);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's handleSubmit\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email address to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row md=\"9\" lg=\"6\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.registration && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.registration}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Shown after successful registration of a new user\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Welcome extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Welcome to My Top Tens</h2>\n\t\t\t\t<p>Your account has been created.</p>\n\t\t\t\t<p>To create lists, you will need to verify your email address. An email containing a verification link has been sent to the email address with which you registered. Please click the link to verify your email address.</p>\n\t\t\t\t<p>If you do not receive the email within a few minutes, please check your Junk or Spam folder.</p>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<p>You can request a new registration email by <Link to=\"/login\">Logging in</Link> and going to your user account (click your username in the header bar).</p>\n\t\t\t\t\t\t\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nWelcome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps)(Welcome);\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.authentication && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.authentication}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","import React from 'react';\n\n// onClick should dismiss the condition that caused the FlashMessage to be displayed\n// it is the responsibility of the component that triggers the FlashMessage, to also provide the way to dismiss it\nexport default function FlashMessage({ message, type, onClick }) {\n\treturn (\n\t\t<div className={`flash-error ${type}`}>\n\t\t\t<span>{message}</span>\n\t\t\t<button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={onClick}>\n\t\t\t  <span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React, { Component } from 'react';\nimport { Spinner } from 'reactstrap';\nimport './Loading.scss';\n\nexport default class Loading extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='loading'>\n\t\t\t\t<div className='inner-tube'>\n\t\t\t\t\t<Spinner color='secondary' style={{ 'width': '3rem', 'height': '3rem' }} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// List of all lists\n\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst ListsList = ({ children, is_public, headerText }) => {\n\treturn (\n\t\t<Container className=\"lists-list\">\n\t\t\t{headerText &&\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h3 className=\"lists-list-name\">\n\t\t\t\t\t\t{headerText}\n\t\t\t\t\t</h3>\n\t\t\t\t</Col>\n\t\t\t</Row>}\n\t\t\t<Row>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default ListsList;\n","// Set whether the list is public\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport React from 'react';\n\nimport './SetListIsPublic.scss';\n\nconst SetListIsPublic = props => {\n\tconst listId = props.listId;\n\tconst isPublic = props.isPublic ? 'public' : 'private';\n\tconst tooltip = props.isPublic ? 'Public' : 'Private';\n\n\n\tfunction onChangeIsPublic(e) {\n\t\t// map from button data to true / false\n\t\tconst value = e.target.dataset.ispublic === 'public' ? true : false;\n\t\tprops.onChangeIsPublic({ 'id': e.target.dataset.listid, 'is_public': !value });\n\t}\n\n\treturn (\n\t\t<div className=\"is-public\">\n\t\t\t<button\n\t\t\t\tonClick={onChangeIsPublic}\n\t\t\t\tdata-listid={listId}\n\t\t\t\tdata-ispublic={isPublic}\n\t\t\t\tclassName={`${isPublic} btn btn-default`}\n\t\t\t\ttitle={tooltip}\n\t\t\t>&nbsp;</button>\n\t\t</div>\n\t);\n};\n\nexport default SetListIsPublic;\n","export default function findObjectByProperty({ parentObject, property, value }) {\n\t// e.g. find a list in the store based on its slug\n\t// it feels like there ought to be a smarter way to do this!\n\t// but this does work, and stops once the object is found\n\tconst keys = Object.keys(parentObject);\n\n\tfor (let i=0; i<keys.length; i++) {\n\t\tlet childObject = parentObject[keys[i]];\n\t\tif (childObject[property] === value) {\n\t\t\treturn childObject;\n\t\t}\n\t}\n\n\treturn;\n}\n","// check whether the user can perform actions on lists, items\n// items inherit permissions from their list\n\n// result depends on whether they are logged in:\n// whether they own the list:\n// whether the list is public\n\n// list may be identified by id (primary key) or by slug (provided by URL)\n// for viewing, we could trust the server that if a list is returned, it can be viewed.\n// but for editing, we need to check if the user created it\n\n// identifier should be like { 'slug': 'abc' } or { 'id': 'efg' } i.e. an object with one property\n\nimport store from '../store';\nimport findObjectByProperty from './findObjectByProperty';\n\nexport function canViewList(identifier) {\n\t// a list can be viewed if public or if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.list.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canViewList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.is_public || (list.created_by === userId))) {\n\t\t\tcanViewList = true;\n\t\t}\n\t}\n\n\treturn canViewList;\n}\n\nexport function canEditList(identifier) {\n\t// a list can be edited if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.list.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canEditList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.created_by === userId)) {\n\t\t\tcanEditList = true;\n\t\t}\n\t}\n\n\treturn canEditList;\n}\n\nexport function canCreateList() {\n\t// the user can create a list if they are logged in\n\t// and have verified their email address\n\tconst state = store.getState();\n\n\tif (state.auth.isAuthenticated && state.auth.user.emailVerified) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n","// Top-level summary of a list\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport SetListIsPublic from './SetListIsPublic';\n\nimport * as permissions from '../modules/permissions';\n\nimport './ListSummary.scss';\n\nconst ListSummary = props => {\n\tlet canEdit = permissions.canEditList({ 'id': props.list.id });\n\n\treturn (\n\t\t<Col sm=\"12\" md=\"6\">\n\t\t\t<div className=\"list-summary\">\n\t\t\t\t<Link to={`/list/${props.list.slug}`}>\n\t\t\t\t\t<div className=\"list-name\">\n\t\t\t\t\t\t<div>{props.list.name}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\t\t\t\t{canEdit && (\n\t\t\t\t\t<div className=\"list-summary-controls\">\n\t\t\t\t\t\t<SetListIsPublic\n\t\t\t\t\t\t\tlistId={props.list.id}\n\t\t\t\t\t\t\tisPublic={props.list.is_public}\n\t\t\t\t\t\t\tonChangeIsPublic={props.onChangeIsPublic}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button className=\"btn btn-danger\" title=\"Delete\" onClick={onDeleteList}>X</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<Link to={`/list/${props.list.slug}`}>\n\t\t\t\t\t<div className=\"list-description\">{props.list.description}</div>\n\t\t\t\t</Link>\n\t\t\t\t\n\t\t\t\t{props.showCreatedBy && \n\t\t\t\t\t<div className=\"list-created-by\">{props.list.created_by_username}</div>\n\n\t\t\t\t}\n\t\t\t</div>\n\t\t</Col>\n\t);\n\n\tfunction onDeleteList(e) {\n\t\tprops.onDeleteList({ 'id': props.list.id, 'name': props.list.name });\n\t}\n};\n\nexport default ListSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.scss';\n// adapted from http://jasonwatmore.com/post/2017/03/14/react-pagination-example-with-logic-like-google\n// major changes to render only pagination controls, not data\n// replaced <a> with <button> for accessibility\n \nclass Pagination extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { 'pager': {} };\n\t}\n \n\tcomponentDidMount() {\n\t\t// set page if there is a count\n\t\t// also check for currentPage. Parent component may re-render, causing this component to be recreated.\n\t\tif (this.props.count) {\n\t\t\tconst initialPage = this.props.currentPage ? this.props.currentPage : this.props.defaultPage;\n\t\t\tthis.setPage(initialPage);\n\t\t}\n\t}\n \n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t// reset page if items array has changed\n\t\tif (this.props.count !== prevProps.count) {\n\t\t\tthis.setPage(this.props.defaultPage);\n\t\t}\n\t}\n \n\tsetPage(pageNumber) {\n\t\tvar { count, pageSize } = this.props;\n\t\tvar pager = this.state.pager;\n \n\t\t// get new pager object for specified page\n\t\tpager = this.getPager(count, pageNumber, pageSize);\n\n\t\tif (pageNumber < 1 || pageNumber > pager.totalPages) {\n\t\t\treturn;\n\t\t}\n\n\t\tpageNumber = Math.min(pageNumber, pager.totalPages);\n \n\t\t// update state\n\t\tthis.setState({ 'pager': pager });\n \n\t\tthis.props.onChangePage(pageNumber);\n\t}\n \n\tgetPager(totalItems, currentPage, pageSize) {\n\t\t// default to first page\n\t\tcurrentPage = currentPage || 1;\n \n\t\t// default page size is 10\n\t\tpageSize = pageSize || 10;\n \n\t\t// calculate total pages\n\t\tvar totalPages = Math.ceil(totalItems / pageSize);\n \n\t\tvar startPage, endPage;\n\t\tif (totalPages <= 10) {\n\t\t\t// less than 10 total pages so show all\n\t\t\tstartPage = 1;\n\t\t\tendPage = totalPages;\n\t\t} else {\n\t\t\t// more than 10 total pages so calculate start and end pages\n\t\t\tif (currentPage <= 6) {\n\t\t\t\tstartPage = 1;\n\t\t\t\tendPage = 10;\n\t\t\t} else if (currentPage + 4 >= totalPages) {\n\t\t\t\tstartPage = totalPages - 9;\n\t\t\t\tendPage = totalPages;\n\t\t\t} else {\n\t\t\t\tstartPage = currentPage - 5;\n\t\t\t\tendPage = currentPage + 4;\n\t\t\t}\n\t\t}\n \n\t\t// calculate start and end item indexes\n\t\tvar startIndex = (currentPage - 1) * pageSize;\n\t\tvar endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n \n\t\t// create an array of pages to ng-repeat in the pager control\n\t\tvar pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n \n\t\t// return object with all pager properties required by the view\n\t\treturn {\n\t\t\t'totalItems': totalItems,\n\t\t\t'currentPage': currentPage,\n\t\t\t'pageSize': pageSize,\n\t\t\t'totalPages': totalPages,\n\t\t\t'startPage': startPage,\n\t\t\t'endPage': endPage,\n\t\t\t'startIndex': startIndex,\n\t\t\t'endIndex': endIndex,\n\t\t\t'pages': pages\n\t\t};\n\t}\n \n\trender() {\n\t\tvar pager = this.state.pager;\n \n\t\tif (!pager.pages || pager.pages.length <= 1) {\n\t\t\t// don't display pager if there is only 1 page\n\t\t\treturn null;\n\t\t}\n \n\t\treturn (\n\t\t\t<ul className=\"pagination\">\n\t\t\t\t<li className={pager.currentPage === 1 ? 'disabled' : ''}>\n\t\t\t\t\t<button type=\"button\" className=\"btn pagination first\" onClick={() => this.setPage(1)}>First</button>\n\t\t\t\t</li>\n\t\t\t\t<li className={pager.currentPage === 1 ? 'disabled' : ''}>\n\t\t\t\t\t<button type=\"button\" className=\"btn pagination previous\" onClick={() => this.setPage(pager.currentPage - 1)}>Previous</button>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"spacer\"></li>\n\t\t\t\t{pager.pages.map((page, index) =>\n\t\t\t\t\t<li key={index} className={pager.currentPage === page ? 'active' : ''}>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn pagination page\" onClick={() => this.setPage(page)}>{page}</button>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t<li className=\"spacer\"></li>\n\t\t\t\t<li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n\t\t\t\t\t<button type=\"button\" className=\"btn pagination next\" onClick={() => this.setPage(pager.currentPage + 1)}>Next</button>\n\t\t\t\t</li>\n\t\t\t\t<li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n\t\t\t\t\t<button type=\"button\" className=\"btn pagination last\" onClick={() => this.setPage(pager.totalPages)}>Last</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nPagination.propTypes = {\n\t'count': PropTypes.number,\n\t'onChangePage': PropTypes.func.isRequired,\n\t'defaultPage': PropTypes.number,\n\t'pageSize': PropTypes.number\n};\n\nPagination.defaultProps = {\n\t'count': 0,\n\t'defaultPage': 1,\n\t'pageSize': 10\n};\n\nexport default Pagination;\n","// Page to display list of lists\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ListsList from '../components/ListsList';\nimport ListSummary from '../components/ListSummary';\nimport './ListsPage.scss';\nimport Pagination from '../components/Pagination';\n\nclass ListsPage extends Component {\n\tonSearch = e => {\n\t\tthis.props.onSearch(e.target.value);\n\t}\n\n\tonAddList = () => {\n\t\tthis.props.history.push('/newlist');\n\t}\n\n\trenderPublicLists() {\n\t\tconst { publicLists, onChangeIsPublic, onDeleteList } = this.props;\n\n\t\treturn (\n\t\t\t<ListsList headerText=\"All public lists\">\n\t\t\t\t{publicLists.map(list => \n\t\t\t\t\t<ListSummary\n\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tonChangeIsPublic={onChangeIsPublic}\n\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\tshowCreatedBy={true}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ListsList>\n\t\t);\n\t}\n\n\trenderMyLists() {\n\t\tconst { myLists, onChangeIsPublic, onDeleteList } = this.props;\n\n\t\treturn Object.keys(myLists).map((is_public, index) => {\n\t\t\tconst listsByIsPublic = myLists[is_public];\n\t\t\tlet headerText = is_public === 'true' ? 'My public lists' : 'My private lists';\n\n\t\t\treturn (\n\t\t\t\t<div key={index}>\n\t\t\t\t\t{(listsByIsPublic.length > 0) && (\n\t\t\t\t\t\t<ListsList is_public={is_public} headerText={headerText}>\n\t\t\t\t\t\t\t{listsByIsPublic.map(list => \n\t\t\t\t\t\t\t\t<ListSummary\n\t\t\t\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\t\t\t\tonChangeIsPublic={onChangeIsPublic}\n\t\t\t\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ListsList>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trenderTabs() {\n\t\treturn (\n\t\t\t<ul><li>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.props.selectedTab === 'my-lists'? 'selected' : ''}\n\t\t\t\t\tid='my-lists'\n\t\t\t\t\tonClick={this.props.handleTabClick}>My lists\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.props.selectedTab === 'public-lists'? 'selected' : ''}\n\t\t\t\t\tid='public-lists'\n\t\t\t\t\tonClick={this.props.handleTabClick}>Public lists\n\t\t\t\t</span>\n\t\t\t</li></ul>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet listsList;\n\n\t\tif (this.props.selectedTab === 'my-lists') {\n\t\t\tlistsList = this.renderMyLists();\n\t\t} else if (this.props.selectedTab === 'public-lists') {\n\t\t\tlistsList = this.renderPublicLists();\n\t\t}\n\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"lists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet createList;\n\t\tif (this.props.canCreateList()) {\n\t\t\tcreateList = (<button\n\t\t\t\tclassName=\"btn btn-primary create-list\"\n\t\t\t\tonClick={this.onAddList}\n\t\t\t>+ New list</button>);\n\t\t} else if (this.props.auth.isAuthenticated) {\n\t\t\tcreateList = (<div>In order to create new lists, please verify your email address by clicking the link in the email you were sent when you registered. You can request a new verification email from your <Link to=\"/account\">Account</Link> page.</div>);\n\t\t} else {\n\t\t\tcreateList = (<div>In order to create new lists, please <Link to=\"/login\">log in</Link> or <Link to=\"/register\">register a My Top Tens account</Link>.</div>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"lists-list\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col  className=\"top-level-lists-control\">\n\t\t\t\t\t\t\t<Label check>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tdefaultChecked={this.props.topLevelListsOnly}\n\t\t\t\t\t\t\t\t\tonChange={this.props.handleTopLevelListsChange}/>{' '}\n\t\t\t\t\t\t\t\tShow top level lists only\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col sm=\"12\" md=\"9\">\n\t\t\t\t\t\t\t<div className=\"search\">\n\t\t\t\t\t\t\t\t<Input className=\"form-control\"\n\t\t\t\t\t\t\t\t\tonChange={this.onSearch}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{createList}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t{this.props.auth.isAuthenticated && <div className=\"tabs\">\n\t\t\t\t\t{this.renderTabs()}\n\t\t\t\t\t<div className=\"clearing\"></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"lists\">\n\t\t\t\t\t{listsList}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tcount={this.props.count}\n\t\t\t\t\t\t\tpageSize={this.props.pageSize}\n\t\t\t\t\t\t\tcurrentPage={this.props.currentPage}\n\t\t\t\t\t\t\tonChangePage={this.props.onChangePage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ListsPage);\n","// Home.js\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as listReducer from '../modules/list';\nimport { getFilteredPublicLists, getMyGroupedAndFilteredLists } from '../modules/list';\n\nimport FlashMessage from '../components/FlashMessage';\nimport Loading from '../components/Loading';\nimport ListsPage from '../components/ListsPage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\nimport { PAGE_SIZE } from '../constants';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tprops.dispatch(clearErrors());\n\n\t\t// which set of lists to view\n\t\t// if logged in, default my-lists\n\t\t// if not logged in, only show public-lists\n\t\tlet listset = 'public-lists';\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(props.location.search);\n\t\t\tlistset = urlParams.get('listset') || 'my-lists';\n\t\t}\n\n\t\tthis.setListSetURL(listset);\n\n\t\tthis.state = {\n\t\t\t'selectedTab': listset,\n\t\t\t'topLevelListsOnly': true,\n\t\t\t'currentPage': 1,\n\t\t};\n\n\t\tthis.onChangePage = this.onChangePage.bind(this);\n\t\tthis.handleTopLevelListsChange = this.handleTopLevelListsChange.bind(this);\n\t\tthis.handleTabClick = this.handleTabClick.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchLists({});\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user's status has changed, refresh Lists\n\t\tif(prevProps.auth.user.token !== this.props.auth.user.token){\n\t\t\tthis.fetchLists({});\n\t\t}\n\n\t\t// user has just logged out\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': 'public-lists',\n\t\t\t});\n\n\t\t\tthis.setListSetURL('public-lists');\n\t\t}\n\t}\n\n\t// refresh lists based on user choices\n\tfetchLists({ listset = this.state.listset, topLevelListsOnly = this.state.topLevelListsOnly, currentPage = this.state.currentPage }) {\n\n\t\t// use state values by default\n\t\t// however these may be passed in by functions that set state because setState is not synchronous\n\t\tthis.props.dispatch(listReducer.fetchLists({\n\t\t\tlistset,\n\t\t\ttopLevelListsOnly,\n\t\t\t'limit': PAGE_SIZE,\n\t\t\t'offset': (currentPage - 1) * PAGE_SIZE,\n\t\t}));\n\t}\n\n\tonChangePage(currentPage) {\n\t\t// update state with new page of items\n\t\tthis.setState({ 'currentPage': currentPage });\n\n\t\tif (currentPage !== this.state.currentPage) {\n\t\t\tthis.fetchLists({ currentPage });\n\t\t}\n\t}\n\n\tonSearch = searchTerm => {\n\t\tthis.props.dispatch(listReducer.filterLists(searchTerm));\n\t}\n\n\tonChangeIsPublic = ({ id, is_public }) => {\n\t\tthis.props.dispatch(listReducer.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = ({ id, name }) => {\n\t\tif (confirm(`Are you sure you want to delete the list ${name}`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t\tthis.props.dispatch(listReducer.deleteList(id));\n\t\t}\n\t}\n\n\thandleTopLevelListsChange() {\n\t\tconst topLevelListsOnly = !this.state.topLevelListsOnly;\n\t\tthis.setState({\n\t\t\t'topLevelListsOnly': topLevelListsOnly,\n\t\t});\n\n\t\tthis.fetchLists({ topLevelListsOnly });\n\t}\n\n\tsetListSetURL(listset) { // indicate current list set in URL; depends on selected tab\n\t\tlet URL = `${this.props.location.pathname}?listset=${listset}`;\n\t\tthis.props.history.push(URL);\n\t}\n\n\thandleTabClick = (e) => {\n\t\tconst selectedTab = e.target.id;\n\n\t\tif (this.state.selectedTab !== selectedTab) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': selectedTab,\n\t\t\t});\n\n\t\t\tthis.setListSetURL(e.target.id);\n\t\t\tthis.fetchLists({ 'listset': selectedTab });\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t{this.props.isLoading && <Loading />}\n\t\t\t\t<ListsPage\n\t\t\t\t\tauth={this.props.auth}\n\t\t\t\t\tmyLists={this.props.myLists}\n\t\t\t\t\tpublicLists={this.props.publicLists}\n\t\t\t\t\tcanCreateList={permissions.canCreateList}\n\t\t\t\t\tonSearch={this.onSearch}\n\t\t\t\t\tonCreateList={this.onCreateList}\n\t\t\t\t\tonChangeIsPublic={this.onChangeIsPublic}\n\t\t\t\t\tonDeleteList={this.onDeleteList}\n\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t\ttopLevelListsOnly={this.state.topLevelListsOnly}\n\t\t\t\t\thandleTopLevelListsChange={this.handleTopLevelListsChange}\n\t\t\t\t\thandleTabClick={this.handleTabClick}\n\t\t\t\t\tselectedTab={this.state.selectedTab}\n\t\t\t\t\tcount={this.props.count}\n\t\t\t\t\tpageSize={PAGE_SIZE}\n\t\t\t\t\tcurrentPage={this.state.currentPage}\n\t\t\t\t\tonChangePage={this.onChangePage}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'publicLists': PropTypes.array.isRequired,\n\t'myLists': PropTypes.object.isRequired,\n\t'count': PropTypes.number, // data may not yet be loaded\n\t'next': PropTypes.string, // there may be no 'next' page\n\t'previous': PropTypes.string, // there may be no 'previous' page\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.list.isLoading,\n\t'publicLists': getFilteredPublicLists(state),\n\t'myLists': getMyGroupedAndFilteredLists(state),\n\t'count': state.list.count,\n\t'next': state.list.next,\n\t'previous': state.list.previous,\n});\n\nexport default connect(mapStateToProps)(withRouter(Home));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\nimport { createList } from '../modules/list';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\n\nimport ValidatedForm from '../components/ValidatedForm.js';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nimport './CreateList.scss';\n\nclass CreateList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'name': '',\n\t\t\t'description': '',\n\t\t};\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`item${i}_name`] = '';\n\t\t\tthis.state[`item${i}_description`] = '';\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\n\t\tprops.dispatch(clearErrors());\n\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(props.location.search);\n\t\t\tthis.state.parentItemId = urlParams.get('parent-item-id');\n\t\t\tthis.state.parentItemName = urlParams.get('parent-item-name');\n\t\t\tthis.state.parentListName = urlParams.get('parent-list-name');\n\t\t\tthis.state.parentListSlug = urlParams.get('parent-list-slug');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tcancel(e) {\n\t\tthis.props.history.push('/');\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tlet newList = {\n\t\t\t'name': this.state.name,\n\t\t\t'description': this.state.description,\n\t\t\t'item': [],\n\t\t};\n\t\t\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tif (this.state[`item${i}`] !== '') {\n\t\t\t\tconst newItem = {\n\t\t\t\t\t'name': this.state[`item${i}_name`],\n\t\t\t\t\t'description': this.state[`item${i}_description`],\n\t\t\t\t\t'order': i,\n\t\t\t\t};\n\t\t\t\tnewList.item.push(newItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.state.parentItemId) {\n\t\t\tnewList.parent_item = this.state.parentItemId;\n\t\t}\n\n\t\tthis.onCreateList(newList);\n\t}\n\n\tonCreateList = (newList) => {\n\t\tthis.props.dispatch(createList(newList, this.props.history));\n\t}\n\n\n\tcomponentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user cannot create a list, redirect to Home\n\t\tif(!permissions.canCreateList() && !this.props.auth.isLoading){\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderItemInputs() {\n\t\tlet elements = [];\n\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\telements.push(\n\t\t\t\t<div className=\"form-group\" key={`item${i}`}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<h3>Item {i}</h3>\n\t\t\t\t\t\t\t<Label for={`item${i}_name`}>Name</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_name`}\n\t\t\t\t\t\t\t\tid={`item${i}_name`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_name`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<Label for={`item${i}_description`}>Description</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tname={`item${i}_description`}\n\t\t\t\t\t\t\t\tid={`item${i}_description`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_description`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>);\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<h2>Create a new list</h2>\n\t\t\t\t{this.state.parentItemName && (\n\t\t\t\t\t<div className=\"parent-item\"><Link to={`/list/${this.state.parentListSlug}`}>{this.state.parentListName}</Link> > {this.state.parentItemName}</div>\n\t\t\t\t)}\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t\t<Label for=\"name\">Name</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.name }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Name is required</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Description</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.description }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.renderItemInputs()}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSave list\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t{this.props.errors.lists && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.lists}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nCreateList.propTypes = {\n\t//'createList': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n});\n\nexport default connect(mapStateToProps)(withRouter(CreateList));\n","// An input or textarea that can be edited by clicking on it\n// It can be blank, or required\n// note custom property data-state which is the name of the property in this.state\n// Can be used with keyboard only\n// It is a regular form with cancel, submit. This allows keyboard navigation but the form stays open on blur - otherwise cancel would not be possible with keyboard.\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Row, Col, Label, Input } from 'reactstrap';\nimport './EditableTextField.scss';\nimport Markdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\n\nclass EditableTextField extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'showInput': false,\n\t\t\t'isValidated': false,\n\t\t\t'initialValue': '',\n\t\t\t'overflowActive': false,\n\t\t\t'type': props.textarea ? 'textarea' : 'input',\n\t\t};\n\n\t\tif (props.textarea === true) {\n\t\t\tthis.state.expanded = false;\n\t\t}\n\n\t\tthis.showInput = this.showInput.bind(this);\n\t\tthis.onKeyUp = this.onKeyUp.bind(this);\n\t\tthis.toggleMore = this.toggleMore.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\t// does the text overflow its container?\n\tisOverflowActive() {\n\t\tif (!this.props.textarea) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst element = this.textElement;\n\t\tif (!element) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst overflowActive = element.offsetHeight < element.scrollHeight;\n\n\t\tif (overflowActive !== this.state.overflowActive) {\n\t\t\tthis.setState({ 'overflowActive': overflowActive });\n\t\t}\n\t}\n\n\ttoggleMore() {\n\t\tthis.setState({\n\t\t\t'expanded': !this.state.expanded,\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.isOverflowActive();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.isOverflowActive();\n\t}\n\n\tonKeyUp(e) {\n\t\tvar code = e.keyCode || e.which;\n\t\tif(code === 13) { //13 is the enter keycode\n\t\t\tthis.showInput(e);\n\t\t}\n\t}\n\n\tshowInput(e) {\n\t\tconst isPlaceholder = e.target.classList.contains('placeholder');\n\n\t\tif (!isPlaceholder) {\n\t\t\tthis.setState({\n\t\t\t\t'initialValue': e.target.textContent,\n\t\t\t});\n\t\t}\n\t\tthis.toggleInput();\n\t}\n\n\ttoggleInput() {\n\t\tconst newShowInputValue = !this.state.showInput;\n\n\t\t// optionally, tell the parent component whether the field is being edited\n\t\tif (typeof this.props.isEditing === 'function') {\n\t\t\tthis.props.isEditing(newShowInputValue);\n\t\t}\n\n\t\tthis.setState({\n\t\t\t'showInput': newShowInputValue,\n\t\t});\n\t}\n\n\tcancel = () => {\n\t\t// restore the initial value of the field as though the user had just entered it\n\t\tconst fakeEvent = {\n\t\t\t'target': {\n\t\t\t\t'dataset': { 'state': this.props['data-state'] },\n\t\t\t\t'value': this.state.initialValue,\n\t\t\t}\n\t\t};\n\t\tthis.props.handleInputChange(fakeEvent);\n\t\tthis.toggleInput();\n\t}\n\n\tvalidate = () => {\n\t\t// custom validation for consistency with other forms\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst elem = formEl.querySelector(this.state.type);\n\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\tif (!elem.validity.valid) {\n\t\t\tlet message = elem.validationMessage;\n\t\t\terrorLabel.textContent = message;\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\terrorLabel.textContent = '';\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\t// the user has typed a new value and the parent component should be notified\n\t\t\n\t\tconst inputElement = e.target.querySelector(this.state.type);\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.handleNewValue(inputElement);\n\t\t\tthis.toggleInput();\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t}\n\n\trenderValue() {\n\t\t// construct the display of the text value\n\t\tlet expanded = '';\n\t\tif (this.state.expanded) {\n\t\t\texpanded = 'expanded';\n\t\t}\n\n\t\tlet showMoreButton = false;\n\n\t\tif (this.state.overflowActive || this.state.expanded) {\n\t\t\tshowMoreButton = true;\n\t\t}\n\n\t\tlet moreButtonText = 'More...';\n\t\tif (this.state.expanded) {\n\t\t\tmoreButtonText = 'Less...';\n\t\t}\n\n\t\tlet onClick;\n\t\tlet onKeyUp;\n\t\tlet tabIndex = '';\n\n\t\tif (this.props.canEdit) {\n\t\t\ttabIndex = '0';\n\t\t\tonClick=this.showInput;\n\t\t\tonKeyUp=this.onKeyUp;\n\t\t}\n\n\t\tlet item = (\n\t\t\t<span>\n\t\t\t\t<span className={`text ${expanded}`}\n\t\t\t\t\tref={ref => (this.textElement = ref)}\n\t\t\t\t\tonKeyUp={onKeyUp}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\ttabIndex={tabIndex}\t\n\t\t\t\t>\n\t\t\t\t\t<Markdown \n\t\t\t\t\t\tescapeHtml={true}\n\t\t\t\t\t\tsource={this.props.value} \n\t\t\t\t\t/>\n\t\t\t\t\t{showMoreButton && <span className=\"fader\"></span>}</span>\n\t\t\t\t{showMoreButton && <button type=\"button\" className=\"show-more\" onClick={this.toggleMore}>{moreButtonText}</button>}\n\t\t\t</span>\n\t\t);\n\n\t\treturn item;\n\t}\n\n\trender() {\n\t\tlet type = 'text';\n\t\tif (this.props.textarea) {\n\t\t\ttype = 'textarea';\n\t\t}\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (this.props.className) {\n\t\t\tclassNames = [...this.props.className];\n\t\t\tdelete this.props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\tconst showInput = this.state.showInput;\n\t\tlet item;\n\n\t\tif (this.props.canEdit) {\n\t\t\tif (showInput) {\t\t\t\n\t\t\t\titem = (\n\t\t\t\t\t<form\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\t\tclassName={classNames}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<Label for={this.props.id}>{this.props.label}</Label>\n\t\t\t\t\t\t\t\t\t<Input autoFocus\n\t\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\t\tname={this.props.id}\n\t\t\t\t\t\t\t\t\t\trequired={this.props.required}\n\t\t\t\t\t\t\t\t\t\tdata-state={this.props['data-state']}\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props['data-entityid']}\n\t\t\t\t\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\t\t\t\t\tonChange={this.props.handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"controls\">\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\" onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tDone\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span className=\"hint\">You can use <Link to=\"https://help.github.com/articles/basic-writing-and-formatting-syntax/\">Markdown</Link></span>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</form>);\n\t\t\t} else {\n\t\t\t\tif (this.props.value !== '') {\n\t\t\t\t\titem = this.renderValue();\n\t\t\t\t} else {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"placeholder\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\tonClick={this.showInput}\n\t\t\t\t\t\t\tonKeyUp={this.onKeyUp}\n\t\t\t\t\t\t>{this.props.placeholder}</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.props.value !== '') {\n\t\t\t\titem = this.renderValue();\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className={`editable-text-field ${showInput && 'editing'}`}>\n\t\t\t\t{ item }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditableTextField;\n","// An individual item\n// It is a stateful component so that the description field can be shown only if there is a name defined.\n\nimport store from '../store';\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport EditableTextField from './EditableTextField.js';\nimport * as permissions from '../modules/permissions';\nimport './Item.scss';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nclass Item extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\t'isEditingName': false,\n\t\t};\n\n\t\tthis.onCreateChildList = this.onCreateChildList.bind(this);\n\t\tthis.setIsEditingName = this.setIsEditingName.bind(this);\n\t\tthis.onMoveUp = this.onMoveUp.bind(this);\n\t\tthis.onMoveDown = this.onMoveDown.bind(this);\n\t}\n\n\tsetIsEditingName(showInput) {\n\t\tthis.setState({\n\t\t\t'isEditingName': showInput,\n\t\t});\n\t}\n\n\tonCreateChildList = () => {\n\t\tthis.props.onCreateChildList(this.props.item);\n\t}\n\n\tonMoveUp = () => {\n\t\tthis.props.onMoveItemUp(this.props.item.id);\n\t}\n\n\tonMoveDown = () => {\n\t\tthis.props.onMoveItemDown(this.props.item.id);\n\t}\n\n\trender() {\n\t\tlet showDescription = true;\n\t\tif (this.props.item.name === '') {\n\t\t\tshowDescription = false;\n\t\t} else if (this.state.isEditingName && store.getState().item.things[this.props.item.id] && store.getState().item.things[this.props.item.id].name === '') {\n\t\t\tshowDescription = false;\n\t\t}\n\t\t//console.log('item render. props ', this.props);\n\t\tlet canCreateChildList = true; // should the \"create child list\" button be visible?\n\n\t\tif (this.props.item.childList || // there is already a child list\n\t\t\tthis.props.item.name === '' || // there is no item\n\t\t\tthis.state.isEditingName || // the item name is being edited\n\t\t\t!this.props.canEdit) { // the user can't edit this list\n\t\t\tcanCreateChildList = false;\n\t\t}\n\n\t\tlet canViewChildList = false;\n\n\t\t// child list exists and user can view it\n\t\tif (this.props.item.childList && permissions.canViewList({ 'slug': this.props.item.childList.slug })) {\n\t\t\tcanViewChildList = true;\n\t\t}\n\n\t\tlet childList;\n\n\t\tif (canCreateChildList) {\n\t\t\tchildList = (<button className=\"btn btn-primary create-childlist\" onClick={this.onCreateChildList}>Create child list</button>);\t\n\t\t} else if (canViewChildList) {\n\t\t\tchildList = (\n\t\t\t\t<div className=\"child-list\">\t\n\t\t\t\t\t<Link to={`/list/${this.props.item.childList.slug}`}>{this.props.item.childList.name} ></Link>\n\t\t\t\t</div>);\n\t\t}\n\n\t\tlet showUp = true;\n\t\tlet showDown = true;\n\n\t\tif (!this.props.canEdit ||\n\t\t\tthis.props.item.name === '' ||\n\t\t\t!showDescription) { // assume that showDescription means there is a saved name i.e. the item exists\n\t\t\tshowUp = false;\n\t\t\tshowDown = false;\n\t\t} else if (this.props.item.order === 1) {\n\t\t\tshowUp = false;\n\t\t} else if (this.props.item.order === MAX_ITEMS_IN_LIST) {\n\t\t\tshowDown = false;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"item-container\">\n\t\t\t\t<div className=\"item-header\">\n\t\t\t\t\t<span className=\"order\">{this.props.item.order}:</span><EditableTextField\n\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\tname={`${this.props.item.order}_name`}\n\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\tplaceholder=\"Click here to add an item\"\n\t\t\t\t\t\tdata-state={`${this.props.item.order}_name`}\n\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\tid={`${this.props.item.order}_name`} // id of the html element\n\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\tisEditing={this.setIsEditingName}\n\t\t\t\t\t\tvalue={this.props.item.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{childList}\n\t\t\t\t{showDescription &&\n\t\t\t\t\t<div className=\"item-body\">\n\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\t\tname={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tplaceholder=\"Click here to add a description\"\n\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\tdata-state={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\t\tid={`${this.props.item.order}_description`} // id of the html element\n\t\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\t\tvalue={this.props.item.description}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{showUp && <button className=\"btn btn-secondary move-up\" onClick={this.onMoveUp}>Up</button>\n\t\t\t\t}\n\t\t\t\t{showDown && <button className=\"btn btn-secondary move-down\" onClick={this.onMoveDown}>Down</button>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Item;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\n\nimport * as itemsReducer from '../modules/item';\n\nimport { MAX_ITEMS_IN_LIST } from '../constants';\nimport Item from './Item';\n\nclass ItemsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\n\t\t// set up the state to hold each item's name and description\n\t\t// coded by order\n\t\t// this is not elegant but keeps state flat\n\t\tfor (let i=1; i<= MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`${i}_name`] = '';\n\t\t\tthis.state[`${i}_description`] = '';\n\t\t}\n\n\t\t// build the items\n\t\t// each item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst items = this.props.items;\n\n\t\tObject.keys(items).forEach((key) => {\n\t\t\tif (items[key].order && items[key].order <= MAX_ITEMS_IN_LIST) {\n\t\t\t\tconst order = items[key].order;\n\n\t\t\t\tthis.state[`${order}_id`] = items[key].id;\n\t\t\t\tthis.state[`${order}_name`] = items[key].name;\n\t\t\t\tthis.state[`${order}_description`] = items[key].description;\n\n\t\t\t\t// child lists\n\t\t\t\tif (items[key].childList) {\n\t\t\t\t\tthis.state[`${order}_childList`] = items[key].childList;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tonMoveItemUp = (itemId) => {\n\t\tthis.props.dispatch(itemsReducer.moveItemUp({ itemId }));\n\t}\n\n\tonMoveItemDown = (itemId) => {\n\t\tthis.props.dispatch(itemsReducer.moveItemDown({ itemId }));\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tlet update = {};\n\t\tfor (let i=0; i<this.props.items.length; i++) {\n\t\t\tconst item = this.props.items[i];\n\n\t\t\t// first the list is loaded and this just gives ids\n\t\t\t// only when the full data are loaded and getItemsForList recalculated do we find the childList\n\t\t\tif (prevProps.items[i].id !== this.props.items[i].id ||\n\t\t\t\tprevProps.items[i].childList !== this.props.items[i].childList) {\n\t\t\t\tconst order = item.order;\n\n\t\t\t\t// update item properties\n\t\t\t\tupdate[`${order}_id`] = item.id;\n\t\t\t\tupdate[`${order}_name`] = item.name;\n\t\t\t\tupdate[`${order}_description`] = item.description;\n\n\t\t\t\t// set child list if exists\n\t\t\t\t// or set to null if it does not\n\t\t\t\tupdate[`${order}_childList`] = item.childList;\n\t\t\t}\n\t\t}\n\t\t// only setState if there is a change to make\n\t\t// otherwise it triggers endless updates\n\t\tif (Object.keys(update).length > 0) {\n\t\t\tthis.setState(update);\n\t\t}\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst itemId = element.dataset.entityid;\n\n\t\t// the item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(itemsReducer.updateItem(itemId, propertyName, value));\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewItemForm': !this.state.showNewItemForm });\n\t}\n\n\trenderItemsList() {\n\t\tlet elements = [];\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tconst name = this.state[`${i}_name`];\n\t\t\tconst canEdit = this.props.canEdit;\n\t\t\tif (name || canEdit) {\n\t\t\t\telements.push(\n\t\t\t\t\t<Row key={`item${i}`}>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\tkey={`item${i}`}\n\t\t\t\t\t\t\t\titem={{\n\t\t\t\t\t\t\t\t\t'id': this.state[`${i}_id`],\n\t\t\t\t\t\t\t\t\t'order': i,\n\t\t\t\t\t\t\t\t\t'name': name,\n\t\t\t\t\t\t\t\t\t'description': this.state[`${i}_description`],\n\t\t\t\t\t\t\t\t\t'childList': this.state[`${i}_childList`],\n\t\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\tcanEdit={canEdit}\n\t\t\t\t\t\t\t\tonCreateChildList={this.props.onCreateChildList}\n\t\t\t\t\t\t\t\tonMoveItemUp={this.onMoveItemUp}\n\t\t\t\t\t\t\t\tonMoveItemDown={this.onMoveItemDown}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"items-list\">\n\t\t\t\t{this.renderItemsList()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(ItemsPage);\n","// a single list to be displayed in the Organizer\n// can be expanded to show items\n// an item can be selected\n\nimport React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\n\nclass OrganizerList extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\t//console.log('item props ', props);\n\t\tthis.state = {\n\t\t\t'showItems': props.showItems,\n\t\t};\n\n\t\tthis.onSelectItem = this.onSelectItem.bind(this);\n\t\tthis.onShowItems = this.onShowItems.bind(this);\n\t}\n\n\tonShowItems() {\n\t\tthis.setState({\n\t\t\t'showItems': !this.state.showItems,\n\t\t});\n\t}\n\n\tonSelectItem (e) {\n\t\tthis.props.onSelectItem({ 'list': this.props.list, 'order': e.target.dataset.order, 'childListId': e.target.dataset.childlistid });\n\t}\n\n\trenderItems() {\n\t\tconst selectedItemOrder = parseInt(this.props.selectedItemOrder); // element property is a string. Order should be a number.\n\t\tconst listId = this.props.list.id;\n\t\tconst selectedListId = this.props.selectedListId;\n\n\t\treturn (\n\t\t\t<div className=\"items\">\n\t\t\t\t{this.props.itemOrganizerData[listId].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\t\tconst isSelectedItem = ((listId === selectedListId) && (item.order === selectedItemOrder));\n\n\t\t\t\t\tlet childListElm;\n\n\t\t\t\t\tif (item.childListId) {\n\t\t\t\t\t\tconst childList = this.props.listOrganizerData.find((list) => list.id === item.childListId);\n\t\t\t\t\t\tchildListElm = (\n\t\t\t\t\t\t\t<span className=\"child-list\">> {childList.name}</span>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.name) {\n\t\t\t\t\t\treturn (<div key={item.id} className={`item ${isSelectedItem ? 'selected' : ''}`}>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tonClick={this.onSelectItem}\n\t\t\t\t\t\t\t\tdata-order={item.order}\n\t\t\t\t\t\t\t\tdata-childlistid={item.childListId}\n\t\t\t\t\t\t\t><span className=\"order\">{item.order}:</span>{item.name}</span>{childListElm}\n\t\t\t\t\t\t</div>);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst name = this.props.list.name;\n\n\t\tconst isSelectedList = (this.props.list.id === this.props.selectedListId);\n\n\t\tlet showItemsButtonText = '+';\n\n\t\tif (this.state.showItems) {\n\t\t\tshowItemsButtonText = '-';\n\t\t}\n\n\t\treturn (\n\t\t\t<Row className={`organizer-list ${isSelectedList ? 'selected' : ''}`}>\n\t\t\t\t<Col>\n\t\t\t\t\t<button className=\"btn btn-light show-items\" onClick={this.onShowItems}>{showItemsButtonText}</button>\n\t\t\t\t\t<div className=\"name\">{name}</div>\n\t\t\t\t\t{this.state.showItems && this.renderItems()}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default OrganizerList;\n","// Displays the user's lists and items\n// Allows the parent item of a list to be changed\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\nimport ReactDOM from 'react-dom';\n\nimport * as listReducer from '../modules/list';\n\nimport OrganizerList from './OrganizerList';\nimport './Organizer.scss';\n\nclass Organizer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'showOrganizer': false,\n\t\t\t'parentItemId': props.list.parent_item,\n\t\t\t'parentListId': props.parentListId, // parent list and item are stored in state so a new value can be selected, with the old value still present in props if the user cancels\n\t\t\t'selectedItemChildListId': null,\n\t\t\t'selectedItemOrder': null,\n\t\t};\n\n\t\tthis.onSelectParentItem = this.onSelectParentItem.bind(this);\n\t\tthis.onClickCancel = this.onClickCancel.bind(this);\n\t\tthis.onClickDone = this.onClickDone.bind(this);\n\t\tthis.onClickOrganize = this.onClickOrganize.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t}\n\n\tcomponentDidUpdate = (prevProps) => {\n\t\t// data for new list have loaded\n\t\tif ((prevProps.list.parent_item !== this.props.list.parent_item) ||\n\t\t// navigated to new list\n\t\t(prevProps.listOrganizerData.length === 0 && this.props.listOrganizerData.length !== 0)) {\n\t\t\tthis.setState({ // reset component\n\t\t\t\t'showOrganizer': false,\n\t\t\t\t'selectedItemOrder': this.selectedItemOrder(),\n\t\t\t\t'parentItemId': this.props.list.parent_item,\n\t\t\t\t'parentListId': this.props.parentListId,\n\t\t\t});\n\t\t}\n\t}\n\n\tonClickOrganize = () => {\n\t\tthis.setState({\n\t\t\t'showOrganizer': true,\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tconst DOMNode = ReactDOM.findDOMNode(this); // component parent node\n\t\t\tconst element = DOMNode.querySelector('.organizer-list.selected');\n\t\t\tif (element) {\n\t\t\t\telement.scrollIntoView();\n\t\t\t}\n\t\t}, 100);\n\t}\n\n\tonClickCancel = () => {\n\t\tthis.setState({\n\t\t\t'showOrganizer': false,\n\t\t});\n\t}\n\n\tonClickDone = () => {\n\t\tthis.setState({\n\t\t\t'showOrganizer': false,\n\t\t});\n\n\t\t// Don't allow the user to select an item from the current list.\n\t\t// this shouldn't happen as the current list is not displayed in the organizer.\n\t\tif (this.state.parentListId === this.props.list.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.parentItemId) {\n\t\t\tif (confirm(`'${this.props.list.name}' will become a top level list. Are you sure you want to continue?`)) { // eslint-disable-line no-restricted-globals\n\t\t\t\tthis.setParentItem();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// if the new parent item already has a child list\n\t\tif (this.state.selectedItemChildListId) {\n\t\t\tconst childList = this.props.listOrganizerData.find((list) => list.id === this.state.selectedItemChildListId);\n\n\t\t\t// no change\n\t\t\tif (this.state.parentItemId === this.props.list.parent_item) {\n\t\t\t\treturn;\n\t\t\t} else { // will disconnect the existing child list\n\t\t\t\tif (confirm(`The child list '${childList.name}' will become a top level list. Are you sure you want to continue?`)) { // eslint-disable-line no-restricted-globals\n\t\t\t\t\tthis.setParentItem();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setParentItem();\n\t}\n\n\tsetParentItem() {\n\t\tthis.props.dispatch(listReducer.updateList(\n\t\t\tthis.props.list.id,\n\t\t\t'parent_item_id',\n\t\t\tthis.state.parentItemId));\n\t}\n\n\tonSelectParentItem = ({ list, order, childListId }) => {\n\t\t// if the user clicks the selected item, deselect it\n\t\t// i.e. make this a top-level list\n\t\tif (list.id === this.state.parentListId && list.item[order-1] === this.state.parentItemId) {\n\t\t\tthis.setState({\n\t\t\t\t'parentItemId': null,\n\t\t\t\t'parentListId': null,\n\t\t\t\t'selectedItemChildListId': null,\n\t\t\t\t'selectedItemOrder': null,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\t'parentItemId': list.item[order-1],\n\t\t\t\t'parentListId': list.id,\n\t\t\t\t'selectedItemChildListId': childListId,\n\t\t\t\t'selectedItemOrder': order,\n\t\t\t});\n\t\t}\n\t}\n\n\tselectedItemOrder() {\n\t\t// find the order of the parent item\n\t\tlet order; // there may not be a parent item, so there may not be a default selection\n\t\tif (this.props.parentListId) {\n\t\t\tlet parentItemId = this.props.list.parent_item;\n\t\t\tconst parentList = this.props.listOrganizerData.find(list => list.id === this.props.parentListId);\n\n\t\t\tlet parentListItems = parentList.item;\n\n\t\t\torder = parentListItems.indexOf(parentItemId);\n\n\t\t\tif (order !== -1) { // item is found\n\t\t\t\torder += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn order;\n\t}\n\n\trenderLists() {\n\t\treturn (\n\t\t\t<div className=\"lists\">\n\t\t\t\t<div className=\"inner-tube\">\n\t\t\t\t\t<span>Select a new parent item for this list: </span>\n\t\t\t\t\t{this.props.listOrganizerData.map(list => {\n\t\t\t\t\t\tconst numberOfItems = this.props.itemOrganizerData[list.id].length;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// only show lists with at least one item\n\t\t\t\t\t\t// and don't show the page list - it can't be its own parent\n\t\t\t\t\t\tif (numberOfItems > 0 && (list.id !== this.props.list.id)) {\n\t\t\t\t\t\t\tconst showItems = (list.id === this.state.parentListId);\n\n\t\t\t\t\t\t\treturn (<OrganizerList\n\t\t\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\t\t\tlistOrganizerData={this.props.listOrganizerData}\n\t\t\t\t\t\t\t\titemOrganizerData={this.props.itemOrganizerData}\n\t\t\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\t\t\tselectedListId={this.state.parentListId}\n\t\t\t\t\t\t\t\tselectedItemOrder={this.state.selectedItemOrder}\n\t\t\t\t\t\t\t\tonSelectItem={this.onSelectParentItem}\n\t\t\t\t\t\t\t\tshowItems={showItems}\n\t\t\t\t\t\t\t/>);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn; // eslint-disable-line array-callback-return\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet controls;\n\n\t\tif (this.state.showOrganizer) {\n\t\t\tcontrols = (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<button className=\"btn btn-secondary\" onClick={this.onClickCancel}>Cancel</button>\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.onClickDone}>Done</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>);\n\t\t} else {\n\t\t\tcontrols = (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<button className=\"btn btn-default organize\" onClick={this.onClickOrganize}>...</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={`organizer ${this.state.showOrganizer ? 'open' : ''}`}>\n\t\t\t\t{controls}\n\t\t\t\t{this.state.showOrganizer && this.renderLists()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(Organizer);\n","// Full detail view of a list\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport SetListIsPublic from '../components/SetListIsPublic';\nimport EditableTextField from '../components/EditableTextField.js';\nimport ItemsPage from '../components/ItemsPage';\nimport Organizer from '../components/Organizer';\nimport Loading from '../components/Loading';\n\nimport * as listReducer from '../modules/list';\nimport * as itemReducer from '../modules/item';\nimport * as permissions from '../modules/permissions';\nimport findObjectByProperty from '../modules/findObjectByProperty';\nimport formatErrorMessages from '../modules/formatErrorMessages';import isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nimport './ListDetail.scss';\n\n\nclass ListDetails extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\t// to start with all we know is the slug. We have to find the list id, and then the list details and items can be loaded\n\t\tthis.getListData = this.getListData.bind(this);\n\t\tconst slug = this.getListData(props);\n\n\t\tthis.state = {\n\t\t\tslug,\n\t\t\t'showOrganizer': false,\n\t\t};\n\n\t\tthis.onDeleteList = this.onDeleteList.bind(this);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.isLoading && !this.props.isLoading) {\n\n\t\t\t// just finished loading; need to check if user should view this list\n\t\t\tconst canEditList = permissions.canEditList({ 'slug': this.state.slug });\n\t\t\tconst canViewList = permissions.canViewList({ 'slug': this.state.slug });\n\n\t\t\tif (!canViewList) {\n\t\t\t\tthis.props.history.push('/');\n\t\t\t}\n\n\t\t\tthis.getOrganizerData();\n\n\t\t\tthis.setState({\n\t\t\t\t'canView': canViewList,\n\t\t\t\t'canEdit': canEditList,\n\t\t\t});\n\n\t\t\tif(canViewList) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t'list_name': this.props.list.name,\n\t\t\t\t\t'list_description': this.props.list.description,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// user has navigated to a different list\n\t\tif (prevProps.match.params.slug !== this.props.match.params.slug) {\n\t\t\tconst slug = this.getListData(this.props);\n\t\t\tthis.setState({\n\t\t\t\tslug,\n\t\t\t});\n\t\t}\n\n\t\t// user has just logged out\n\t\t// store needs to be repopulated\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.props.dispatch(listReducer.fetchListBySlug(this.state.slug));\n\t\t\tthis.props.dispatch(clearErrors());\n\t\t}\n\t}\n\n\tgetListData = (props) => {\n\t\tconst slug = props.match.params.slug;\n\n\t\tprops.dispatch(listReducer.fetchListBySlug(slug));\n\t\tprops.dispatch(clearErrors());\n\t\treturn slug;\n\t}\n\n\tgetOrganizerData = () => {\n\t\t// minimal data for all my lists and items to allow parent list to be changed.\n\t\t// can't do this until the list has been loaded, to find the owner\n\t\tif (!this.props.list) { // probably the user does not have permission to view this list\n\t\t\treturn;\n\t\t}\n\t\tthis.props.dispatch(listReducer.fetchOrganizerData(this.props.list.created_by));\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tonChangeIsPublic = ({ id, is_public }) => {\n\t\tconsole.log('onChangeIsPublic ', id);\n\t\tthis.props.dispatch(listReducer.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = () => {\n\t\tconst id = this.props.list.id;\n\t\tconst name = this.props.list.name;\n\n\t\tif (confirm(`Are you sure you want to delete the list ${name}?`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t  this.props.dispatch(listReducer.deleteList(id));\n\n\t\t  // if there is a visible parent, navigate there\n\t\t  if (this.props.parentList) {\n\t\t  \tif (permissions.canViewList({ 'id': this.props.parentList.id })) {\n\t\t  \t\tthis.props.history.push(`/list/${this.props.parentList.slug}`);\n\t\t  \t\treturn;\n\t\t  \t}\n\t\t  }\n\n\t\t  // otherwise navigate home\n\t\t  this.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst listId = element.dataset.entityid;\n\n\t\t// the list field to update is coded in the 'state' data e.g. 'list_name'\n\t\t// we want to keep item name and list name clearly separate\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(listReducer.updateList(listId, propertyName, value));\n\t}\n\n\tonCreateChildList = (item) => {\n\t\tthis.props.history.push(`/newlist?parent-item-id=${item.id}&parent-item-name=${item.name}&parent-list-name=${this.props.list.name}&parent-list-slug=${this.props.list.slug}`);\n\t}\n\n\tonChangeIsPublic = ({ id, is_public }) => {\n\t\tthis.props.dispatch(listReducer.setListIsPublic({ id, is_public }));\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderPage() {\n\t\tif (!this.props.list) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet showPrivacyWarning = false;\n\t\tlet privacyWarningText = '';\n\n\t\tif (this.state.canEdit && this.props.parentList) {\n\t\t\tif (this.props.list.is_public && !this.props.parentList.is_public) {\n\t\t\t\tprivacyWarningText = 'This public list has a private parent list';\n\t\t\t\tshowPrivacyWarning = true;\n\t\t\t} else if (!this.props.list.is_public && this.props.parentList.is_public) {\n\t\t\t\tprivacyWarningText = 'This private list has a public parent list';\n\t\t\t\tshowPrivacyWarning = true;\n\t\t\t}\n\t\t}\n\n\t\tlet breadcrumbs = <div className=\"breadcrumbs\">Top level list</div>;\n\n\t\tlet parentListId;\n\t\tif (this.props.parentList) {\n\t\t\tparentListId = this.props.parentList.id;\n\n\t\t\tbreadcrumbs = <div className=\"breadcrumbs\"><Link to={`/list/${this.props.parentList.slug}`}>{this.props.parentList.name}</Link> > {this.props.parentItem.name}</div>;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t{this.props.isLoading && <Loading />}\n\t\t\t\t{this.props.list && !this.props.isLoading && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"list-name\">\n\t\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\tname={'list_name'}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a name for the list\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\t\t\t\t\tdata-state={'list_name'} // this.state property\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\t\tid='list_name' // id of the html element\n\t\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.list_name}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{this.state.canEdit && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"list-detail-controls\">\n\t\t\t\t\t\t\t\t\t\t\t<SetListIsPublic\n\t\t\t\t\t\t\t\t\t\t\t\tlistId={this.props.list.id}\n\t\t\t\t\t\t\t\t\t\t\t\tisPublic={this.props.list.is_public}\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeIsPublic={this.onChangeIsPublic}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={this.onDeleteList}>X</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t{this.state.canEdit &&\n\t\t\t\t\t\t\t\t\t<Organizer\n\t\t\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\t\t\tparentListId={parentListId}\n\t\t\t\t\t\t\t\t\t\tlistOrganizerData={this.props.listOrganizerData}\n\t\t\t\t\t\t\t\t\t\titemOrganizerData={this.props.itemOrganizerData}\n\t\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\t\t\t{breadcrumbs}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t{showPrivacyWarning && (\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<div className=\"privacy-warning\">{privacyWarningText}</div>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"list-description\">\n\t\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\t\tname={'list_description'}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a description for the list\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\t\t\t\tdata-state={'list_description'} // this.state property\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\t\tid='list_description' // id of the html element\n\t\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.list_description}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t{this.props.thisListItems && (\n\t\t\t\t\t\t\t\t<ItemsPage\n\t\t\t\t\t\t\t\t\titems={this.props.thisListItems}\n\t\t\t\t\t\t\t\t\tlist={this.props.list.id}\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\tonCreateChildList={this.onCreateChildList}\n\t\t\t\t\t\t\t\t\tonMoveItemUp={this.onMoveItemUp}\n\t\t\t\t\t\t\t\t\tonMoveItemDown={this.onMoveItemDown}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t///////////////\n\n\trender() {\n\t\tlet content;\n\n\t\tif (this.state.canView) {\n\t\t\tcontent = this.renderPage();\n\t\t} else {\n\t\t\tcontent = <p>Either this list does not exist or you do not have permission to view it</p>;\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"list-detail\">\n\t\t\t\t{ content }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nListDetails.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'thisListItems': PropTypes.array.isRequired, // items belonging to this list\n\t'listOrganizerData': PropTypes.array.isRequired, // minimal data for all lists owned by the same user.\n\t'itemOrganizerData': PropTypes.object.isRequired, // minimal data for all lists owned by the same user\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst lists = state.list.things; // details of the current list, with parent and child lists if they exist\n\n\t// first find the target list\n\tconst list = findObjectByProperty({ 'parentObject': lists, 'property': 'slug', 'value': ownProps.match.params.slug });\n\n\tconst parentItemAndList = listReducer.getParentItemAndList(state)(list);\n\n\treturn ({\n\t\t'auth': state.auth,\n\t\t'errors': state.errors,\n\t\t'isLoading': state.list.isLoading,\n\t\t'list': list,\n\t\t'thisListItems': listReducer.getItemsForList(state)(list),\n\t\t'parentList': parentItemAndList.parentList,\n\t\t'parentItem': parentItemAndList.parentItem,\n\t\t'listOrganizerData': listReducer.getSortedOrganizerLists(state), // array containing limited list info: id, name, item (array of child items), parent_item\n\t\t'itemOrganizerData': itemReducer.groupedItems(state), // object. limited item info: id, name, list_id\n\t});\n};\n\nexport default connect(mapStateToProps)(ListDetails);\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport Loading from '../components/Loading';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\n\t\tthis.sendConfirmationEmail = this.sendConfirmationEmail.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.confirmEmailNotSent());\n\t}\n\n\tsendConfirmationEmail() {\n\t\tthis.props.dispatch(auth.sendConfirmationEmail());\n\t}\n\n\trender() {\n\t\tconst emailVerified = this.props.auth.user.emailVerified;\n\t\tconst email_status = emailVerified ? 'verified': 'unverified';\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{this.props.isLoading && <Loading />}\n\t\t\t\t<h2>My account</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div>Username: {this.props.auth.user.username}</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/changepassword\">Change password</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div>Email address: {this.props.auth.user.email}</div>\n\t\t\t\t\t\t<div>Status: {email_status}</div>\n\t\t\t\t\t\t{!emailVerified &&\t<button type=\"button\" className=\"btn btn-primary\"onClick={this.sendConfirmationEmail}>\n\t\t\t\t\t\t\t\tResend confirmation email\n\t\t\t\t\t\t</button>}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{this.props.auth.confirmEmailSent && (<div className=\"valid-feedback\">A verification email has been sent to {this.props.auth.user.email}. If you do not receive the email within a few minutes, please check your Junk or Spam folder.</div>)}\n\t\t\t\t{this.props.auth.confirmEmailAlreadyVerified && (<div className=\"valid-feedback\">The email address {this.props.auth.user.email} has already been verified.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'sendConfirmationEmail': PropTypes.func.isRequired,\n\t'confirmEmailNotSent': PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.list.isLoading,\n\t'sendConfirmationEmail': auth.sendConfirmationEmail,\n\t'confirmEmailNotSent': auth.confirmEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.forgotPasswordEmailNotSent());\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.dispatch(auth.forgotPassword(user));\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) &&\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>}\n\t\t\t\t<h2>Forgot your password?</h2>\n\t\t\t\t<p>Enter your email address. A reset password link will be emailed to you.</p>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.email && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.email}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"valid-feedback\">If the address {this.state.email} is associated with an account, an email has been sent. If you don't see it within a few minutes, please check your junk mail folder.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'forgotPassword': auth.forgotPassword,\n\t'forgotPasswordEmailNotSent': auth.forgotPasswordEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { changePassword, passwordNotChanged } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass ChangePassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'old_password': '',\n\t\t\t'new_password': '',\n\t\t\t'new_password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst data = {\n\t\t\t'old_password': this.state.old_password,\n\t\t\t'new_password1': this.state.new_password,\n\t\t\t'new_password2': this.state.new_password_confirm\n\t\t};\n\n\t\tthis.props.changePassword(data, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Change your password</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'new_password',\n\t\t\t\t\t'input2': 'new_password_confirm',\n\t\t\t\t\t'message': 'New passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"old_password\">Old password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"old_password\"\n\t\t\t\t\t\t\t\t\tid=\"old_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.old_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your old password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password\">New password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password_confirm\">Confirm your new password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tChange password now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.changePassword && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.changePassword}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t      {this.props.auth.changePasswordComplete && (<div className=\"valid-feedback\">Your new password has been saved</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nChangePassword.propTypes = {\n\t'changePassword': PropTypes.func.isRequired,\n\t'passwordNotChanged': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ changePassword, passwordNotChanged })(withRouter(ChangePassword));\n","// Shown after user successfully verifies email address\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { logoutUser } from '../modules/auth';\n\nclass Verified extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onLogout();\n\t}\n\n\tonLogout(e) {\n\t\t// just in case a different user is logged in\n\t\t// to avoid confusion and force new login\n\t\tif (this.props.auth.isAuthenticated) {\n\t\t\tthis.props.logoutUser(this.props.history);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Your email address has been verified</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/login\" className=\"nav-link\">Login</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nVerified.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Verified));\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport { setCurrentUser, getUserInfo, logoutUser, getAuthToken } from '../modules/auth';\n\nimport Navbar from '../components/Navbar';\nimport Register from '../components/Register';\nimport Welcome from '../components/Welcome';\nimport Login from '../components/Login';\nimport Home from '../containers/Home';\nimport CreateList from '../containers/CreateList';\nimport ListDetails from '../containers/ListDetail';\nimport Account from '../components/Account';\nimport ForgotPassword from '../components/ForgotPassword';\nimport ChangePassword from '../components/ChangePassword';\nimport Verified from '../components/Verified';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password loads the bootstrap css from static/bootstrap\n\n// check if user is already logged in\nif(getAuthToken()) {\n\tstore.dispatch(setCurrentUser(localStorage.mytoptensJwtToken));\n\tstore.dispatch(getUserInfo());\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.mytoptensJwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\t\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t\t<Route exact path=\"/newlist\" component={ CreateList } />\n\t\t\t\t\t\t\t<Route exact path=\"/list/:slug\" component={ ListDetails } />\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/welcome\" component={ Welcome } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t<Route exact path=\"/changepassword\" component={ ChangePassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/verified\" component={ Verified } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./containers/App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}
{"version":3,"sources":["modules/errors.js","modules/formatErrorMessages.js","modules/fetchAPI.js","modules/isEmpty.js","modules/auth.js","constants/index.js","modules/items.js","modules/lists.js","modules/page.js","modules/rootReducer.js","store.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Welcome.js","components/Login.js","components/ListSummary.js","components/ListsList.js","containers/ListsPage.js","components/Item.js","components/ItemsList.js","containers/ItemsPage.js","components/SelectList.js","components/FlashMessage.js","containers/Home.js","containers/CreateList.js","containers/ListDetail.js","components/Account.js","components/ForgotPassword.js","components/ChangePassword.js","containers/App.js","serviceWorker.js","index.js"],"names":["getErrors","error","type","payload","clearErrors","updeep","require","initialState","formatErrorMessages","errors","messageArray","Object","keys","forEach","key","push","map","item","join","fetchAPI","_ref","url","data","_ref$method","method","_ref$useAuth","useAuth","_ref$headers","headers","Authorization","concat","store","getState","auth","user","token","fetch","body","then","response","ok","contentType","get","includes","json","catch","Promise","reject","Error","message","text","html","page_type","status","isEmpty","value","undefined","length","trim","LOGOUT_USER_COMPLETE","setCurrentUser","dispatch","localStorage","setItem","setAuthToken","logoutUser","history","removeItem","logout user","getUserInfo","setUserInfo","username","email","slug","get user info","forgotPasswordEmailNotSent","forgotPassword","formData","FormData","name","append","request password reset email","passwordNotChanged","changePasswordComplete","isAuthenticated","canCreateList","forgotPasswordEmailSent","resetPasswordComplete","LIST_IS_PUBLIC_VALUES","LIST_IS_PUBLIC_TEXTS","MAX_ITEMS_IN_LIST","CREATE_ITEM_SUCCEEDED","DELETE_ITEM_SUCCEEDED","createItem","JSON","stringify","Content-Type","create item","deleteItem","itemId","listId","_ref2","deleteItemSucceeded","delete item","initialItemsState","things","isLoading","getItemsByListId","state","currentListId","page","lists","items","id","sort","a","b","order","RECEIVE_ENTITIES","FETCH_LISTS_STARTED","FETCH_LISTS_FAILED","FETCH_LIST_BY_SLUG_STARTED","FETCH_LIST_BY_SLUG_FAILED","FILTER_LISTS","CREATE_LIST_SUCCEEDED","DELETE_LIST_SUCCEEDED","SET_LIST_IS_PUBLIC_SUCCEEDED","SET_CURRENT_LIST_ID","itemSchema","schema","Entity","listSchema","receiveEntities","entities","fetchLists","normalizedData","normalize","defaultListId","result","setCurrentListId","fetch lists","fetchListBySlug","console","log","createList","list","create list","deleteList","deleteListSucceeded","delete list","setListIsPublic","is_public","setListIsPublicSucceeded","set list is public","initialListsState","getFilteredLists","createSelector","searchTerm","filter","title","match","RegExp","getGroupedAndFilteredLists","grouped","combineReducers","arguments","action","toConsumableArray","constant","defineProperty","omit","updateIn","itemIndex","findIndex","newItems","splice","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","createElement","className","Link","to","onClick","onLogout","bind","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","Component","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","assertThisInitialized","formLength","checkValidity","i","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","submitHandler","event","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","node","setCustomValidity","objectSpread","classNames","assign","noValidate","children","Register","password","password_confirm","handleInputChange","handleSubmit","target","password1","password2","registerUser","nextProps","Container","ValidatedForm_ValidatedForm","Row","Col","Label","for","Input","required","onChange","minLength","pattern","registration","style","display","Welcome","Login","loginUser","authentication","ListSummary","sm","md","description","onIsPublicChange","onDeleteList","ListsList","index","indexOf","headerText","components_ListSummary","ListsPage","onSearch","onAddList","prevProps","_this$props","listsByIsPublic","components_ListsList","renderListsList","Item","onDeleteItem","ItemsList","components_Item","ItemsPage","onTitleChange","onDescriptionChange","onCreateItem","orders","parseInt","resetForm","toggleForm","showNewItemForm","showNewCardForm","components_ItemsList","renderItemsList","SelectList","listOptions","onCurrentListChange","FlashMessage","aria-hidden","Home","onCreateList","onCloseFlashMessage","SelectList_SelectList","src_containers_ListsPage","src_containers_ItemsPage","CreateList","cancel","ListDetails","params","Account","ForgotPassword","ChangePassword","old_password","new_password","new_password_confirm","new_password1","new_password2","changePassword","getItem","jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","location","hostname","navigator","serviceWorker","ready","unregister","render","src_containers_App","document","getElementById"],"mappings":"kWAKaA,EAAY,SAAAC,GAExB,MAAO,CACNC,KANiB,aAOjBC,QAAWF,IAIAG,EAAc,WAC1B,MAAO,CACNF,KAZmB,iBAgBjBG,EAASC,EAAQ,IAEfC,EAAe,GCRNC,EAAA,SAAUC,GACxB,IAAIC,EAAe,GAanB,OAZAC,OAAOC,KAAKH,GAAQI,QAAQ,SAACC,GACD,kBAAhBL,EAAOK,GACjBJ,EAAaK,KAAKN,EAAOK,IAEzBL,EAAOK,GAAKE,IAAI,SAACC,GAChBP,EAAaK,KAAKE,OAKLP,EAAaQ,KAAK,MCnBpB,SAASC,EAATC,GAAgF,IAA5DC,EAA4DD,EAA5DC,IAAKC,EAAuDF,EAAvDE,KAAuDC,EAAAH,EAAjDI,cAAiD,IAAAD,EAAxC,MAAwCA,EAAAE,EAAAL,EAAjCM,eAAiC,IAAAD,KAAAE,EAAAP,EAAhBQ,eAAgB,IAAAD,EAAN,GAAMA,EAM9F,OAJID,IACHE,EAAQC,cAAR,SAAAC,OAAiCC,GAAMC,WAAWC,KAAKC,KAAKC,QAGtDC,MAAMf,EAAK,CAAEO,UAASJ,OAAUA,EAAQa,KAAQf,IACrDgB,KAAK,SAAAC,GAGL,GAAIA,EAASC,GAAI,CAChB,IAAMC,EAAcF,EAASX,QAAQc,IAAI,iBAAmB,GAE5D,OAAID,EAAYE,SAAS,oBACjBJ,EAASK,OAAOC,MAAM,SAAA5C,GAC5B,OAAO6C,QAAQC,OAAO,IAAIC,MAAM,iBAAmB/C,EAAMgD,YAIvDR,EAAYE,SAAS,aACjBJ,EAASW,OAAOZ,KAAK,SAAAa,GAC3B,MAAO,CACNC,UAAa,UACbD,KAAQA,KAEPN,MAAM,SAAA5C,GACR,OAAO6C,QAAQC,OAAO,IAAIC,MAAM,eAAiB/C,EAAMgD,iBAIzD,EAIA,OAAwB,MAApBV,EAASc,OACLP,QAAQC,OAAO,IAAIC,MAAM,mBAAqB3B,IAG9B,MAApBkB,EAASc,OACLP,QAAQC,OAAO,IAAIC,MAAM,0BAA4B3B,IAGtDkB,EAASK,OAAON,KAAK,SAAAC,GAM3B,OAAOO,QAAQC,OAAO,IAAIC,MAAMxC,EAAoB+B,SAIpDM,MAAM,SAAA5C,GAER,OAAO6C,QAAQC,OAAO,IAAIC,MAAM/C,EAAMgD,YC1DzC,IASeK,EATC,SAACC,GAChB,YACWC,IAAVD,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9B5C,OAAOC,KAAK2C,GAAOE,QAC/B,kBAAVF,GAA8C,IAAxBA,EAAMG,OAAOD,QCMhCE,EAAuB,uBAqB7B,IAwDMC,EAAiB,SAACzB,EAAO0B,GAErC,OAlED,SAAsB1B,GACrB2B,aAAaC,QAAQ,WAAY5B,GAgEjC6B,CAAa7B,GACN,CACNjC,KAjF8B,mBAkF9BC,QAAW,CAAEgC,WAUF8B,EAAa,SAACC,GAAD,OAAa,SAAAL,GAGtC,OAFAA,EAASzD,KAEFe,EAAS,CACfE,IAAO,4BACPG,OAAU,OACVE,SAAW,IACTY,KAAK,SAAAC,GAGJ,OAFD2B,EAAQnD,KAAK,KAjFhB+C,aAAaK,WAAW,YAmFbN,EAfJ,CACN3D,KAAQyD,MAeNd,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEoE,cAAe,0BAgBhCC,EAAc,kBAAM,SAACR,GACjC,OAAO1C,EAAS,CACfE,IAAO,0BACPG,OAAU,MACVE,SAAW,IACTY,KAAK,SAAAJ,GACL,OAAO2B,EAbgB,SAAA3B,GAC1B,MAAO,CACNhC,KA7G2B,gBA8G3BC,QAAW+B,GAUOoC,CAAY,CAC7BC,SAAYrC,EAAKqC,SACjBC,MAAStC,EAAKsC,MACdC,KAAQvC,EAAKuC,UAEZ5B,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAE0E,gBAAiB,iCAMlCC,EAA6B,SAAAxC,GACzC,MAAO,CACNjC,KArI4C,mCA+IjC0E,EAAiB,SAACJ,GAAD,OAAW,SAAAX,GACxCA,EAASzD,KAET,IAAIyE,EAAY,IAAIC,SAEpB,IAAI,IAAIC,KAAQP,EACfK,EAASG,OAAOD,EAAMP,EAAMO,IAG7B,OAAO5D,EAAS,CAEfE,IAAO,oCACPC,KAAQuD,EACRrD,OAAU,OACVE,SAAW,IACTY,KAAK,SAAAC,GACL,OAAOsB,EArBH,CACN3D,KAhJwC,iCAqKtC2C,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEiF,+BAAA,8EAAAnD,OAA8G0C,EAA9G,oDAsCjBU,EAAqB,SAAA/C,GACjC,MAAO,CACNjC,KA5MkC,yBAgNvBiF,EAAyB,SAAChD,GACtC,MAAO,CACNjC,KAjNsC,6BAuNpCG,EAASC,EAAQ,IAEfC,EAAe,CACpB6E,iBAAmB,EACnBC,eAAiB,EACjBC,yBAA2B,EAC3BC,uBAAyB,EACzBJ,wBAA0B,EAC1BjD,KAAQ,IAGT,SAASmD,EAAclD,GAGtB,OAAQmB,EAAQnB,GAGF,oBCzPFqD,EAAwB,EAAC,GAAO,GAChCC,EAAuB,CAAC,UAAW,UACnCC,EAAoB,WCYpBC,EAAwB,wBACxBC,EAAwB,wBAExBC,EAAa,SAAA5E,GAAI,OAAI,SAAA4C,GAGjC,OAFAA,EAgBO,CACN3D,KAAQ,0BAfFiB,EAAS,CACfE,IAAO,yBACPC,KAAQwE,KAAKC,UAAU9E,GACvBO,OAAU,OACVE,SAAW,EACXE,QAAW,CAAEoE,eAAgB,sBAC3B1D,KAAK,SAAAC,GACJ,OAAOsB,EAaJ,CACN3D,KAAQ,wBACRC,QAAW,CACVc,KAhBsCsB,OACrCM,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEiG,cAAehG,EAAMgD,eAmB5C,IAAMiD,EAAa,SAAA9E,GAAA,IAAG+E,EAAH/E,EAAG+E,OAAQC,EAAXhF,EAAWgF,OAAX,OAAwB,SAAAvC,GACjD,OAAO1C,EAAS,CACfE,IAAA,yBAAAS,OAAgCqE,EAAhC,KACA3E,OAAU,WACRc,KAAK,SAAAC,GACJ,OAAOsB,EAML,SAAAwC,GAAiD,IAAlBF,EAAkBE,EAAlBF,OAAQC,EAAUC,EAAVD,OAC7C,MAAO,CACNlG,KAAQ,wBACRC,QAAW,CACVgG,SACAC,WAXkBE,CAAoB,CAAEH,SAAQC,cAC/CvD,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEuG,cAAetG,EAAMgD,eAgBnD,IAAI5C,EAASC,EAAQ,IAEfkG,EAAoB,CACzBC,OAAU,GACVC,WAAa,EACbzG,MAAS,MAgCH,IAAM0G,EAAmB,SAAAC,GAAS,IAChCC,EAAkBD,EAAME,KAAxBD,cAER,OAAKA,GAAkBD,EAAMG,MAAMN,OAAOI,GAK1BD,EAAMG,MAAMN,OAAOI,GAAeG,MAG9BhG,IAAI,SAAAiG,GAAE,OAAIL,EAAMI,MAAMP,OAAOQ,KAAKC,KAAK,SAASC,EAAGC,GAAG,OAAOD,EAAEE,MAAQD,EAAEC,QAPrF,IC/FIC,EAAmB,mBACnBC,EAAsB,sBACtBC,EAAqB,qBACrBC,EAA6B,sBAC7BC,EAA4B,qBAC5BC,GAAe,eACfC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAA+B,+BAC/BC,GAAsB,sBAE7BC,GAAa,IAAIC,IAAOC,OAAO,SAC/BC,GAAa,IAAIF,IAAOC,OAAO,QAAS,CAC7ClB,MAAS,CAACgB,MAGX,SAASI,GAAgBC,GACxB,MAAO,CACNnI,KAAQoH,EACRnH,QAAWkI,GAgBN,SAASC,KACf,OAAO,SAACzE,EAAU7B,GACjB6B,EAbM,CACN3D,KAAQqH,IAeR,IAAI7F,GAAU,EAMd,OAJIM,IAAWC,KAAKC,KAAKC,QACxBT,GAAU,GAGJP,EAAS,CACfE,IAAO,yBACPG,OAAU,MACVE,QAAWA,IACTY,KAAK,SAAAC,GACP,IAAMgG,EAAiBC,YAAUjG,EAAU,CAAC4F,KACxCM,EAAgB,KAWpB,OATIF,EAAeG,OAAOjF,OAAS,IAClCgF,EAAgBlG,EAAS,GAAG0E,IAGxBjF,IAAW8E,KAAKD,eAEpBhD,EAAS8E,GAAiBF,IAGpB5E,EAASuE,GAAgBG,MAC9B1F,MAAM,SAAA5C,GAGR,OAFA4D,EAnCK,CACN3D,KAAQsH,IAoCA3D,EAAS7D,EAAU,CAAE4I,cAAe3I,EAAMgD,cAmB7C,SAAS4F,GAAgBpE,GAE/B,OADAqE,QAAQC,IAAI,mBAAoBtE,GACzB,SAACZ,EAAU7B,GACjB6B,EAdM,CACN3D,KAAQuH,IAgBR,IAAI/F,GAAU,EAMd,OAJIM,IAAWC,KAAKC,KAAKC,QACxBT,GAAU,GAGJP,EAAS,CACfE,IAAA,6BAAAS,OAAoC2C,GACpCjD,OAAU,MACVE,QAAWA,IACTY,KAAK,SAAAC,GACP,IAAMgG,EAAiBC,YAAUjG,EAAU,CAAC4F,KAY5C,OAAOtE,EAASuE,GAAgBG,MAC9B1F,MAAM,SAAA5C,GAGR,OAFA4D,EApCK,CACN3D,KAAQwH,IAqCA7D,EAAS7D,EAAU,CAAE4I,cAAe3I,EAAMgD,cAY7C,IAAM+F,GAAa,SAACC,EAAM/E,GAAP,OAAmB,SAAAL,GAC5C,OAAO1C,EAAS,CACfE,IAAO,yBACPC,KAAQwE,KAAKC,UAAUkD,GACvBzH,OAAU,OACVE,SAAW,EACXE,QAAW,CAAEoE,eAAgB,sBAC3B1D,KAAK,SAAAC,GAIP,OAHAsB,EAAS8E,GAAiBpG,EAAS0E,KACnC6B,QAAQC,IAAI,YAAaxG,GACzB2B,EAAQnD,KAAR,SAAAe,OAAsBS,EAASkC,OACxBZ,EAOD,CACN3D,KAAQ0H,GACRzH,QAAW,CACV8I,KAVmC1G,OAClCM,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEkJ,cAAejJ,EAAMgD,eAa5C,IAAMkG,GAAa,SAAAlC,GAAE,OAAI,SAACpD,EAAU7B,GAC1C,OAAOb,EAAS,CACfE,IAAA,yBAAAS,OAAgCmF,EAAhC,KACAzF,OAAU,SACVE,SAAW,IACTY,KAAK,SAAAC,GAMP,OAJI0E,IAAOjF,IAAW8E,KAAKD,eAC1BhD,EAAS8E,GAAiB,OAGpB9E,EAoBF,SAA6BoD,GACnC,MAAO,CACN/G,KAAQ2H,GACR1H,QAAW,CACV8G,OAxBemC,CAAoBnC,MAClCpE,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEqJ,cAAepJ,EAAMgD,eAItCqG,GAAkB,SAAAlI,GAAA,IAAG6F,EAAH7F,EAAG6F,GAAIsC,EAAPnI,EAAOmI,UAAP,OAAuB,SAAA1F,GACrD,OAAO1C,EAAS,CACfE,IAAA,yBAAAS,OAAgCmF,EAAhC,KACArF,QAAW,CAAEoE,eAAgB,oBAC7B1E,KAAQwE,KAAKC,UAAU,CAAEwD,cACzB/H,OAAU,QACVE,SAAW,IACTY,KAAK,SAAAC,GACP,OAAOsB,EAeF,SAAAwC,GAAqD,IAAjBY,EAAiBZ,EAAjBY,GAAIsC,EAAalD,EAAbkD,UAC9C,MAAO,CACNrJ,KAAQ4H,GACR3H,QAAW,CACV8G,GAAMA,EACNsC,cApBeC,CAAyBjH,MACvCM,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEyJ,qBAAsBxJ,EAAMgD,eAuBnD,SAAS0F,GAAiB1B,GAChC,MAAO,CACN/G,KAAQ6H,GACR5H,QAAW,CACV8G,OAQH,IAAI5G,GAASC,EAAQ,IAGfoJ,GAAoB,CACzBhD,WAAa,EACbzG,MAAS,KACTwG,OAAU,IAcEkD,GAAmBC,YAC/B,CAPuB,SAAAhD,GACvB,OAAOjG,OAAOC,KAAKgG,EAAMG,MAAMN,QAAQzF,IAAI,SAAAiG,GAC1C,OAAOL,EAAMG,MAAMN,OAAOQ,MANC,SAAAL,GAC5B,OAAOA,EAAME,KAAK+C,aAWlB,SAAC9C,EAAO8C,GACP,OAAO9C,EAAM+C,OAAO,SAAAb,GAEnB,MAAmB,KAAfY,EACIZ,EAEDA,EAAKc,MAAMC,MAAM,IAAIC,OAAOJ,EAAY,UAKrCK,GAA6BN,YACzC,CAACD,IACD,SAAA5C,GACC,IAAMoD,EAAU,GAMhB,OAJA3E,EAAsB3E,QAAQ,SAAA0I,GAC7BY,EAAQZ,GAAaxC,EAAM+C,OAAO,SAAAb,GAAI,OAAIA,EAAKM,YAAcA,MAGvDY,ICjRT,IAAI9J,GAASC,EAAQ,IAEfC,GAAe,CACpBsG,cAAiB,KACjBgD,WAAc,ICEAO,mBAAgB,CAC9B3J,OTWc,WAAwC,IAA/BmG,EAA+ByD,UAAA5G,OAAA,QAAAD,IAAA6G,UAAA,GAAAA,UAAA,GAAvB9J,EAAc+J,EAASD,UAAA5G,OAAA,EAAA4G,UAAA,QAAA7G,EACtD,OAAO8G,EAAOpK,MACb,IAvBiB,aAyBhB,IAAIO,EAAS,GAWb,OATAE,OAAOC,KAAK0J,EAAOnK,SAASU,QAAQ,SAACC,GACD,kBAAxBwJ,EAAOnK,QAAQW,GAEzBL,EAAOK,GAAO,CAACwJ,EAAOnK,QAAQW,IAE9BL,EAAOK,GAAPH,OAAA4J,EAAA,EAAA5J,CAAkB2J,EAAOnK,QAAQW,MAI5BT,EAAOI,EAAQ,IAGvB,IAtCmB,eAuClB,MAAO,GAGR,QACC,OAAOmG,ISjCT3E,KL4Oc,WAAwC,IAA/B2E,EAA+ByD,UAAA5G,OAAA,QAAAD,IAAA6G,UAAA,GAAAA,UAAA,GAAvB9J,EAAc+J,EAASD,UAAA5G,OAAA,EAAA4G,UAAA,QAAA7G,EACtD,OAAO8G,EAAOpK,MACb,IA/O8B,mBAgP7B,OAAOG,EAAO,CACb+E,iBAAoB9B,EAAQgH,EAAOnK,QAAQgC,OAC3CkD,cAAiBA,EAAciF,EAAOnK,QAAQgC,OAC9CD,KAAQ7B,EAAOmK,SAAS,CAAErI,MAASmI,EAAOnK,QAAQgC,SAChDyE,GAEJ,IAhP2B,gBAiP1B,OAAOvG,EAAO,CACb6B,KAAQ,CACPqC,SAAY+F,EAAOnK,QAAQoE,SAC3BC,MAAS8F,EAAOnK,QAAQqE,MACxBC,KAAQ6F,EAAOnK,QAAQsE,OAEtBmC,GAEJ,KAAKjD,EACJ,OAAOtD,EAAO,CACb+E,iBAAmB,EACnBC,cAAiBA,IACjBnD,KAAQ7B,EAAOmK,SAAS,KACtB5D,GAGJ,IAhQ4C,iCAiQ3C,OAAOvG,EAAO,CACbiF,yBAA2B,EAC3BC,uBAAyB,GACvBqB,GAGJ,IA5QwC,6BA6QvC,OAAOvG,EAAO,CACbiF,yBAA2B,EAC3BC,uBAAyB,GACvBqB,GAGJ,IAlRqC,0BAmRpC,OAAOvG,EAAO,CACbiF,yBAA2B,EAC3BC,uBAAyB,GACvBqB,GAGJ,IAxRkC,uBAyRjC,OAAOvG,EAAO,CACb8E,wBAA0B,EAC1B1E,OAAU,IACRmG,GAGJ,IA9RsC,2BA+RrC,OAAOvG,EAAO,CACb8E,wBAA0B,GACxByB,GAGJ,QACC,OAAOA,IKxSTE,KDFc,WAA4C,IAA9BF,EAA8ByD,UAAA5G,OAAA,QAAAD,IAAA6G,UAAA,GAAAA,UAAA,GAAtB9J,GAAc+J,EAAQD,UAAA5G,OAAA,EAAA4G,UAAA,QAAA7G,EAC1D,OAAQ8G,EAAOpK,MACd,KAAK6H,GACJ,OAAO1H,GAAO,CAAEwG,cAAiByD,EAAOnK,QAAQ8G,IAAML,GAGvD,KAAKe,GACJ,OAAOtH,GAAO,CAAEwJ,WAAcS,EAAOnK,QAAQ0J,YAAcjD,GAG5D,QACC,OAAOA,ICRTG,MFgRc,WAAkD,IAAnCH,EAAmCyD,UAAA5G,OAAA,QAAAD,IAAA6G,UAAA,GAAAA,UAAA,GAA3BX,GAAmBY,EAAQD,UAAA5G,OAAA,EAAA4G,UAAA,QAAA7G,EAChE,OAAQ8G,EAAOpK,MACd,KAAKyD,EACJ,OAAOtD,GAAOqJ,GAAmB,IAGlC,KAAKpC,EAAkB,IACde,EAAaiC,EAAOnK,QAApBkI,SACJtB,EAAQ,GAMZ,OAJIsB,GAAYA,EAAStB,QACxBA,EAAQsB,EAAStB,OAGX1G,GAAO,CAAEoG,OAAUM,EAAOL,WAAa,GAASE,GAGxD,KAAKW,EACJ,OAAOlH,GAAO,CAAEqG,WAAa,GAAQE,GAGtC,KAAKY,EACJ,OAAOnH,GAAO,CAAEqG,WAAa,GAASE,GAGvC,KAAKgB,GACJ,IAAMqB,EAAOqB,EAAOnK,QAAQ8I,KAC5B,OAAO5I,GAAO,CAAEoG,OAAS9F,OAAA8J,EAAA,EAAA9J,CAAA,GAAIsI,EAAKhC,GAAKgC,IAAUrC,GAGlD,KAAKiB,GAEJ,OADAiB,QAAQC,IAAI,iBAAkBuB,EAAOnK,QAAQ8G,IACtC5G,GAAO,CAAEoG,OAAUpG,GAAOqK,KAAK,CAACJ,EAAOnK,QAAQ8G,MAAQL,GAG/D,KAAKkB,GACJ,IAAM1B,EAASkE,EAAOnK,QAAQ8G,GAE9B,OAAO5G,GAAO,CAAEoG,OAAS9F,OAAA8J,EAAA,EAAA9J,CAAA,GAAIyF,EAAS,CAAEmD,UAAae,EAAOnK,QAAQoJ,aAAiB3C,GAYtF,KAAKjB,EAAuB,IACrB1E,EAAOqJ,EAAOnK,QAAQc,KAM5B,OAAOZ,GAAOsK,SAAP,UAAA7I,OAA0Bb,EAAKgI,KAA/B,UAJP,SAAiBjC,GAChB,MAAO,GAAGlF,OAAOkF,EAAO/F,EAAKgG,KAG+BL,GAG9D,KAAKhB,EAQJ,OAAOvF,GAAOsK,SAAP,UAAA7I,OAA0BwI,EAAOnK,QAAQiG,OAAzC,UAPP,SAAoBY,GACnB,IAAM4D,EAAY5D,EAAM6D,UAAU,SAAC5J,GAAD,OAAUA,IAASqJ,EAAOnK,QAAQgG,SAChE2E,EAAW,GAAGhJ,OAAOkF,GAEzB,OADA8D,EAASC,OAAOH,EAAW,GACpBE,GAGoElE,GAG7E,QACC,OAAOA,IEvVTI,MH+Dc,WAAkD,IAAnCJ,EAAmCyD,UAAA5G,OAAA,QAAAD,IAAA6G,UAAA,GAAAA,UAAA,GAA3B7D,EAAmB8D,EAAQD,UAAA5G,OAAA,EAAA4G,UAAA,QAAA7G,EAChE,OAAQ8G,EAAOpK,MACd,KAAKyD,EACJ,OAAOtD,EAAOmG,EAAmB,IAGlC,KAAKc,EAAkB,IACde,EAAaiC,EAAOnK,QAApBkI,SACR,OAAIA,GAAYA,EAASrB,MACjB3G,EAAO,CAAEoG,OAAU4B,EAASrB,MAAON,WAAa,GAASE,GAG1DA,EAGR,KAAKjB,EACJ,IAAM1E,EAAOqJ,EAAOnK,QAAQc,KAC5B,OAAOZ,EAAO,CAAEoG,OAAS9F,OAAA8J,EAAA,EAAA9J,CAAA,GAAIM,EAAKgG,GAAKhG,IAAU2F,GAGlD,KAAKhB,EACJ,OAAOvF,EAAO,CAAEoG,OAAUpG,EAAOqK,KAAK,CAACJ,EAAOnK,QAAQ8G,MAAQL,GAG/D,QACC,OAAOA,MIxFK7E,OAVDiJ,YACbC,GAEAC,YAAQC,YAAgBC,KACvBC,OAAOC,8BAA+BD,OAAOC,qDCDzCC,eACL,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA9K,OAAA+K,EAAA,EAAA/K,CAAAgL,KAAAJ,IAClBE,EAAA9K,OAAAiL,EAAA,EAAAjL,CAAAgL,KAAAhL,OAAAkL,EAAA,EAAAlL,CAAA4K,GAAAO,KAAAH,KAAMH,KACD5E,MAAQ,CACZmF,cAAgB,GAHCN,4EAMNO,GACZA,EAAEC,iBACFN,KAAKO,SAAS,SAAAC,GAAS,MAAK,CAC3BJ,cAAiBI,EAAUJ,iDAIpBC,GACRA,EAAEC,iBACFN,KAAKH,MAAMvH,WAAW0H,KAAKH,MAAMtH,0CAGzB,IAAAkI,EAAAT,KAAAU,EAC0BV,KAAKH,MAAMvJ,KAArCmD,EADAiH,EACAjH,gBAAiBlD,EADjBmK,EACiBnK,KAEnBoK,EACLC,EAAApF,EAAAqF,cAAA,MAAIC,UAAU,sBACZvK,EAAKqC,UAAYgI,EAAApF,EAAAqF,cAAA,MAAIC,UAAU,YAAWF,EAAApF,EAAAqF,cAACE,GAAA,EAAD,CAAMC,GAAG,WAAWF,UAAU,YAAYvK,EAAKqC,WAC1FgI,EAAApF,EAAAqF,cAAA,MAAIC,UAAU,YAAWF,EAAApF,EAAAqF,cAACE,GAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,WAAWG,QAASjB,KAAKkB,SAASC,KAAKnB,OAA9D,YAGrBoB,EACLR,EAAApF,EAAAqF,cAAA,MAAIC,UAAU,sBACbF,EAAApF,EAAAqF,cAAA,MAAIC,UAAU,YACbF,EAAApF,EAAAqF,cAACE,GAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,aAA9B,aAEDJ,EAAApF,EAAAqF,cAAA,MAAIC,UAAU,YACbF,EAAApF,EAAAqF,cAACE,GAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,UAA9B,WAIH,OACCJ,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,iDACdF,EAAApF,EAAAqF,cAACE,GAAA,EAAD,CAAMD,UAAU,eAAeE,GAAG,KAAlC,eACAJ,EAAApF,EAAAqF,cAAA,UAAQC,UAAU,iBAAiBvM,KAAK,SAAS8M,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBACrLR,QAAS,SAACZ,GAAOI,EAAKL,aAAaC,KACnCO,EAAApF,EAAAqF,cAAA,QAAMC,UAAU,yBAEjBF,EAAApF,EAAAqF,cAAA,OAAKC,UAAS,4BAAA3K,OAA8B6J,KAAK/E,MAAMmF,aAAe,OAAS,IAAM9E,GAAG,0BACtF7B,EAAkBkH,EAAYS,EAC/BR,EAAApF,EAAAqF,cAAA,QAAMC,UAAU,4BACfF,EAAApF,EAAAqF,cAAA,SAAOC,UAAU,uBAAuBvM,KAAK,SAASmN,YAAY,SAASD,aAAW,WACtFb,EAAApF,EAAAqF,cAAA,UAAQC,UAAU,uCAAuCvM,KAAK,UAA9D,oBAjDeoN,aAkENC,eAJS,SAAC3G,GAAD,MAAY,CACnC3E,KAAQ2E,EAAM3E,OAGyB,CAAEgC,cAA3BsJ,CAAyCC,aAAWjC,yECrD9CkC,eACpB,SAAAA,IAAc,IAAAhC,EAAA,OAAA9K,OAAA+K,EAAA,EAAA/K,CAAAgL,KAAA8B,IACbhC,EAAA9K,OAAAiL,EAAA,EAAAjL,CAAAgL,KAAAhL,OAAAkL,EAAA,EAAAlL,CAAA8M,GAAA3B,KAAAH,QAMD/E,MAAQ,CACP8G,aAAe,GARFjC,EA+DdkC,eAAiB,GA/DHlC,EAuEdmC,iBAAmB,SAACC,GAEnB,GAAIA,EAAKC,SAASC,YACjB,OAAOF,EAAKG,kBAIZ,GAAIH,EAAKC,SAASG,aAChB,OAAQxC,EAAKkC,eAAL,GAAA7L,OAAuB+L,EAAK3N,KAA5B,aAET,IAAK,IAAMgO,KAAczC,EAAKkC,eAC3B,GAAIE,EAAKC,SAASI,GAChB,OAAOzC,EAAKkC,eAAeO,IAnFrBzC,EA6Fd0C,SAAW,WACV,IAAMC,EAASC,IAASC,YAAT3N,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KACT+C,EAAaJ,EAAO3K,OAQ1B,IAA+B,IAA3B2K,EAAOK,gBAA2B,CACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CAEpC,IAAMb,EAAOO,EAAOM,GAMdC,EAAad,EAAKe,WAAWC,cAAc,qBAGjD,GAAIF,GAA8C,WAAhCd,EAAKiB,SAASC,cAC/B,GAAKlB,EAAKC,SAASkB,MAIlBL,EAAWM,YAAc,OAJA,CACzB,IAAIhM,EAAUwI,EAAKmC,iBAAiBC,IAASA,EAAKG,kBAClDW,EAAWM,YAAchM,GAO5B,OAAO,EAGP,IAAK,IAAIyL,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CACpC,IAAMb,EAAOO,EAAOM,GACdC,EAAad,EAAKe,WAAWC,cAAc,qBAC7CF,GAA8C,WAAhCd,EAAKiB,SAASC,gBAC/BJ,EAAWM,YAAc,IAI3B,OAAO,GAxIKxD,EA4IdyD,cAAgB,SAAAC,GACfA,EAAMlD,iBAEFR,EAAK0C,YACR1C,EAAKD,MAAM4D,SAASD,GAGrB1D,EAAKS,SAAS,CAAEwB,aAAe,KAhJ/BjC,EAAK0C,SAAW1C,EAAK0C,SAASrB,KAAdnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KAChBA,EAAK4D,gBAAkB5D,EAAK4D,gBAAgBvC,KAArBnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KAJVA,mFAWM,IAAAW,EAAAT,KACnB,GAAGA,KAAKH,MAAM8D,gBAAiB,CAgB9B,IAAMlB,EAASC,IAASC,YAAY3C,MAE9B4D,EAAW5D,KAAKH,MAAM8D,gBAAgBE,OACtCC,EAAW9D,KAAKH,MAAM8D,gBAAgBI,OAEtCC,EAAgBvB,EAAOS,cAAP,IAAA/M,OAAyByN,IAEzCK,EAAgBxB,EAAOS,cAAP,IAAA/M,OAAyB2N,IAE3CE,aAAyBE,aAAeD,aAAyBC,cACpEF,EAAcG,QAAU,SAAC9D,GAAD,OAAOI,EAAKiD,gBAAgBE,EAAUE,EAAUzD,IACxE4D,EAAcE,QAAU,SAAC9D,GAAD,OAAOI,EAAKiD,gBAAgBE,EAAUE,EAAUzD,8CAK3DwD,EAAQE,EAAQ1D,GAG/B,IAAM+D,EAAO1B,IAASC,YAAY3C,MAElC,GAAIoE,aAAgBF,YAAa,CAC9B,IAAMF,EAAgBI,EAAKlB,cAAL,IAAA/M,OAAuB0N,IACvCI,EAAgBG,EAAKlB,cAAL,IAAA/M,OAAuB4N,IAEzCC,aAAyBE,aAAeD,aAAyBC,cAChEF,EAAcpM,QAAUqM,EAAcrM,MACxCqM,EAAcI,kBAAkB,IAEjCJ,EAAcI,kBAAkBrE,KAAKH,MAAM8D,gBAAgBrM,4CAiGhE,IAAMuI,EAAK7K,OAAAsP,GAAA,EAAAtP,CAAA,GAAQgL,KAAKH,OAGpB0E,EAAa,GAWjB,OAVI1E,EAAMiB,YACTyD,EAAUvP,OAAA4J,EAAA,EAAA5J,CAAO6K,EAAMiB,kBAChBjB,EAAMiB,WAGVd,KAAK/E,MAAM8G,aACdwC,EAAWnP,KAAK,iBAKhBwL,EAAApF,EAAAqF,cAAA,OAAA7L,OAAAwP,OAAA,GACK3E,EADL,CAECiB,UAAWyD,EACXE,YAAU,EACVhB,SAAUzD,KAAKuD,gBAEdvD,KAAKH,MAAM6E,iBAhL2B/C,aCZrCgD,eACL,SAAAA,IAAc,IAAA7E,EAAA,OAAA9K,OAAA+K,EAAA,EAAA/K,CAAAgL,KAAA2E,IACb7E,EAAA9K,OAAAiL,EAAA,EAAAjL,CAAAgL,KAAAhL,OAAAkL,EAAA,EAAAlL,CAAA2P,GAAAxE,KAAAH,QACK/E,MAAQ,CACZrC,SAAY,GACZC,MAAS,GACT+L,SAAY,GACZC,iBAAoB,IAErB/E,EAAKgF,kBAAoBhF,EAAKgF,kBAAkB3D,KAAvBnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KACzBA,EAAKiF,aAAejF,EAAKiF,aAAa5D,KAAlBnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KATPA,iFAYIO,GACjBL,KAAKO,SAALvL,OAAA8J,EAAA,EAAA9J,CAAA,GACEqL,EAAE2E,OAAO5L,KAAOiH,EAAE2E,OAAOpN,6CAIfyI,GACZA,EAAEC,iBACF,IAAM/J,EAAO,CACZqC,SAAYoH,KAAK/E,MAAMrC,SACvBC,MAASmH,KAAK/E,MAAMpC,MACpBoM,UAAajF,KAAK/E,MAAM2J,SACxBM,UAAalF,KAAK/E,MAAM4J,kBAGzB7E,KAAKH,MAAMsF,aAAa5O,EAAMyJ,KAAKH,MAAMtH,2DAGhB6M,GACtBA,EAAU9O,KAAKmD,iBACjBuG,KAAKH,MAAMtH,QAAQnD,KAAK,iDAUtB4K,KAAKH,MAAMvJ,KAAKmD,iBAClBuG,KAAKH,MAAMtH,QAAQnD,KAAK,sCAoBzB,OACCwL,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,KACCzE,EAAApF,EAAAqF,cAAA,+BACAD,EAAApF,EAAAqF,cAACyE,GAAD,CAAe7B,SAAWzD,KAAK+E,aAAepB,gBAAkB,CAC/DE,OAAU,WACVE,OAAU,mBACVzM,QAAW,yBAEXsJ,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAAC4E,GAAA,EAAD,CAAOC,IAAI,SAAX,iBACA9E,EAAApF,EAAAqF,cAAC8E,GAAA,EAAD,CACCpR,KAAK,QACL6E,KAAK,QACLwM,UAAU,EACVtK,GAAG,QACHuK,SAAW7F,KAAK8E,kBAChBlN,MAAQoI,KAAK/E,MAAMpC,MACnB6I,YAAY,6BAEbd,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,qBACfF,EAAApF,EAAAqF,cAAA,SAAOC,UAAU,wBAChBF,EAAApF,EAAAqF,cAAA,8FAKJD,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAAC4E,GAAA,EAAD,CAAOC,IAAI,YAAX,YACA9E,EAAApF,EAAAqF,cAAC8E,GAAA,EAAD,CACCpR,KAAK,OACL6E,KAAK,WACLkC,GAAG,WACHsK,UAAU,EACVC,SAAW7F,KAAK8E,kBAChBlN,MAAQoI,KAAK/E,MAAMrC,SACnB8I,YAAY,wBAEbd,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,qBACfF,EAAApF,EAAAqF,cAAA,SAAOC,UAAU,wBAChBF,EAAApF,EAAAqF,cAAA,mFAKJD,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAAC4E,GAAA,EAAD,CAAOC,IAAI,YAAX,YACA9E,EAAApF,EAAAqF,cAAC8E,GAAA,EAAD,CACCpR,KAAK,WACL6E,KAAK,WACLwM,UAAU,EACVE,UAAW,EACXC,QAAQ,aACRzK,GAAG,WACH1D,MAAQoI,KAAK/E,MAAM2J,SACnBlD,YAAY,sBACZmE,SAAW7F,KAAK8E,oBAEjBlE,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,wBAIlBF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAAC4E,GAAA,EAAD,CAAOC,IAAI,oBAAX,yBACA9E,EAAApF,EAAAqF,cAAC8E,GAAA,EAAD,CACCpR,KAAK,WACL6E,KAAK,mBACLkC,GAAG,mBACHsK,UAAU,EACVE,UAAW,EACXC,QAAQ,aACRnO,MAAQoI,KAAK/E,MAAM4J,iBACnBnD,YAAY,wBACZmE,SAAW7F,KAAK8E,oBAEjBlE,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,qBACfF,EAAApF,EAAAqF,cAAA,SAAOC,UAAU,wBAAuBF,EAAApF,EAAAqF,cAAA,UACvCD,EAAApF,EAAAqF,cAAA,oFACAD,EAAApF,EAAAqF,cAAA,+DACAD,EAAApF,EAAAqF,cAAA,8DACAD,EAAApF,EAAAqF,cAAA,2DAKJD,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,UAAQtM,KAAK,SAASuM,UAAU,mBAAhC,oBAKEF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACH3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACExF,KAAKH,MAAM/K,OAAOkR,cAAgBpF,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,oBAAoBmF,MAAO,CAAEC,QAAW,UAAYlG,KAAKH,MAAM/K,OAAOkR,yBArKxGrE,aAyLRC,eALS,SAAA3G,GAAK,MAAK,CACjC3E,KAAQ2E,EAAM3E,KACdxB,OAAUmG,EAAMnG,SAGsB,CAAEqQ,aTjKb,SAAC5O,EAAMgC,GAAP,OAAmB,SAAAL,GAC9CA,EAASzD,KAET,IAAIyE,EAAY,IAAIC,SAGpB,IAAI,IAAIC,KAAQ7C,EACf2C,EAASG,OAAOD,EAAM7C,EAAK6C,IAQ5B,OAAO5D,EAAS,CACfE,IAAO,kCACPC,KAAQuD,EACRrD,OAAU,SACRc,KAAK,SAAAC,GAEJ,OADD2B,EAAQnD,KAAK,YACLwB,IACRM,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAE2R,aAAgB1R,EAAMgD,gBS0IrCsK,CAA0CC,aAAW8C,KC3L9DwB,eACL,SAAAA,IAAc,IAAArG,EAAA,OAAA9K,OAAA+K,EAAA,EAAA/K,CAAAgL,KAAAmG,IACbrG,EAAA9K,OAAAiL,EAAA,EAAAjL,CAAAgL,KAAAhL,OAAAkL,EAAA,EAAAlL,CAAAmR,GAAAhG,KAAAH,QACK/E,MAAQ,CACZnG,OAAU,IAHEgL,yFAOYsF,GACtBA,EAAU9O,KAAKmD,iBACjBuG,KAAKH,MAAMtH,QAAQnD,KAAK,iDAKtB4K,KAAKH,MAAMvJ,KAAKmD,iBAClBuG,KAAKH,MAAMtH,QAAQnD,KAAK,sCAKzB,OACCwL,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,KACCzE,EAAApF,EAAAqF,cAAA,oCACAD,EAAApF,EAAAqF,cAAA,0EACAD,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAACE,GAAA,EAAD,CAAMC,GAAG,SAASF,UAAU,YAA5B,mBA3BgBa,aA6CPC,eALS,SAAC3G,GAAD,MAAY,CACnC3E,KAAQ2E,EAAM3E,KACdxB,OAAUmG,EAAMnG,SAGF8M,CAAyBuE,IC3ClCC,eACL,SAAAA,IAAc,IAAAtG,EAAA,OAAA9K,OAAA+K,EAAA,EAAA/K,CAAAgL,KAAAoG,IACbtG,EAAA9K,OAAAiL,EAAA,EAAAjL,CAAAgL,KAAAhL,OAAAkL,EAAA,EAAAlL,CAAAoR,GAAAjG,KAAAH,QACK/E,MAAQ,CACZpC,MAAS,GACT+L,SAAY,IAEb9E,EAAKgF,kBAAoBhF,EAAKgF,kBAAkB3D,KAAvBnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KACzBA,EAAKiF,aAAejF,EAAKiF,aAAa5D,KAAlBnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KAPPA,mFAWVE,KAAKH,MAAMvJ,KAAKmD,iBAClBuG,KAAKH,MAAMtH,QAAQnD,KAAK,uDAIAgQ,GACtBA,EAAU9O,KAAKmD,iBACjBuG,KAAKH,MAAMtH,QAAQnD,KAAK,+CAIRiL,GACjBL,KAAKO,SAALvL,OAAA8J,EAAA,EAAA9J,CAAA,GACEqL,EAAE2E,OAAO5L,KAAOiH,EAAE2E,OAAOpN,6CAIfyI,GACZA,EAAEC,iBACF,IAAM/J,EAAO,CACZsC,MAASmH,KAAK/E,MAAMpC,MACpB+L,SAAY5E,KAAK/E,MAAM2J,UAExB5E,KAAKH,MAAMwG,UAAU9P,EAAMyJ,KAAKH,MAAMtH,0CAItC,OACCqI,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,KACCzE,EAAApF,EAAAqF,cAAA,mBACAD,EAAApF,EAAAqF,cAACyE,GAAD,CAAe7B,SAAWzD,KAAK+E,cAC9BnE,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAAC4E,GAAA,EAAD,CAAOC,IAAI,SAAX,iBACA9E,EAAApF,EAAAqF,cAAC8E,GAAA,EAAD,CACCpR,KAAK,QACL6E,KAAK,QACLkC,GAAG,QACHsK,UAAU,EACVC,SAAW7F,KAAK8E,kBAChBlN,MAAQoI,KAAK/E,MAAMpC,MACnB6I,YAAY,8BAEbd,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,wBAIlBF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAAC4E,GAAA,EAAD,CAAOC,IAAI,YAAX,YACA9E,EAAApF,EAAAqF,cAAC8E,GAAA,EAAD,CACCpR,KAAK,WACL6E,KAAK,WACLwM,UAAU,EACVtK,GAAG,WACH1D,MAAQoI,KAAK/E,MAAM2J,SACnBlD,YAAY,WACZmE,SAAW7F,KAAK8E,oBAEjBlE,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,wBAIlBF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,UAAQtM,KAAK,SAASuM,UAAU,mBAAhC,WAKEF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACH3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACExF,KAAKH,MAAM/K,OAAOwR,gBAAkB1F,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,oBAAoBmF,MAAO,CAAEC,QAAW,UAAYlG,KAAKH,MAAM/K,OAAOwR,mBAI7H1F,EAAApF,EAAAqF,cAACE,GAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,mBAA9B,4BA1FgBW,aA2GJC,eALQ,SAAC3G,GAAD,MAAY,CACnC3E,KAAQ2E,EAAM3E,KACdxB,OAAUmG,EAAMnG,SAGwB,CAAEuR,UXrDlB,SAAC9P,EAAMgC,GAAP,OAAmB,SAAAL,GAC3CA,EAASzD,KAET,IAAIyE,EAAY,IAAIC,SAGpB,IAAI,IAAIC,KAAQ7C,EACf2C,EAASG,OAAOD,EAAM7C,EAAK6C,IAG5B,OAAO5D,EAAS,CACfE,IAAO,2BACPC,KAAQuD,EACRrD,OAAU,OACVE,SAAW,IACTY,KAAK,SAAAC,GAEJ,OADD2B,EAAQnD,KAAK,KACL8C,EAASD,EAAerB,EAASzB,QACzCwB,KAAK,WAEP,OAAOP,GAAM8B,SAASQ,OACpBxB,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEiS,eAAkB,4EW+BhC1E,CAAwCwE,IC1EzCG,GAlCK,SAAA1G,GACnB,IAAIvE,EAAE,UAAAnF,OAAW0J,EAAMvC,KAAKhC,IACxB1D,EAAQiI,EAAMvC,KAAKM,UAAY,SAAW,UAE9C,OACCgD,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,CAAKgB,GAAG,IAAIC,GAAG,IAAI3F,UAAU,kBAC5BF,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,eACdF,EAAApF,EAAAqF,cAAA,WAAMhB,EAAMvC,KAAKc,QAElBwC,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,aAAajB,EAAMvC,KAAKoJ,aACvC9F,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,eACdF,EAAApF,EAAAqF,cAAA,8CACCD,EAAApF,EAAAqF,cAAA,UAAQC,UAAU,eAAelJ,MAAOA,EAAOiO,SAWnD,SAA0BxF,GAEzB,IAAMzI,EAA2B,WAAnByI,EAAE2E,OAAOpN,MACvBiI,EAAM8G,iBAAiB,CAAErL,GAAMuE,EAAMvC,KAAKhC,GAAIsC,UAAahG,KAdmB0D,GAAIA,GAC7ExB,EAAqBzE,IAAI,SAAAuI,GAAS,OAClCgD,EAAApF,EAAAqF,cAAA,UAAQ1L,IAAKyI,EAAWhG,MAAOgG,GAAYA,QAK/CgD,EAAApF,EAAAqF,cAAA,UAAQC,UAAU,iBAAiBG,QAUrC,SAAsBZ,GACrBR,EAAM+G,aAAa/G,EAAMvC,KAAKhC,MAX7B,YCMYuL,GAzBG,SAAAhH,GACjB,IAAMiH,EAAQjN,EAAsBkN,QAA4B,SAApBlH,EAAMjC,WAC5CoJ,EAAalN,EAAqBgN,GAExC,OACClG,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,CAAWvE,UAAU,cACpBF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAA,MAAIC,UAAU,oBACbF,EAAApF,EAAAqF,cAAA,cAASmG,KAGXpG,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACE1F,EAAMzE,MAAM/F,IAAI,SAAAiI,GAAI,OACpBsD,EAAApF,EAAAqF,cAACoG,GAAD,CACC9R,IAAKmI,EAAKhC,GACVgC,KAAMA,EACNqJ,iBAAkB9G,EAAM8G,iBACxBC,aAAc/G,EAAM+G,oBClBpBM,uBACL,SAAAA,EAAYrH,GAAO,IAAAC,EAAA,OAAA9K,OAAA+K,EAAA,EAAA/K,CAAAgL,KAAAkH,IAClBpH,EAAA9K,OAAAiL,EAAA,EAAAjL,CAAAgL,KAAAhL,OAAAkL,EAAA,EAAAlL,CAAAkS,GAAA/G,KAAAH,KAAMH,KAYPsH,SAAW,SAAA9G,GACVP,EAAKD,MAAMsH,SAAS9G,EAAE2E,OAAOpN,QAdXkI,EAyCnB8G,aAAe,SAACtL,GACfwE,EAAKD,MAAM+G,aAAatL,IA1CNwE,EA6CnBsH,UAAY,WACXtH,EAAKD,MAAMtH,QAAQnD,KAAK,gBA3CxB0K,EAAK7E,MAAQ,GAHK6E,kFAMAuH,8CA2CD,IAAAC,EACiCtH,KAAKH,MAA/CzE,EADSkM,EACTlM,MAAOuL,EADEW,EACFX,iBAAkBC,EADhBU,EACgBV,aAEjC,OAAO5R,OAAOC,KAAKmG,GAAO/F,IAAI,SAACuI,EAAWkJ,GACzC,IAAMS,EAAkBnM,EAAMwC,GAE9B,OACCgD,EAAApF,EAAAqF,cAAA,OAAK1L,IAAK2R,GACPS,EAAgBzP,OAAS,GAC1B8I,EAAApF,EAAAqF,cAAC2G,GAAD,CACCpM,MAAOmM,EACPZ,iBAAkBA,EAClBC,aAAcA,EACdhJ,UAAWA,EACXzI,IAAKyI,wCASV,OAAIoC,KAAKH,MAAM9E,UAEb6F,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,iBAAf,cAMDF,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,KACCzE,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,CAAKgB,GAAG,KACP5F,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,qBACdF,EAAApF,EAAAqF,cAAA,SAAOC,UAAU,eAChB+E,SAAU7F,KAAKmH,SACf5S,KAAK,OACLmN,YAAY,cAEZ1B,KAAKH,MAAMnG,eACXkH,EAAApF,EAAAqF,cAAA,UACCC,UAAU,kBACVG,QAASjB,KAAKoH,WAFf,kBASLxG,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,SACbd,KAAKyH,2BAtGa9F,cA6GTE,gBAAWqF,IC3FXQ,GArBF,SAAA7H,GACZ,OACCe,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,CAAKgB,GAAG,IAAIC,GAAG,IAAI3F,UAAU,kBAC5BF,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,eACdF,EAAApF,EAAAqF,cAAA,cAAA1K,OAAS0J,EAAMvK,KAAKoG,MAApB,MAAAvF,OAA8B0J,EAAMvK,KAAK8I,SAE1CwC,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,aACdF,EAAApF,EAAAqF,cAAA,WAAMhB,EAAMvK,KAAKoR,cAElB9F,EAAApF,EAAAqF,cAAA,UAAQC,UAAU,iBAAiBG,QAIrC,SAAsBZ,GACrBR,EAAM8H,aAAa,CAClBnN,OAAUqF,EAAMvK,KAAKgG,GACrBb,OAAUoF,EAAMvC,SAPhB,YCYYsK,GAtBG,SAAA/H,GACjB,OACCe,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,CAAWvE,UAAU,cACpBF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAA,MAAIC,UAAU,oBACbF,EAAApF,EAAAqF,cAAA,oCAGFD,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACE1F,EAAMxE,MAAMhG,IAAI,SAAAC,GAAI,OACpBsL,EAAApF,EAAAqF,cAACgH,GAAD,CACC1S,IAAKG,EAAKgG,GACVhG,KAAMA,EACNqS,aAAc9H,EAAM8H,aACpBrK,KAAMuC,EAAMvC,YCqGHwK,uBAhHd,SAAAA,EAAYjI,GAAO,IAAAC,EAAA,OAAA9K,OAAA+K,EAAA,EAAA/K,CAAAgL,KAAA8H,IAClBhI,EAAA9K,OAAAiL,EAAA,EAAAjL,CAAAgL,KAAAhL,OAAAkL,EAAA,EAAAlL,CAAA8S,GAAA3H,KAAAH,KAAMH,KASPkI,cAAgB,SAAC1H,GAChBP,EAAKS,SAAS,CAAEnC,MAASiC,EAAE2E,OAAOpN,SAXhBkI,EAcnBkI,oBAAsB,SAAC3H,GACtBP,EAAKS,SAAS,CAAEmG,YAAerG,EAAE2E,OAAOpN,SAftBkI,EA0BnBmI,aAAe,SAAC5H,GACfA,EAAEC,iBAGF,IAEI5E,EAFEwM,EAASpI,EAAKD,MAAMxE,MAAMhG,IAAI,SAACC,GAAD,OAAU6S,SAAS7S,EAAKoG,SAC5DwM,EAAO3M,KAAK,SAASC,EAAGC,GAAG,OAAOD,EAAIC,IAGtC,IAAK,IAAIsH,EAAE,EAAGA,GAAGhJ,EAAmBgJ,IACnC,IAA2B,IAAvBmF,EAAOnB,QAAQhE,GAAW,CAC7BrH,EAAQqH,EACR,MAIGrH,IAILoE,EAAKD,MAAMoI,aAAa,CACvB7J,MAAS0B,EAAK7E,MAAMmD,MACpBsI,YAAe5G,EAAK7E,MAAMyL,YAC1BpJ,KAAQwC,EAAKD,MAAM3E,cACnBQ,UAEDoE,EAAKsI,cAnDatI,EAsDnBuI,WAAa,WACZvI,EAAKS,SAAS,CAAE+H,iBAAoBxI,EAAK7E,MAAMqN,mBApD/CxI,EAAK7E,MAAQ,CACZqN,iBAAmB,EACnBlK,MAAS,GACTsI,YAAe,IANE5G,2EAmBlBE,KAAKO,SAAS,CACbgI,iBAAmB,EACnBnK,MAAS,GACTsI,YAAe,+CAqChB,OACC9F,EAAApF,EAAAqF,cAAC2H,GAAD,CACCnN,MAAO2E,KAAKH,MAAMxE,MAClBsM,aAAc3H,KAAKH,MAAM8H,aACzBrK,KAAM0C,KAAKH,MAAM3E,iDAMnB,OACC0F,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,CAAWvE,UAAU,qBACpBF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAA,UACCC,UAAU,wBACVG,QAASjB,KAAKqI,YAFf,eAOArI,KAAK/E,MAAMqN,iBACX1H,EAAApF,EAAAqF,cAAA,QAAMC,UAAU,kBAAkB2C,SAAUzD,KAAKiI,cAChDrH,EAAApF,EAAAqF,cAAA,SACCC,UAAU,mBACV+E,SAAU7F,KAAK+H,cACfnQ,MAAOoI,KAAK/E,MAAMmD,MAClB7J,KAAK,OACLmN,YAAY,UAEbd,EAAApF,EAAAqF,cAAA,SACCC,UAAU,mBACV+E,SAAU7F,KAAKgI,oBACfpQ,MAAOoI,KAAK/E,MAAMyL,YAClBnS,KAAK,OACLmN,YAAY,gBAEbd,EAAApF,EAAAqF,cAAA,UACCC,UAAU,SACVvM,KAAK,UAFN,UAUFyL,KAAKyI,0BA3Gc9G,cCDH+G,oLACX,IAAA5I,EAAAE,KACF2I,EAAc3T,OAAOC,KAAK+K,KAAKH,MAAMzE,OAAO/F,IAAI,SAAAuI,GAWrD,OAVwBkC,EAAKD,MAAMzE,MAAMwC,GACTvI,IAAI,SAAAiI,GACnC,IAAMwJ,EAAQjN,EAAsBkN,QAAsB,SAAdnJ,GAC5C,OACCgD,EAAApF,EAAAqF,cAAA,UAAQ1L,IAAKmI,EAAKhC,GAAI1D,MAAO0F,EAAKhC,IAChCgC,EAAKc,MADP,KACgBtE,EAAqBgN,GADrC,SAUG5L,EAAgB8E,KAAKH,MAAM3E,eAAiB,GAGlD,OACC0F,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,UACbd,KAAKH,MAAMzE,OACXwF,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,eACdF,EAAApF,EAAAqF,cAAA,qBACCD,EAAApF,EAAAqF,cAAA,UAAQgF,SAAU7F,KAAKH,MAAM+I,oBAAqB9H,UAAU,yBAAyBlJ,MAAOsD,GAC1FyN,aA1B+BhH,aCDzB,SAASkH,GAATpT,GAAkD,IAA1B6B,EAA0B7B,EAA1B6B,QAAS/C,EAAiBkB,EAAjBlB,KAAM0M,EAAWxL,EAAXwL,QACrD,OACCL,EAAApF,EAAAqF,cAAA,OAAKC,UAAS,eAAA3K,OAAiB5B,IAC9BqM,EAAApF,EAAAqF,cAAA,YAAOvJ,GACPsJ,EAAApF,EAAAqF,cAAA,UAAQtM,KAAK,SAASuM,UAAU,QAAQW,aAAW,QAAQR,QAASA,GAClEL,EAAApF,EAAAqF,cAAA,QAAMiI,cAAY,QAAlB,cCWCC,8MAYLH,oBAAsB,SAAAvI,GACrBP,EAAKD,MAAM3H,SAASkD,GAAuBiF,EAAE2E,OAAOpN,WAGrDuP,SAAW,SAAAjJ,GACV4B,EAAKD,MAAM3H,SjBwGN,SAAqBgG,GAC3B,MAAO,CACN3J,KAAQyH,GACRxH,QAAW,CAAE0J,eiB3GO9C,CAAkB8C,OAGvC8K,aAAe,SAAAvT,GAA4B,IAAzB2I,EAAyB3I,EAAzB2I,MAAOsI,EAAkBjR,EAAlBiR,YACxB5G,EAAKD,MAAM3H,SAASkD,GAAiB,CAAEgD,QAAOsI,oBAG/CC,iBAAmB,SAAAjM,GAAuB,IAApBY,EAAoBZ,EAApBY,GAAIsC,EAAgBlD,EAAhBkD,UACzBkC,EAAKD,MAAM3H,SAASkD,GAAsB,CAAEE,KAAIsC,kBAGjDgJ,aAAe,SAACtL,GACfwE,EAAKD,MAAM3H,SAASkD,GAAiBE,OAGtC2M,aAAe,SAAC3S,GACfwK,EAAKD,MAAM3H,SAASmD,EAAiB/F,OAGtCqS,aAAe,SAACrS,GACfwK,EAAKD,MAAM3H,SAASmD,EAAiB/F,OAGtC2T,oBAAsB,WACrBnJ,EAAKD,MAAM3H,SAASzD,yFAvCpBuL,KAAKH,MAAM3H,SAASkD,iDAGFiM,GAEfA,EAAU/Q,KAAKC,KAAKC,QAAUwJ,KAAKH,MAAMvJ,KAAKC,KAAKC,OACrDwJ,KAAKH,MAAM3H,SAASkD,uCAqCrB,OACCwF,EAAApF,EAAAqF,cAAA,YACGlJ,EAAQqI,KAAKH,MAAM/K,SAAY8L,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,KAChCzE,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAACgI,GAAD,CACCvR,QAASzC,EAAoBmL,KAAKH,MAAM/K,QACxCP,KAAK,QACL0M,QAASjB,KAAKiJ,yBAKlBrI,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,KACCzE,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAACqI,GAAD,CACC9N,MAAO4E,KAAKH,MAAMzE,MAClBwN,oBAAqB5I,KAAK4I,oBAC1B1N,cAAe8E,KAAKH,MAAM3E,mBAK9B0F,EAAApF,EAAAqF,cAACsI,GAAD,CACC/N,MAAO4E,KAAKH,MAAMzE,MAClB1B,cAAesG,KAAKH,MAAMvJ,KAAKoD,cAC/ByN,SAAUnH,KAAKmH,SACf6B,aAAchJ,KAAKgJ,aACnBrC,iBAAkB3G,KAAK2G,iBACvBC,aAAc5G,KAAK4G,aACnB7L,UAAWiF,KAAKH,MAAM9E,YAEtBiF,KAAKH,MAAM3E,eACX0F,EAAApF,EAAAqF,cAACuI,GAAD,CACC/N,MAAO2E,KAAKH,MAAMxE,MAClB4M,aAAcjI,KAAKiI,aACnB/M,cAAe8E,KAAKH,MAAM3E,cAC1ByM,aAAc3H,KAAK2H,uBAnFNhG,aA6GJC,eATS,SAAC3G,GAAD,MAAY,CACnC3E,KAAQ2E,EAAM3E,KACdxB,OAAUmG,EAAMnG,OAChBiG,UAAaE,EAAMG,MAAML,UACzBK,MAASmD,GAA2BtD,GACpCI,MAASL,EAAiBC,GAC1BC,cAAiBD,EAAME,KAAKD,gBAGd0G,CAAyBmH,ICzHlCM,eACL,SAAAA,IAAc,IAAAvJ,EAAA,OAAA9K,OAAA+K,EAAA,EAAA/K,CAAAgL,KAAAqJ,IACbvJ,EAAA9K,OAAAiL,EAAA,EAAAjL,CAAAgL,KAAAhL,OAAAkL,EAAA,EAAAlL,CAAAqU,GAAAlJ,KAAAH,QACK/E,MAAQ,CACZmD,MAAS,GACTsI,YAAe,IAEhB5G,EAAKgF,kBAAoBhF,EAAKgF,kBAAkB3D,KAAvBnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KACzBA,EAAKiF,aAAejF,EAAKiF,aAAa5D,KAAlBnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KACpBA,EAAKwJ,OAASxJ,EAAKwJ,OAAOnI,KAAZnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KARDA,iFAWIO,GACjBL,KAAKO,SAALvL,OAAA8J,EAAA,EAAA9J,CAAA,GACEqL,EAAE2E,OAAO5L,KAAOiH,EAAE2E,OAAOpN,uCAIrByI,GACNL,KAAKH,MAAMtH,QAAQnD,KAAK,0CAGZiL,GACZA,EAAEC,iBACFN,KAAKH,MAAMxC,WAAW,CACrBe,MAAS4B,KAAK/E,MAAMmD,MACpBsI,YAAe1G,KAAK/E,MAAMyL,aACxB1G,KAAKH,MAAMtH,iGAQI8O,GAEdrH,KAAKH,MAAMvJ,KAAKoD,eACnBsG,KAAKH,MAAMtH,QAAQnD,KAAK,sCAOzB,OACCwL,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,KACCzE,EAAApF,EAAAqF,cAAA,+BACAD,EAAApF,EAAAqF,cAACyE,GAAD,CAAe7B,SAAWzD,KAAK+E,cAC9BnE,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAAC4E,GAAA,EAAD,CAAOC,IAAI,SAAX,SACA9E,EAAApF,EAAAqF,cAAC8E,GAAA,EAAD,CACCpR,KAAK,OACL6E,KAAK,QACLwM,UAAU,EACVtK,GAAG,QACHuK,SAAW7F,KAAK8E,kBAChBlN,MAAQoI,KAAK/E,MAAMmD,MACnBsD,YAAY,yBAEbd,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,qBACfF,EAAApF,EAAAqF,cAAA,SAAOC,UAAU,wBAChBF,EAAApF,EAAAqF,cAAA,kCAKJD,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAAC4E,GAAA,EAAD,CAAOC,IAAI,YAAX,eACA9E,EAAApF,EAAAqF,cAAC8E,GAAA,EAAD,CACCpR,KAAK,OACL6E,KAAK,cACLkC,GAAG,cACHuK,SAAW7F,KAAK8E,kBAChBlN,MAAQoI,KAAK/E,MAAMyL,YACnBhF,YAAY,+BAEbd,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,wBAIlBF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,UAAQtM,KAAK,SAASuM,UAAU,oBAAmBG,QAASjB,KAAKsJ,QAAjE,UAGA1I,EAAApF,EAAAqF,cAAA,UAAQtM,KAAK,SAASuM,UAAU,mBAAhC,eAKEF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACH3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACExF,KAAKH,MAAM/K,OAAOsG,OAASwF,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,oBAAoBmF,MAAO,CAAEC,QAAW,UAAYlG,KAAKH,MAAM/K,OAAOsG,kBAjG/FuG,aAqHVC,eALS,SAAA3G,GAAK,MAAK,CACjC3E,KAAQ2E,EAAM3E,KACdxB,OAAUmG,EAAMnG,SAGsB,CAAEuI,eAA1BuE,CAAwCC,aAAWwH,KCrH5DE,eACL,SAAAA,EAAY1J,GAAO,IAAAC,EAAA,OAAA9K,OAAA+K,EAAA,EAAA/K,CAAAgL,KAAAuJ,IAClBzJ,EAAA9K,OAAAiL,EAAA,EAAAjL,CAAAgL,KAAAhL,OAAAkL,EAAA,EAAAlL,CAAAuU,GAAApJ,KAAAH,QACK/E,MAAQ,CACZnC,KAAQ+G,EAAMxB,MAAMmL,OAAO1Q,MAG5BqE,QAAQC,IAAI,SAAUyC,EAAMxB,MAAMmL,OAAO1Q,MANvBgH,mFAUlBE,KAAKH,MAAM3H,SAASkD,GAAsB4E,KAAK/E,MAAMnC,wCAMrD,OACC8H,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,KACCzE,EAAApF,EAAAqF,cAAA,yBAAiBb,KAAKH,MAAMxB,MAAMmL,OAAO1Q,cAnBnB6I,aAoCXC,eALS,SAAA3G,GAAK,MAAK,CACjC3E,KAAQ2E,EAAM3E,KACdxB,OAAUmG,EAAMnG,SAGF8M,CAAyBC,aAAW0H,KCnC7CE,eACL,SAAAA,IAAc,IAAA3J,EAAA,OAAA9K,OAAA+K,EAAA,EAAA/K,CAAAgL,KAAAyJ,IACb3J,EAAA9K,OAAAiL,EAAA,EAAAjL,CAAAgL,KAAAhL,OAAAkL,EAAA,EAAAlL,CAAAyU,GAAAtJ,KAAAH,QACK/E,MAAQ,CACZnG,OAAU,IAHEgL,yFAOYsF,GACrBA,EAAU9O,KAAKmD,iBAClBuG,KAAKH,MAAMtH,QAAQnD,KAAK,iDAKrB4K,KAAKH,MAAMvJ,KAAKmD,iBACnBuG,KAAKH,MAAMtH,QAAQnD,KAAK,sCAKzB,OACCwL,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,KACCzE,EAAApF,EAAAqF,cAAA,gCACAD,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAACE,GAAA,EAAD,CAAMC,GAAG,kBAAkBF,UAAU,YAArC,6BA1BgBa,aA4CNC,eALQ,SAAC3G,GAAD,MAAY,CACnC3E,KAAQ2E,EAAM3E,KACdxB,OAAUmG,EAAMnG,SAGD8M,CAA0B6H,ICvCpCC,eACL,SAAAA,IAAc,IAAA5J,EAAA,OAAA9K,OAAA+K,EAAA,EAAA/K,CAAAgL,KAAA0J,IACb5J,EAAA9K,OAAAiL,EAAA,EAAAjL,CAAAgL,KAAAhL,OAAAkL,EAAA,EAAAlL,CAAA0U,GAAAvJ,KAAAH,QA4BDiJ,oBAAsB,WACrBnJ,EAAKD,MAAM3H,SAASzD,MA5BpBqL,EAAK7E,MAAQ,CACZpC,MAAS,GACT/D,OAAU,IAEXgL,EAAKgF,kBAAoBhF,EAAKgF,kBAAkB3D,KAAvBnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KACzBA,EAAKiF,aAAejF,EAAKiF,aAAa5D,KAAlBnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KAPPA,yFAUYsF,GACtBA,EAAU9O,KAAKmD,iBACjBuG,KAAKH,MAAMtH,QAAQnD,KAAK,iDAKtB4K,KAAKH,MAAMvJ,KAAKmD,iBAClBuG,KAAKH,MAAMtH,QAAQnD,KAAK,KAEzB4K,KAAKH,MAAM3H,SxBoHL,CACN3D,KArI4C,6EwBmB3B8L,GACjBL,KAAKO,SAALvL,OAAA8J,EAAA,EAAA9J,CAAA,GACEqL,EAAE2E,OAAO5L,KAAOiH,EAAE2E,OAAOpN,6CAQfyI,GACZA,EAAEC,iBACF,IAAM/J,EAAO,CACZsC,MAASmH,KAAK/E,MAAMpC,OAErBmH,KAAKH,MAAM3H,SAAS5B,EAAoBC,qCAIxC,OACCqK,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,MACG1N,EAAQqI,KAAKH,MAAM/K,SACrB8L,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAACgI,GAAD,CACCvR,QAASzC,EAAoBmL,KAAKH,MAAM/K,QACxCP,KAAK,QACL0M,QAASjB,KAAKiJ,wBAIjBrI,EAAApF,EAAAqF,cAAA,mCACAD,EAAApF,EAAAqF,cAAA,oFACAD,EAAApF,EAAAqF,cAACyE,GAAD,CAAe7B,SAAWzD,KAAK+E,cAC9BnE,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAAC4E,GAAA,EAAD,CAAOC,IAAI,SAAX,iBACA9E,EAAApF,EAAAqF,cAAC8E,GAAA,EAAD,CACCpR,KAAK,QACL6E,KAAK,QACLwM,UAAU,EACVtK,GAAG,QACHuK,SAAW7F,KAAK8E,kBAChBlN,MAAQoI,KAAK/E,MAAMpC,MACnB6I,YAAY,6BAEbd,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,wBAIlBF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,UAAQtM,KAAK,SAASuM,UAAU,mBAAhC,oCAKFF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACExF,KAAKH,MAAM/K,OAAO+D,OAAS+H,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,mBAAmBmF,MAAO,CAAEC,QAAW,UAAYlG,KAAKH,MAAM/K,OAAO+D,UAIlHmH,KAAKH,MAAMvJ,KAAKqD,yBAA4BiH,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,kBAAf,kBAAgDd,KAAK/E,MAAMpC,MAA3D,iJAxFpB8I,aA4GdC,eAPS,SAAC3G,GAAD,MAAY,CACnC3E,KAAQ2E,EAAM3E,KACdxB,OAAUmG,EAAMnG,OAChBmE,eAAkB3C,EAClB0C,2BAA8B1C,IAGhBsL,CAAyB8H,IClHlCC,eACL,SAAAA,IAAc,IAAA7J,EAAA,OAAA9K,OAAA+K,EAAA,EAAA/K,CAAAgL,KAAA2J,IACb7J,EAAA9K,OAAAiL,EAAA,EAAAjL,CAAAgL,KAAAhL,OAAAkL,EAAA,EAAAlL,CAAA2U,GAAAxJ,KAAAH,QACK/E,MAAQ,CACZ2O,aAAgB,GAChBC,aAAgB,GAChBC,qBAAwB,IAEzBhK,EAAKgF,kBAAoBhF,EAAKgF,kBAAkB3D,KAAvBnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KACzBA,EAAKiF,aAAejF,EAAKiF,aAAa5D,KAAlBnM,OAAA4N,GAAA,EAAA5N,QAAA4N,GAAA,EAAA5N,CAAA8K,KARPA,iFAWIO,GACjBL,KAAKO,SAALvL,OAAA8J,EAAA,EAAA9J,CAAA,GACEqL,EAAE2E,OAAO5L,KAAOiH,EAAE2E,OAAOpN,6CAIfyI,GACZA,EAAEC,iBACFnD,QAAQC,IAAI,yBACZ,IAAMzH,EAAO,CACZiU,aAAgB5J,KAAK/E,MAAM2O,aAC3BG,cAAiB/J,KAAK/E,MAAM4O,aAC5BG,cAAiBhK,KAAK/E,MAAM6O,sBAG7B9J,KAAKH,MAAMoK,eAAetU,EAAMqK,KAAKH,MAAMtH,2DAGlB6M,GACrBA,EAAU9O,KAAKmD,iBAClBuG,KAAKH,MAAMtH,QAAQnD,KAAK,iDAUrB4K,KAAKH,MAAMvJ,KAAKmD,iBACnBuG,KAAKH,MAAMtH,QAAQnD,KAAK,sCAOzB,OACCwL,EAAApF,EAAAqF,cAACwE,GAAA,EAAD,KACCzE,EAAApF,EAAAqF,cAAA,kCACAD,EAAApF,EAAAqF,cAACyE,GAAD,CAAe7B,SAAWzD,KAAK+E,aAAepB,gBAAkB,CAC/DE,OAAU,eACVE,OAAU,uBACVzM,QAAW,6BAEXsJ,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAAC4E,GAAA,EAAD,CAAOC,IAAI,gBAAX,gBACA9E,EAAApF,EAAAqF,cAAC8E,GAAA,EAAD,CACCpR,KAAK,WACL6E,KAAK,eACLkC,GAAG,eACHsK,UAAU,EACVE,UAAW,EACXC,QAAQ,aACRnO,MAAQoI,KAAK/E,MAAM2O,aACnBlI,YAAY,0BACZmE,SAAW7F,KAAK8E,oBAEjBlE,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,wBAIlBF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAAC4E,GAAA,EAAD,CAAOC,IAAI,gBAAX,gBACA9E,EAAApF,EAAAqF,cAAC8E,GAAA,EAAD,CACCpR,KAAK,WACL6E,KAAK,eACLkC,GAAG,eACHsK,UAAU,EACVE,UAAW,EACXC,QAAQ,aACRnO,MAAQoI,KAAK/E,MAAM4O,aACnBnI,YAAY,sBACZmE,SAAW7F,KAAK8E,oBAEjBlE,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,wBAIlBF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,cACdF,EAAApF,EAAAqF,cAAC4E,GAAA,EAAD,CAAOC,IAAI,wBAAX,6BACA9E,EAAApF,EAAAqF,cAAC8E,GAAA,EAAD,CACCpR,KAAK,WACL6E,KAAK,uBACLkC,GAAG,uBACHsK,UAAU,EACVE,UAAW,EACXC,QAAQ,aACRnO,MAAQoI,KAAK/E,MAAM6O,qBACnBpI,YAAY,wBACZmE,SAAW7F,KAAK8E,oBAEjBlE,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,qBACfF,EAAApF,EAAAqF,cAAA,SAAOC,UAAU,wBAAuBF,EAAApF,EAAAqF,cAAA,UACvCD,EAAApF,EAAAqF,cAAA,oFACAD,EAAApF,EAAAqF,cAAA,+DACAD,EAAApF,EAAAqF,cAAA,8DACAD,EAAApF,EAAAqF,cAAA,2DAKJD,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACC3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACC5E,EAAApF,EAAAqF,cAAA,UAAQtM,KAAK,SAASuM,UAAU,mBAAhC,yBAKEF,EAAApF,EAAAqF,cAAC0E,GAAA,EAAD,KACH3E,EAAApF,EAAAqF,cAAC2E,GAAA,EAAD,KACExF,KAAKH,MAAM/K,OAAOmV,gBAAkBrJ,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,mBAAmBmF,MAAO,CAAEC,QAAW,UAAYlG,KAAKH,MAAM/K,OAAOmV,mBAIxHjK,KAAKH,MAAMvJ,KAAKkD,wBAA2BoH,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,kBAAf,4CAtItBa,aAwJdC,eALS,SAAA3G,GAAK,MAAK,CACjC3E,KAAQ2E,EAAM3E,KACdxB,OAAUmG,EAAMnG,SAGsB,CAAEmV,ezBkCX,SAACtU,GAAD,OAAU,SAACuC,GACxCA,EAASzD,KACTyD,EAASqB,KAET,IAAIL,EAAY,IAAIC,SAGpB,IAAI,IAAIC,KAAQzD,EACfuD,EAASG,OAAOD,EAAMzD,EAAKyD,IAG5B,OAAO5D,EAAS,CACfE,IAAO,qCACPC,KAAQuD,EACRrD,OAAU,OACVE,SAAW,IACTY,KAAK,SAAAC,GAEJ,OADFsB,EAASsB,KACA5C,IACRM,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAE4V,eAAkB3V,EAAMgD,eyBtDGiC,sBAA1CqI,CAAgEC,aAAW8H,mBCxI1F,G1BDQxR,aAAa+R,QAAQ,Y0BCV,CAClB9T,GAAM8B,SAASD,EAAeE,aAAagS,WAC3C/T,GAAM8B,SAASQ,KAEf,IAAM0R,GAAcC,KAAKC,MAAQ,IAC9BnS,aAAagS,SAASI,IAAMH,IAC9BhU,GAAM8B,SAASI,SA6BFkS,oLAvBb,OACC5J,EAAApF,EAAAqF,cAAC4J,EAAA,EAAD,CAAUrU,MAAUA,IACnBwK,EAAApF,EAAAqF,cAAC6J,EAAA,EAAD,KACC9J,EAAApF,EAAAqF,cAAA,WACCD,EAAApF,EAAAqF,cAAC8J,GAAD,MACA/J,EAAApF,EAAAqF,cAAA,OAAKC,UAAU,aACdF,EAAApF,EAAAqF,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYhC,KAClCnI,EAAApF,EAAAqF,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAY1B,KAC5CzI,EAAApF,EAAAqF,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAYxB,KAC5C3I,EAAApF,EAAAqF,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAYpG,KAC1C/D,EAAApF,EAAAqF,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAY5E,KACzCvF,EAAApF,EAAAqF,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAY3E,KACvCxF,EAAApF,EAAAqF,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAYrB,KAChD9I,EAAApF,EAAAqF,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAYtB,KACzC7I,EAAApF,EAAAqF,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAYpB,gBAhBrChI,aCtBEqJ,QACW,cAA7BtL,OAAOuL,SAASC,UAEe,UAA7BxL,OAAOuL,SAASC,UAEhBxL,OAAOuL,SAASC,SAAS7M,MACvB,2DA+GA,kBAAmB8M,WACrBA,UAAUC,cAAcC,MAAM1U,KAAK,SAAAqP,GACjCA,EAAasF,eCrHlB5I,IAAS6I,OACR3K,EAAApF,EAAAqF,cAAC2K,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.8d8145dd.chunk.js","sourcesContent":["// errorReducer.js\n\nconst GET_ERRORS = 'GET_ERRORS';\nconst CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const getErrors = error => {\n\t// error is an object, e.g. { 'registration': error.message }\n\treturn {\n\t\t'type': GET_ERRORS,\n\t\t'payload': error,\n\t};\n};\n\nexport const clearErrors = () => {\n\treturn {\n\t\t'type': CLEAR_ERRORS,\n\t};\n};\n\nvar updeep = require('updeep');\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\t// ensure we have an array of strings to allow multiple errors to be displayed\n\t\t\tlet errors = {};\n\n\t\t\tObject.keys(action.payload).forEach((key) => {\n\t\t\t\tif (typeof action.payload[key] === 'string') {\n\t\t\t\t\t// a string is simply copied\n\t\t\t\t\terrors[key] = [action.payload[key]];\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = [...action.payload[key]];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn updeep(errors, {}); // clear any existing errors\n\t\t}\n\n\t\tcase CLEAR_ERRORS: {\n\t\t\treturn {};\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// join arrays of error messages from different errors, into a single string.\n// it is expected that there will only ever be one type of error, e.g. 'register', but the object is parsed to be on the safe side.\n/*\n{ {'register': [\n\t\t'email already in use',\n\t\t'username already in use'\n\t\t]},\n\t{'login': [\n\t\t'could not log in'\n\t]\n}\n*/\n\nexport default function (errors) {\n\tlet messageArray = [];\n\tObject.keys(errors).forEach((key) => {\n\t\tif (typeof errors[key] === 'string') {\n\t\t\tmessageArray.push(errors[key]); // plain string error\n\t\t} else { // arary of errors\n\t\t\terrors[key].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\tmessageArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst message = messageArray.join(' ');\n\n\treturn message;\n};\n","// uses fetch to get or post data.\n// passes up useful errors to the calling function.\n// set useAuth to true for validating logged-in user: token will be sent in header\nimport store from '../store';\nimport formatErrorMessages from '../modules/formatErrorMessages';\n\nexport default function fetchAPI({ url, data, method = 'GET', useAuth = false, headers = {} }) {\n\n\tif (useAuth) {\n\t\theaders.Authorization = `Token ${store.getState().auth.user.token}`;\n\t}\n\n\treturn fetch(url, { headers, 'method': method, 'body': data })\n\t\t.then(response => {\n\t\t\t// fetch returns ok true / false in most situations\n\t\t\t// true is a successful response\n\t\t\tif (response.ok) {\n\t\t\t\tconst contentType = response.headers.get('Content-Type') || '';\n\n\t\t\t\tif (contentType.includes('application/json')) {\n\t\t\t\t\treturn response.json().catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('Invalid JSON: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (contentType.includes('text/html')) {\n\t\t\t\t\treturn response.text().then(html => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'page_type': 'generic',\n\t\t\t\t\t\t\t'html': html\n\t\t\t\t\t\t};\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('HTML error: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// ok == false means some problem to display\n\t\t\t\t// even though no error was returned\n\t\t\t\tif (response.status === 404) {\n\t\t\t\t\treturn Promise.reject(new Error('Page not found: ' + url));\n\t\t\t\t}\n\n\t\t\t\tif (response.status === 500) {\n\t\t\t\t\treturn Promise.reject(new Error('Internal server error: ' + url));\n\t\t\t\t}\n\n\t\t\t\treturn response.json().then(response => {\n\t\t\t\t\t// the server rejected the request, e.g. because of a wrong password, we want to display the reason\n\t\t\t\t\t// the information is contained in the json()\n\t\t\t\t\t// there may be more than one error, so join them into a single string.\n\t\t\t\t\t// multiline display would be more elegant but this will do for now and makes all errors consistent (one message string)\n\n\t\t\t\t\treturn Promise.reject(new Error(formatErrorMessages(response))\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\t// fetch returned an error\n\t\t\treturn Promise.reject(new Error(error.message));\n\t\t});\n};\n","// check for a null, empty, undefined object\n\nconst isEmpty = (value) => {\n\treturn (\n\t\tvalue === undefined ||\n\t\tvalue === null ||\n\t\t(typeof value === 'object' && Object.keys(value).length === 0) ||\n\t\t(typeof value === 'string' && value.trim().length === 0)\n\t);\n};\n\nexport default isEmpty;\n","// authReducer.js\n\nimport store from '../store';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors, clearErrors } from '../modules/errors';\nimport isEmpty from '../modules/isEmpty';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\nexport const PASSWORD_NOT_CHANGED = 'PASSWORD_NOT_CHANGED';\nexport const CHANGE_PASSWORD_COMPLETE = 'CHANGE_PASSWORD_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\n\n// Side effects Services\nexport const getAuthToken = () => {\n\treturn localStorage.getItem('jwtToken');\n};\n\nfunction setAuthToken(token) {\n\tlocalStorage.setItem('jwtToken', token);\n}\n\nfunction removeAuthToken() {\n\tlocalStorage.removeItem('jwtToken');\n}\n\nexport const registerUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/registration/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t}).then(response => {\n\t  \thistory.push('/welcome');\n\t    return response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'registration': error.message }));\n\t});\n};\n\n// TODO rework auth as a saga with token refresh\n// https://github.com/redux-saga/redux-saga/issues/14\n// https://github.com/alvelig/redux-saga-auth\nexport const loginUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/login/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t  \thistory.push('/');\n\t    return dispatch(setCurrentUser(response.key));\n\t}).then(() => {\n\t\t// after store has been updated with token, we can query the server for current user info\n\t\treturn store.dispatch(getUserInfo());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'authentication': 'Unable to log in with the provided credentials, please try again.' }));\n\t});\n};\n\nexport const setCurrentUser = (token, dispatch) => {\n\tsetAuthToken(token);\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': { token },\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\tdispatch(clearErrors());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/logout/',\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t  \thistory.push('/');\n\t  \tremoveAuthToken();\n\t    return dispatch(logoutUserComplete());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'logout user': 'Unable to logout' }));\n\t});\n};\n\n///////////////////////////////\n// get user info\n// TODO rebuild as saga with login using state token\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\n// should get token from state. Currently it is passed in by referring function because state is not updated synchronously.\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = () => (dispatch) => {\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/user/',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t}).then(user => {\n\t  \treturn dispatch(setUserInfo({\n\t\t\t'username': user.username,\n\t\t\t'email': user.email,\n\t\t\t'slug': user.slug,\n\t\t}));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'get user info': 'Unable to get user info' }));\n\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t//'url': '/api/v1/rest-auth/password/reset1/',\n\t\t'url': '/api/v1/rest-auth/password/reset/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t   return dispatch(forgotPasswordEmailSent());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'request password reset email': `Unable to send a password reset email. It is likely that the email address ${email} is not associated with a registered user` }));\n\t\t// return dispatch(getErrors(error.response.data));\n\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n//////////////////////////////////\n// change password\nexport const changePassword = (data) => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(passwordNotChanged());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in data) {\n\t\tformData.append(name, data[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/change/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t  dispatch(changePasswordComplete());\n\t    return response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'changePassword': error.message }));\n\t});\n};\n\nexport const passwordNotChanged = token => {\n\treturn {\n\t\t'type': PASSWORD_NOT_CHANGED,\n\t};\n};\n\nexport const changePasswordComplete = (token) => {\n\treturn {\n\t\t'type': CHANGE_PASSWORD_COMPLETE,\n\t};\n};\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isAuthenticated': false,\n\t'canCreateList': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'changePasswordComplete': false,\n\t'user': {}\n};\n\nfunction canCreateList(token) {\n\t// for now, simply check whether the user is logged in\n\t// in future, further checks will be added e.g. email validated, number of lists exceeded?\n\treturn !isEmpty(token);\n}\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'canCreateList': canCreateList(action.payload.token),\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user info\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user info\n\t\t\treturn updeep({\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'slug': action.payload.slug,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'canCreateList': canCreateList(),\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase PASSWORD_NOT_CHANGED: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': false,\n\t\t\t\t'errors': {}\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CHANGE_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","export const LIST_IS_PUBLIC_VALUES = [false, true];\nexport const LIST_IS_PUBLIC_TEXTS = ['Private', 'Public'];\nexport const MAX_ITEMS_IN_LIST = 10;\n","import { RECEIVE_ENTITIES } from '../modules/lists';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const CREATE_ITEM_REQUESTED = 'CREATE_ITEM_REQUESTED';\nexport const CREATE_ITEM_SUCCEEDED = 'CREATE_ITEM_SUCCEEDED';\nexport const DELETE_ITEM_SUCCEEDED = 'DELETE_ITEM_SUCCEEDED';\n\nexport const createItem = item => dispatch => {\n\tdispatch(createItemRequested());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/items/',\n\t\t'data': JSON.stringify(item),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t    return dispatch(createItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create item': error.message }));\n\t});\n};\n\nexport function createItemRequested() {\n\treturn {\n\t\t'type': 'CREATE_ITEM_REQUESTED',\n\t};\n}\n\nexport function createItemSucceeded(item) {\n\treturn {\n\t\t'type': 'CREATE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titem\n\t\t}\n\t};\n}\n\nexport const deleteItem = ({ itemId, listId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'method': 'DELETE',\n\t}).then(response => {\n\t    return dispatch(deleteItemSucceeded({ itemId, listId }));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete item': error.message }));\n\t});\n};\n\nexport function deleteItemSucceeded({ itemId, listId }) {\n\treturn {\n\t\t'type': 'DELETE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titemId,\n\t\t\tlistId\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialItemsState = {\n\t'things': {},\n\t'isLoading': false,\n\t'error': null,\n};\n\nexport default function items(state = initialItemsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialItemsState, {});\n\t\t}\n\t\t\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tif (entities && entities.items) {\n\t\t\t\treturn updeep({ 'things': entities.items, 'isLoading': false }, state);\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\t\t\treturn updeep({ 'things': { [item.id]: item } }, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const getItemsByListId = state => {\n\tconst { currentListId } = state.page;\n\n\tif (!currentListId || !state.lists.things[currentListId]) {\n\t\treturn [];\n\t}\n\n\t// get the array of item ids for this list\n\tconst itemIds = state.lists.things[currentListId].items;\n\n\t// get the actual items and sort by order\n\tlet items = itemIds.map(id => state.items.things[id]).sort(function(a, b){return a.order - b.order;});\n\n\treturn items;\n};\n","import { createSelector } from 'reselect';\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport { normalize, schema } from 'normalizr';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tCREATE_ITEM_SUCCEEDED,\n\tDELETE_ITEM_SUCCEEDED\n} from './items';\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const RECEIVE_ENTITIES = 'RECEIVE_ENTITIES';\nexport const FETCH_LISTS_STARTED = 'FETCH_LISTS_STARTED';\nexport const FETCH_LISTS_FAILED = 'FETCH_LISTS_FAILED';\nexport const FETCH_LIST_BY_SLUG_STARTED = 'FETCH_LISTS_STARTED';\nexport const FETCH_LIST_BY_SLUG_FAILED = 'FETCH_LISTS_FAILED';\nexport const FILTER_LISTS = 'FILTER_LISTS';\nexport const CREATE_LIST_SUCCEEDED = 'CREATE_LIST_SUCCEEDED';\nexport const DELETE_LIST_SUCCEEDED = 'DELETE_LIST_SUCCEEDED';\nexport const SET_LIST_IS_PUBLIC_SUCCEEDED = 'SET_LIST_IS_PUBLIC_SUCCEEDED';\nexport const SET_CURRENT_LIST_ID = 'SET_CURRENT_LIST_ID';\n\nconst itemSchema = new schema.Entity('items');\nconst listSchema = new schema.Entity('lists', {\n\t'items': [itemSchema],\n});\n\nfunction receiveEntities(entities) {\n\treturn {\n\t\t'type': RECEIVE_ENTITIES,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchListsStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_LISTS_STARTED,\n\t};\n}\n\nfunction fetchListsFailed() {\n\treturn {\n\t\t'type': FETCH_LISTS_FAILED\n\t};\n}\n\nexport function fetchLists() {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListsStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return lists whatever lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': '/api/v1/content/lists/',\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\t\t\tlet defaultListId = null;\n\n\t\t\tif (normalizedData.result.length > 0) { // there is at least one list\n\t\t\t\tdefaultListId = response[0].id;\n\t\t\t}\n\n\t\t\tif (!getState().page.currentListId) { // preserve existing selection\n\t\t\t\t// TODO check that this list still exists\n\t\t\t\tdispatch(setCurrentListId(defaultListId));\n\t\t\t}\n\t\t\t\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListsFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////\n// fetch a single list by slug\nexport function fetchListBySlugStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_STARTED,\n\t};\n}\n\nfunction fetchListBySlugFailed() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_FAILED\n\t};\n}\n\nexport function fetchListBySlug(slug) {\n\tconsole.log('fetchListBySlug ', slug);\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListBySlugStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return lists whatever lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/list?slug=${slug}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\t\t\t//let defaultListId = null;\n\n\t\t\t/* if (normalizedData.result.length > 0) { // there is at least one list\n\t\t\t\tdefaultListId = response[0].id;\n\t\t\t} */\n\n\t\t\t/* if (!getState().page.currentListId) { // preserve existing selection\n\t\t\t\t// TODO check that this list still exists\n\t\t\t\tdispatch(setCurrentListId(defaultListId));\n\t\t\t} */\n\t\t\t\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListBySlugFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\nexport function filterLists(searchTerm) {\n\treturn { \n\t\t'type': FILTER_LISTS,\n\t\t'payload': { searchTerm },\n\t};\n}\n\nexport const createList = (list, history) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/lists/',\n\t\t'data': JSON.stringify(list),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\tdispatch(setCurrentListId(response.id));\n\t\tconsole.log('new list ', response);\n\t\thistory.push(`/list/${response.slug}`);\n\t\treturn dispatch(createListSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create list': error.message }));\n\t});\n};\n\nexport function createListSucceeded(list) {\n\treturn {\n\t\t'type': CREATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tlist\n\t\t}\n\t};\n}\n\nexport const deleteList = id => (dispatch, getState) => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'method': 'DELETE',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\t// deleted the selected list\n\t\tif (id === getState().page.currentListId) {\n\t\t\tdispatch(setCurrentListId(null));\n\t\t}\n\n\t\treturn dispatch(deleteListSucceeded(id));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete list': error.message }));\n\t});\n};\n\nexport const setListIsPublic = ({ id, is_public }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ is_public }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(setListIsPublicSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'set list is public': error.message }));\n\t});\n};\n\nexport function deleteListSucceeded(id) {\n\treturn {\n\t\t'type': DELETE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport function setListIsPublicSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': SET_LIST_IS_PUBLIC_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n\nexport function setCurrentListId(id) {\n\treturn {\n\t\t'type': SET_CURRENT_LIST_ID,\n\t\t'payload': {\n\t\t\tid,\n\t\t}\n\t};\n}\n\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\n// this is initial state of lists and the list loading states\nconst initialListsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'things': {},\n};\n\n// 'state' here is global state\nexport const getSearchTerm = state => {\n\treturn state.page.searchTerm;\n};\n\nexport const getLists = state => {\n\treturn Object.keys(state.lists.things).map(id => {\n\t\treturn state.lists.things[id];\n\t});\n};\n\nexport const getFilteredLists = createSelector(\n\t[getLists, getSearchTerm],\n\t(lists, searchTerm) => {\n\t\treturn lists.filter(list => {\n\t\t\t// if no search term, return every list\n\t\t\tif (searchTerm === '') {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\treturn list.title.match(new RegExp(searchTerm, 'i'));\n\t\t});\n\t}\n);\n\nexport const getGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => list.is_public === is_public);\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\n// state here is the substate state.lists\n// the book uses 'items' for the list of things i.e. lists. items\n// as 'items' for us is a specific thing, we need another name for the set of entities to be displayed i.e. the lists themselves\n// so those are globalState.lists.things\n// i.e. state.things here\nexport default function lists(state = initialListsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialListsState, {});\n\t\t}\n\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tlet lists = {};\n\n\t\t\tif (entities && entities.lists) {\n\t\t\t\tlists = entities.lists; // there is at least one list\n\t\t\t}\n\n\t\t\treturn updeep({ 'things': lists, 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase CREATE_LIST_SUCCEEDED: {\n\t\t\tconst list = action.payload.list;\n\t\t\treturn updeep({ 'things': { [list.id]: list } }, state);\n\t\t}\n\n\t\tcase DELETE_LIST_SUCCEEDED: {\n\t\t\tconsole.log('succeeded. id ', action.payload.id);\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tcase SET_LIST_IS_PUBLIC_SUCCEEDED: {\n\t\t\tconst listId = action.payload.id;\n\n\t\t\treturn updeep({ 'things': { [listId]: { 'is_public': action.payload.is_public } } }, state);\n\t\t\t// reminder of another way to update nested arrays\n\t\t\t/* const index = state.things.findIndex((list) => list.id === action.payload.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\treturn updeep.updateIn(`things.${index}.is_public`, action.payload.is_public, state);\n\t\t\t} \n\n\t\t\treturn state; // in case list was not found\n\t\t\t*/\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\n\t\t\tfunction addItem(items) {\n\t\t\t\treturn [].concat(items, item.id);\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${item.list}.items`, addItem, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\tfunction deleteItem(items) {\n\t\t\t\tconst itemIndex = items.findIndex((item) => item === action.payload.itemId); \n\t\t\t\tlet newItems = [].concat(items);\n\t\t\t\tnewItems.splice(itemIndex, 1);\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${action.payload.listId}.items`, deleteItem, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","import {\n\tSET_CURRENT_LIST_ID,\n\tFILTER_LISTS,\n} from './lists';\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'currentListId': null,\n\t'searchTerm': '',\n};\n\nexport default function page(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_CURRENT_LIST_ID: {\n\t\t\treturn updeep({ 'currentListId': action.payload.id }, state);\n\t\t}\n\n\t\tcase FILTER_LISTS: {\n\t\t\treturn updeep({ 'searchTerm': action.payload.searchTerm }, state);\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","// index.js\n\n// import the partial reducers\nimport { combineReducers } from 'redux';\nimport errors from './errors';\nimport auth from './auth';\nimport page from './page';\nimport lists from './lists';\nimport items from './items';\n// by importing the actual reducer as the default, the state of each is initialised\n\nexport default combineReducers({\n\t'errors': errors,\n\t'auth': auth,\n\t'page': page,\n\t'lists': lists,\n\t'items': items,\n});\n","// store.js\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules/rootReducer';\n\nconst store = createStore(\n\trootReducer, \n\t// inititalState, // by not supplying initial state, we tell the store to use the defaults specified in the reducer\n\tcompose(applyMiddleware(thunk), \n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./modules/rootReducer', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../modules/auth';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\tsubmitHandler = event => {\n\t\tevent.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(event);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's submitHandler\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.submitHandler}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email address to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.registration && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.registration}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Shown after successful registration of a new user\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Welcome extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Welcome to My Top Tens</h2>\n\t\t\t\t<p>Your account has been created. Click the link below to login.</p>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/login\" className=\"nav-link\">Login</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nWelcome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps)(Welcome);\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.authentication && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.authentication}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","// An individual list\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nconst ListSummary = props => {\n\tlet id=`select-${props.list.id}`;\n\tlet value = props.list.is_public ? 'Public' : 'Private';\n\n\treturn (\n\t\t<Col sm=\"3\" md=\"4\" className=\"list-container\">\n\t\t\t<div className=\"list-header\">\n\t\t\t\t<div>{props.list.title}</div>\n\t\t\t</div>\n\t\t\t<div className=\"list-body\">{props.list.description}</div>\n\t\t\t<div className=\"list-status\">\n\t\t\t\t<label>Set list private/public status\n\t\t\t\t\t<select className=\"form-control\" value={value} onChange={onIsPublicChange} id={id}>\n\t\t\t\t\t\t{LIST_IS_PUBLIC_TEXTS.map(is_public => (\n\t\t\t\t\t\t\t<option key={is_public} value={is_public}>{is_public}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<button className=\"btn btn-danger\" onClick={onDeleteList}>Delete</button>\n\t\t</Col>\n\t);\n\n\tfunction onIsPublicChange(e) {\n\t\t// map from select options to true / false\n\t\tconst value = e.target.value === 'Public' ? true : false;\n\t\tprops.onIsPublicChange({ 'id': props.list.id, 'is_public': value });\n\t}\n\n\tfunction onDeleteList(e) {\n\t\tprops.onDeleteList(props.list.id);\n\t}\n};\n\nexport default ListSummary;\n","// List of all lists\n\nimport React from 'react';\nimport ListSummary from './ListSummary';\nimport { Container, Row } from 'reactstrap';\n\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nconst ListsList = props => {\n\tconst index = LIST_IS_PUBLIC_VALUES.indexOf(props.is_public === 'true');\n\tconst headerText = LIST_IS_PUBLIC_TEXTS[index];\n\n\treturn (\n\t\t<Container className=\"lists-list\">\n\t\t\t<Row>\n\t\t\t\t<h3 className=\"lists-list-title\">\n\t\t\t\t\t<strong>{headerText}</strong>\n\t\t\t\t</h3>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t{props.lists.map(list => (\n\t\t\t\t\t<ListSummary\n\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tonIsPublicChange={props.onIsPublicChange}\n\t\t\t\t\t\tonDeleteList={props.onDeleteList}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default ListsList;\n","// Page to display list of lists\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\nimport ListsList from '../components/ListsList';\nimport './ListsPage.scss';\n\nclass ListsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// Hide the New List form if the user cannot create a list\n\t\t/*if(prevProps.canCreateList && !this.props.canCreateList){\n\t\t\tthis.resetForm();\n\t\t} */\n\t}\n\n\tonSearch = e => {\n\t\tthis.props.onSearch(e.target.value);\n\t}\n/*\n\tonTitleChange = (e) => {\n\t\tthis.setState({ 'title': e.target.value });\n\t}\n\n\tonDescriptionChange = (e) => {\n\t\tthis.setState({ 'description': e.target.value });\n\t} */\n\n\t/*resetForm() {\n\t\tthis.setState({\n\t\t\t'title': '',\n\t\t\t'description': ''\n\t\t});\n\t} */\n\n\t/* onCreateList = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.onCreateList({\n\t\t\t'title': this.state.title,\n\t\t\t'description': this.state.description\n\t\t});\n\t\tthis.resetForm();\n\t} */\n\n\tonDeleteList = (id) => {\n\t\tthis.props.onDeleteList(id);\n\t}\n\n\tonAddList = () => {\n\t\tthis.props.history.push('/createlist');\n\t}\n\n\trenderListsList() {\n\t\tconst { lists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\treturn Object.keys(lists).map((is_public, index) => {\n\t\t\tconst listsByIsPublic = lists[is_public];\n\n\t\t\treturn (\n\t\t\t\t<div key={index}>\n\t\t\t\t\t{(listsByIsPublic.length > 0) && (\n\t\t\t\t\t\t<ListsList\n\t\t\t\t\t\t\tlists={listsByIsPublic}\n\t\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\t\tis_public={is_public}\n\t\t\t\t\t\t\tkey={is_public}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"lists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"lists-list\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col sm=\"6\">\n\t\t\t\t\t\t\t<div className=\"lists-list-header\">\n\t\t\t\t\t\t\t\t<input className=\"form-control\"\n\t\t\t\t\t\t\t\t\tonChange={this.onSearch}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{this.props.canCreateList && (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.onAddList}\n\t\t\t\t\t\t\t\t\t>+ New list</button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t<div className=\"lists\">\n\t\t\t\t\t{this.renderListsList()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ListsPage);\n","// An individual item\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\n\nconst Item = props => {\n\treturn (\n\t\t<Col sm=\"3\" md=\"4\" className=\"item-container\">\n\t\t\t<div className=\"item-header\">\n\t\t\t\t<div>{`${props.item.order}: ${props.item.title}`}</div>\n\t\t\t</div>\n\t\t\t<div className=\"item-body\">\n\t\t\t\t<div>{props.item.description}</div>\n\t\t\t</div>\n\t\t\t<button className=\"btn btn-danger\" onClick={onDeleteItem}>Delete</button>\n\t\t</Col>\n\t);\n\n\tfunction onDeleteItem(e) {\n\t\tprops.onDeleteItem({\n\t\t\t'itemId': props.item.id,\n\t\t\t'listId': props.list,\n\t\t});\n\t}\n};\n\nexport default Item;\n","import React from 'react';\nimport Item from './Item';\nimport { Container, Row } from 'reactstrap';\n\nconst ItemsList = props => {\n\treturn (\n\t\t<Container className=\"items-list\">\n\t\t\t<Row>\n\t\t\t\t<h3 className=\"items-list-title\">\n\t\t\t\t\t<strong>Items for list: </strong>\n\t\t\t\t</h3>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t{props.items.map(item => (\n\t\t\t\t\t<Item\n\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t\tonDeleteItem={props.onDeleteItem}\n\t\t\t\t\t\tlist={props.list}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default ItemsList;\n","import React, { Component } from 'react';\nimport { Container, Row } from 'reactstrap';\nimport ItemsList from '../components/ItemsList';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\nimport './ItemsPage.scss';\n\nclass ItemsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'showNewItemForm': false,\n\t\t\t'title': '',\n\t\t\t'description': '',\n\t\t};\n\t}\n\n\tonTitleChange = (e) => {\n\t\tthis.setState({ 'title': e.target.value });\n\t}\n\n\tonDescriptionChange = (e) => {\n\t\tthis.setState({ 'description': e.target.value });\n\t}\n\n\tresetForm() {\n\t\tthis.setState({\n\t\t\t'showNewCardForm': false,\n\t\t\t'title': '',\n\t\t\t'description': ''\n\t\t});\n\t}\n\n\tonCreateItem = (e) => {\n\t\te.preventDefault();\n\n\t\t// find the next available position in the list\n\t\tconst orders = this.props.items.map((item) => parseInt(item.order));\n\t\torders.sort(function(a, b){return a - b;});\n\t\tlet order;\n\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tif (orders.indexOf(i) === -1) {\n\t\t\t\torder = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!order) {\n\t\t\treturn; // the list is full\n\t\t}\n\n\t\tthis.props.onCreateItem({\n\t\t\t'title': this.state.title,\n\t\t\t'description': this.state.description,\n\t\t\t'list': this.props.currentListId,\n\t\t\torder, \n\t\t});\n\t\tthis.resetForm();\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewItemForm': !this.state.showNewItemForm });\n\t}\n\n\trenderItemsList() {\n\t\treturn (\n\t\t\t<ItemsList\n\t\t\t\titems={this.props.items}\n\t\t\t\tonDeleteItem={this.props.onDeleteItem}\n\t\t\t\tlist={this.props.currentListId}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"items-list\">\n\t\t\t\t<Container className=\"items-list-header\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"button button-default\"\n\t\t\t\t\t\t\tonClick={this.toggleForm}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t+ New item</button>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t{this.state.showNewItemForm && (\n\t\t\t\t\t\t<form className=\"items-list-form\" onSubmit={this.onCreateItem}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"full-width-input\"\n\t\t\t\t\t\t\t\tonChange={this.onTitleChange}\n\t\t\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"title\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"full-width-input\"\n\t\t\t\t\t\t\t\tonChange={this.onDescriptionChange}\n\t\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)}\n\t\t\t\t</Container>\n\n\t\t\t\t{this.renderItemsList()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ItemsPage;\n","import React, { Component } from 'react';\n\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nexport default class SelectList extends Component {\n\trender() {\n\t\tconst listOptions = Object.keys(this.props.lists).map(is_public => {\n\t\t\tconst listsByIsPublic = this.props.lists[is_public];\n\t\t\tconst options = listsByIsPublic.map(list => {\n\t\t\t\tconst index = LIST_IS_PUBLIC_VALUES.indexOf(is_public === 'true');\n\t\t\t\treturn (\n\t\t\t\t\t<option key={list.id} value={list.id}>\n\t\t\t\t\t\t{list.title} ({LIST_IS_PUBLIC_TEXTS[index]})\n\t\t\t\t\t</option>\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn options;\n\t\t});\n\n\t\t// if previously selected list has been deleted, there should be no selection\n\t\tconst currentListId = this.props.currentListId || '';\n\n\t\t// don't render select until lists are available\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t{this.props.lists && (\n\t\t\t\t\t<div className=\"list-select\">\n\t\t\t\t\t\t<label>List:\n\t\t\t\t\t\t\t<select onChange={this.props.onCurrentListChange} className=\"list-menu form-control\" value={currentListId}>\n\t\t\t\t\t\t\t\t{listOptions}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t};\n}\n","import React from 'react';\n\n// onClick should dismiss the condition that caused the FlashMessage to be displayed\n// it is the responsibility of the component that triggers the FlashMessage, to also provide the way to dismiss it\nexport default function FlashMessage({ message, type, onClick }) {\n\treturn (\n\t\t<div className={`flash-error ${type}`}>\n\t\t\t<span>{message}</span>\n\t\t\t<button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={onClick}>\n\t\t\t  <span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","// Home.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport ListsPage from './ListsPage';\nimport ItemsPage from './ItemsPage';\nimport SelectList from '../components/SelectList';\n\nimport * as lists from '../modules/lists';\nimport * as items from '../modules/items';\nimport { getGroupedAndFilteredLists } from '../modules/lists';\nimport { getItemsByListId } from '../modules/items';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass Home extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(lists.fetchLists());\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user's status has changed, refresh Lists\n\t\tif(prevProps.auth.user.token !== this.props.auth.user.token){\n\t\t\tthis.props.dispatch(lists.fetchLists());\n\t\t}\n\t}\n\n\tonCurrentListChange = e => {\n\t\tthis.props.dispatch(lists.setCurrentListId(e.target.value));\n\t}\n\n\tonSearch = searchTerm => {\n\t\tthis.props.dispatch(lists.filterLists(searchTerm));\n\t}\n\n\tonCreateList = ({ title, description }) => {\n\t\tthis.props.dispatch(lists.createList({ title, description }));\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(lists.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = (id) => {\n\t\tthis.props.dispatch(lists.deleteList(id));\n\t}\n\n\tonCreateItem = (item) => {\n\t\tthis.props.dispatch(items.createItem(item));\n\t}\n\n\tonDeleteItem = (item) => {\n\t\tthis.props.dispatch(items.deleteItem(item));\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<SelectList\n\t\t\t\t\t\t\t\tlists={this.props.lists}\n\t\t\t\t\t\t\t\tonCurrentListChange={this.onCurrentListChange}\n\t\t\t\t\t\t\t\tcurrentListId={this.props.currentListId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t<ListsPage\n\t\t\t\t\tlists={this.props.lists}\n\t\t\t\t\tcanCreateList={this.props.auth.canCreateList}\n\t\t\t\t\tonSearch={this.onSearch}\n\t\t\t\t\tonCreateList={this.onCreateList}\n\t\t\t\t\tonIsPublicChange={this.onIsPublicChange}\n\t\t\t\t\tonDeleteList={this.onDeleteList}\n\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t/>\n\t\t\t\t{this.props.currentListId && (\n\t\t\t\t\t<ItemsPage\n\t\t\t\t\t\titems={this.props.items}\n\t\t\t\t\t\tonCreateItem={this.onCreateItem}\n\t\t\t\t\t\tcurrentListId={this.props.currentListId}\n\t\t\t\t\t\tonDeleteItem={this.onDeleteItem}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'lists': PropTypes.object.isRequired,\n\t'items': PropTypes.array.isRequired,\n\t'currentListId': PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.lists.isLoading,\n\t'lists': getGroupedAndFilteredLists(state),\n\t'items': getItemsByListId(state),\n\t'currentListId': state.page.currentListId,\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { createList } from '../modules/lists';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from '../components/ValidatedForm.js';\n\nclass CreateList extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'title': '',\n\t\t\t'description': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tcancel(e) {\n\t\tthis.props.history.push('/');\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tthis.props.createList({\n\t\t\t'title': this.state.title,\n\t\t\t'description': this.state.description\n\t\t}, this.props.history);\n\t}\n\n\n\tcomponentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user cannot create a list, redirect to Home\n\t\tif(!this.props.auth.canCreateList){\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create a new list</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Title</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"title\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.title }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list title\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Title is required</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Description</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.description }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSave list\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.lists && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.lists}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nCreateList.propTypes = {\n\t'createList': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ createList })(withRouter(CreateList));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport * as lists from '../modules/lists';\n\nclass ListDetails extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'slug': props.match.params.slug,\n\t\t};\n\n\t\tconsole.log(' slug ', props.match.params.slug);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(lists.fetchListBySlug(this.state.slug));\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>List detail {this.props.match.params.slug}</h2>\n\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nListDetails.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps)(withRouter(ListDetails));\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Account management</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/changepassword\" className=\"nav-link\">Change password</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps,)(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.forgotPasswordEmailNotSent());\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.dispatch(auth.forgotPassword(user));\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) &&\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>}\n\t\t\t\t<h2>Forgot your password?</h2>\n\t\t\t\t<p>Enter your email address. A reset password link will be emailed to you.</p>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.email && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.email}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"valid-feedback\">If the address {this.state.email} is associated with an account, an email has been sent. If you don't see it within a few minutes, please check your junk mail folder.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'forgotPassword': auth.forgotPassword,\n\t'forgotPasswordEmailNotSent': auth.forgotPasswordEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { changePassword, passwordNotChanged } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass ChangePassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'old_password': '',\n\t\t\t'new_password': '',\n\t\t\t'new_password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconsole.log('submit changePassword');\n\t\tconst data = {\n\t\t\t'old_password': this.state.old_password,\n\t\t\t'new_password1': this.state.new_password,\n\t\t\t'new_password2': this.state.new_password_confirm\n\t\t};\n\n\t\tthis.props.changePassword(data, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Change your password</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'new_password',\n\t\t\t\t\t'input2': 'new_password_confirm',\n\t\t\t\t\t'message': 'New passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"old_password\">Old password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"old_password\"\n\t\t\t\t\t\t\t\t\tid=\"old_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.old_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your old password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password\">New password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password_confirm\">Confirm your new password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tChange password now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.changePassword && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.changePassword}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t      {this.props.auth.changePasswordComplete && (<div className=\"valid-feedback\">Your new password has been saved</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nChangePassword.propTypes = {\n\t'changePassword': PropTypes.func.isRequired,\n\t'passwordNotChanged': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ changePassword, passwordNotChanged })(withRouter(ChangePassword));\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport { setCurrentUser, getUserInfo, logoutUser, getAuthToken } from '../modules/auth';\n\nimport Navbar from '../components/Navbar';\nimport Register from '../components/Register';\nimport Welcome from '../components/Welcome';\nimport Login from '../components/Login';\nimport Home from '../containers/Home';\nimport CreateList from '../containers/CreateList';\nimport ListDetails from '../containers/ListDetail';\nimport Account from '../components/Account';\nimport ForgotPassword from '../components/ForgotPassword';\nimport ChangePassword from '../components/ChangePassword';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password loads the bootstrap css from static/bootstrap\n\n// check if user is already logged in\nif(getAuthToken()) {\n\tstore.dispatch(setCurrentUser(localStorage.jwtToken));\n\tstore.dispatch(getUserInfo());\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.jwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\t\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t\t<Route exact path=\"/createlist\" component={ CreateList } />\n\t\t\t\t\t\t\t<Route exact path=\"/list/:slug\" component={ ListDetails } />\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/welcome\" component={ Welcome } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t<Route exact path=\"/changepassword\" component={ ChangePassword } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./containers/App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}
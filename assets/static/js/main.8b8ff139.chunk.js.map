{"version":3,"sources":["modules/errors.js","modules/formatErrorMessages.js","modules/fetchAPI.js","modules/isEmpty.js","modules/auth.js","modules/page.js","constants/index.js","modules/item.js","modules/list.js","modules/rootReducer.js","store.js","components/Search.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Welcome.js","components/Login.js","components/FlashMessage.js","components/Loading.js","components/ListsList.js","components/SetListIsPublic.js","modules/findObjectByProperty.js","modules/permissions.js","components/ListSummary.js","components/Pagination.js","components/ListsPage.js","containers/Home.js","containers/CreateList.js","components/EditableTextField.js","components/Item.js","components/ItemsPage.js","components/OrganizerList.js","components/Organizer.js","containers/ListDetail.js","components/Account.js","components/ForgotPassword.js","components/ChangePassword.js","components/Verified.js","containers/App.js","serviceWorker.js","index.js"],"names":["getErrors","error","type","payload","clearErrors","updeep","require","initialState","formatErrorMessages","errors","messageArray","Object","keys","forEach","key","push","map","item","join","fetchAPI","_ref","url","data","_ref$method","method","_ref$useAuth","useAuth","_ref$headers","headers","Authorization","concat","store","getState","auth","user","token","fetch","body","then","response","ok","contentType","get","includes","json","catch","Promise","reject","Error","message","text","html","page_type","status","isEmpty","value","undefined","length","trim","LOGOUT_USER_COMPLETE","setCurrentUser","dispatch","localStorage","setItem","setAuthToken","logoutUser","history","removeItem","logout user","getUserInfo","setUserInfo","username","email","id","emailVerified","email_verified","get user info","forgotPasswordEmailNotSent","forgotPassword","formData","FormData","name","append","request password reset email","passwordNotChanged","changePasswordComplete","confirmEmailNotSent","sendConfirmationEmail","console","log","isLoading","isAuthenticated","forgotPasswordEmailSent","resetPasswordComplete","confirmEmailSent","SEARCH_HOME_STARTED","SEARCH_HOME_SUCCEEDED","SEARCH_HOME_FAILED","SEARCH_HOME_CLEAR","searchHome","searchTerm","searchHomeStarted","results","fetch lists","searchComplete","searchResults","LIST_IS_PUBLIC_VALUES","MAX_ITEMS_IN_LIST","CREATE_ITEM_SUCCEEDED","UPDATE_ITEM_SUCCEEDED","MOVE_ITEM_UP_SUCCEEDED","updateItem","itemId","propertyName","Content-Type","JSON","stringify","defineProperty","updateItemSucceeded","update item","moveItemUp","items","move item up error ","moveItemDown","_ref2","things","listId","list_id","order","item_below_id","list","initialItemsState","count","next","previous","organizerData","groupedItems","createSelector","state","lists","itemsByList","itemsArray","i","objectSpread","parent_item","parentItem","find","childListId","RECEIVE_ENTITIES","FETCH_LISTS_STARTED","FETCH_LISTS_FAILED","FETCH_LIST_DETAIL_STARTED","FETCH_LIST_DETAIL_FAILED","CREATE_LIST_STARTED","CREATE_LIST_SUCCEEDED","DELETE_LIST_SUCCEEDED","SET_LIST_IS_PUBLIC_SUCCEEDED","UPDATE_LIST_SUCCEEDED","RECEIVE_ORGANIZER_DATA","FETCH_ORGANIZER_DATA_STARTED","FETCH_ORGANIZER_DATA_FAILED","itemSchema","schema","Entity","listSchema","receiveEntities","entities","fetchLists","arguments","listset","topLevelListsOnly","limit","offset","normalize","fetchListDetail","normalizedData","createList","create list","updateList","updateListSucceeded","deleteList","deleteListSucceeded","delete list","setListIsPublic","is_public","_ref3","setListIsPublicSucceeded","set list is public","fetchOrganizerData","userId","fetch my list names","initialListsState","getLists","getPublicLists","filter","getMyGroupedLists","grouped","created_by","getOrganizerLists","getSortedOrganizerLists","listsArray","sort","a","b","localeCompare","getItemsForList","listItems","childList","getParentItemAndList","parentList","combineReducers","action","toConsumableArray","constant","confirmEmailAlreadyVerified","page","_action$payload","omit","updateIn","update","description","modified_by","modified_at","newItems","itemsObject","composeEnhancers","composeWithDevTools","createStore","rootReducer","applyMiddleware","thunk","Search","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","node","contains","target","closeDropdown","showDropdown","bind","assertThisInitialized","onFocus","document","addEventListener","removeEventListener","setState","_this2","react_default","createElement","className","result","Link","to","onClick","ref","Input","onChange","placeholder","Component","Navbar","onSearch","clearTimeout","searchTimeout","setTimeout","pageReducer","onLogout","preventDefault","prevState","authReducer","_this$props$auth","authLinks","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","src_components_Search","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","formLength","checkValidity","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","handleSubmit","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","setCustomValidity","classNames","assign","noValidate","children","Register","password","password_confirm","handleInputChange","password1","password2","registerUser","nextProps","Container","ValidatedForm_ValidatedForm","Row","Col","md","lg","Label","for","required","minLength","pattern","registration","style","display","Welcome","Login","loginUser","authentication","FlashMessage","aria-hidden","Loading","Spinner","color","width","height","ListsList","headerText","SetListIsPublic","isPublic","tooltip","dataset","ispublic","onChangeIsPublic","listid","data-listid","data-ispublic","title","findObjectByProperty","parentObject","property","childObject","canViewList","canEditList","canCreateList","ListSummary","canEdit","permissions","sm","src_components_SetListIsPublic","onDeleteList","showCreatedBy","created_by_username","Pagination","pager","initialPage","currentPage","defaultPage","setPage","prevProps","pageNumber","_this$props","pageSize","getPager","totalPages","Math","min","onChangePage","totalItems","startPage","endPage","ceil","startIndex","endIndex","pages","Array","index","React","defaultProps","ListsPage","onAddList","publicLists","components_ListsList","src_components_ListSummary","_this$props2","myLists","listsByIsPublic","selectedTab","handleTabClick","listsList","renderMyLists","renderPublicLists","check","defaultChecked","handleTopLevelListsChange","renderTabs","src_components_Pagination","Home","listReducer","confirm","setListSetURL","onCloseFlashMessage","URLSearchParams","location","search","_ref3$listset","_ref3$topLevelListsOn","_ref3$currentPage","URL","pathname","components_Loading","src_components_ListsPage","onCreateList","CreateList","newList","cancel","urlParams","parentItemId","parentItemName","parentListName","parentListId","newItem","elements","renderItemInputs","EditableTextField","fakeEvent","initialValue","toggleInput","showInput","overflowActive","textarea","expanded","onKeyUp","toggleMore","element","textElement","offsetHeight","scrollHeight","isOverflowActive","keyCode","which","classList","newShowInputValue","isEditing","inputElement","handleNewValue","showMoreButton","moreButtonText","tabIndex","react_markdown_default","escapeHtml","source","label","autoFocus","data-state","data-entityid","renderValue","Item","onCreateChildList","onMoveUp","onMoveItemUp","onMoveDown","onMoveItemDown","isEditingName","setIsEditingName","showDescription","canCreateChildList","canViewChildList","showUp","showDown","src_components_EditableTextField","ItemsPage","itemsReducer","entityid","split","toggleForm","showNewItemForm","src_components_Item","renderItemsList","OrganizerList","showItems","onSelectItem","onShowItems","childlistid","selectedItemOrder","parseInt","selectedListId","itemOrganizerData","childListElm","isSelectedItem","listOrganizerData","data-order","data-childlistid","isSelectedList","showItemsButtonText","renderItems","Organizer","componentDidUpdate","showOrganizer","onClickOrganize","scrollIntoView","onClickCancel","onClickDone","selectedItemChildListId","setParentItem","onSelectParentItem","indexOf","_this3","components_OrganizerList","controls","renderLists","ListDetails","getListData","match","params","getOrganizerData","canView","list_name","list_description","showPrivacyWarning","privacyWarningText","breadcrumbs","src_components_Organizer","thisListItems","components_ItemsPage","content","renderPage","ownProps","parentItemAndList","itemReducer","Account","email_status","ForgotPassword","ChangePassword","old_password","new_password","new_password_confirm","new_password1","new_password2","changePassword","Verified","getItem","mytoptensJwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","window","hostname","navigator","serviceWorker","ready","unregister","render","src_containers_App","getElementById"],"mappings":"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","file":"static/js/main.8b8ff139.chunk.js","sourcesContent":["// errorReducer.js\n\nconst GET_ERRORS = 'GET_ERRORS';\nconst CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const getErrors = error => {\n\t// error is an object, e.g. { 'registration': error.message }\n\treturn {\n\t\t'type': GET_ERRORS,\n\t\t'payload': error,\n\t};\n};\n\nexport const clearErrors = () => {\n\treturn {\n\t\t'type': CLEAR_ERRORS,\n\t};\n};\n\nvar updeep = require('updeep');\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\t// ensure we have an array of strings to allow multiple errors to be displayed\n\t\t\tlet errors = {};\n\n\t\t\tObject.keys(action.payload).forEach((key) => {\n\t\t\t\tif (typeof action.payload[key] === 'string') {\n\t\t\t\t\t// a string is simply copied\n\t\t\t\t\terrors[key] = [action.payload[key]];\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = [...action.payload[key]];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn updeep(errors, {}); // clear any existing errors\n\t\t}\n\n\t\tcase CLEAR_ERRORS: {\n\t\t\treturn {};\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// join arrays of error messages from different errors, into a single string.\n// it is expected that there will only ever be one type of error, e.g. 'register', but the object is parsed to be on the safe side.\n/*\n{ {'register': [\n\t\t'email already in use',\n\t\t'username already in use'\n\t\t]},\n\t{'login': [\n\t\t'could not log in'\n\t]\n}\n*/\n\nexport default function (errors) {\n\tlet messageArray = [];\n\tObject.keys(errors).forEach((key) => {\n\t\tif (typeof errors[key] === 'string') {\n\t\t\tmessageArray.push(errors[key]); // plain string error\n\t\t} else { // arary of errors\n\t\t\terrors[key].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\tmessageArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst message = messageArray.join(' ');\n\n\treturn message;\n};\n","// uses fetch to get or post data.\n// passes up useful errors to the calling function.\n// set useAuth to true for validating logged-in user: token will be sent in header\nimport store from '../store';\nimport formatErrorMessages from '../modules/formatErrorMessages';\n\nexport default function fetchAPI({ url, data, method = 'GET', useAuth = false, headers = {} }) {\n\tif (useAuth) {\n\t\theaders.Authorization = `Token ${store.getState().auth.user.token}`;\n\t}\n\n\treturn fetch(url, { headers, 'method': method, 'body': data })\n\t\t.then(response => {\n\t\t\t// fetch returns ok true / false in most situations\n\t\t\t// true is a successful response\n\t\t\tif (response.ok) {\n\t\t\t\tconst contentType = response.headers.get('Content-Type') || '';\n\n\t\t\t\tif (contentType.includes('application/json')) {\n\t\t\t\t\treturn response.json().catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('Invalid JSON: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (contentType.includes('text/html')) {\n\t\t\t\t\treturn response.text().then(html => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'page_type': 'generic',\n\t\t\t\t\t\t\t'html': html\n\t\t\t\t\t\t};\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('HTML error: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// ok == false means some problem to display\n\t\t\t\t// even though no error was returned\n\t\t\t\tif (response.status === 404) {\n\t\t\t\t\treturn Promise.reject(new Error('Page not found: ' + url));\n\t\t\t\t}\n\n\t\t\t\tif (response.status === 500) {\n\t\t\t\t\treturn Promise.reject(new Error('Internal server error: ' + url));\n\t\t\t\t}\n\n\t\t\t\treturn response.json().then(response => {\n\t\t\t\t\t// the server rejected the request, e.g. because of a wrong password, we want to display the reason\n\t\t\t\t\t// the information is contained in the json()\n\t\t\t\t\t// there may be more than one error, so join them into a single string.\n\t\t\t\t\t// multiline display would be more elegant but this will do for now and makes all errors consistent (one message string)\n\n\t\t\t\t\treturn Promise.reject(new Error(formatErrorMessages(response))\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\t// fetch returned an error\n\t\t\treturn Promise.reject(new Error(error.message));\n\t\t});\n};\n","// check for a null, empty, undefined object\n\nconst isEmpty = (value) => {\n\treturn (\n\t\tvalue === undefined ||\n\t\tvalue === null ||\n\t\t(typeof value === 'object' && Object.keys(value).length === 0) ||\n\t\t(typeof value === 'string' && value.trim().length === 0)\n\t);\n};\n\nexport default isEmpty;\n","// authReducer.js\n\nimport store from '../store';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors, clearErrors } from '../modules/errors';\nimport isEmpty from '../modules/isEmpty';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\nexport const PASSWORD_NOT_CHANGED = 'PASSWORD_NOT_CHANGED';\nexport const CHANGE_PASSWORD_COMPLETE = 'CHANGE_PASSWORD_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_NOT_SENT = 'CONFIRM_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_SENT = 'CONFIRM_EMAIL_SENT';\nexport const CONFIRM_EMAIL_ALREADY_VERIFIED = 'CONFIRM_EMAIL_ALREADY_VERIFIED';\n\n// Side effects Services\nexport const getAuthToken = () => {\n\treturn localStorage.getItem('mytoptensJwtToken');\n};\n\nfunction setAuthToken(token) {\n\tlocalStorage.setItem('mytoptensJwtToken', token);\n\treturn;\n}\n\nfunction removeAuthToken() {\n\tlocalStorage.removeItem('mytoptensJwtToken');\n\treturn;\n}\n\nexport const registerUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/registration/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t}).then(response => {\n\t\thistory.push('/welcome');\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'registration': error.message }));\n\t});\n};\n\nexport const loginUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/login/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\treturn dispatch(setCurrentUser(response.key));\n\t}).then(() => {\n\t\thistory.push('/');\n\t\t// after store has been updated with token, we can query the server for current user info\n\t\treturn store.dispatch(getUserInfo());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'authentication': 'Unable to log in with the provided credentials, please try again.' }));\n\t});\n};\n\nexport const setCurrentUser = (token, dispatch) => {\n\tsetAuthToken(token);\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': { token },\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\tdispatch(clearErrors());\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/logout/',\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\tremoveAuthToken();\n\t\treturn dispatch(logoutUserComplete());\n\t}).then(() => {\n\t\t// ensure token is removed from localStorage and store before redirecting\n\t\t// history.push('/');\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'logout user': 'Unable to logout' }));\n\t});\n};\n\n///////////////////////////////\n// get user info\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = () => (dispatch) => {\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/user/',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t}).then(user => {\n\t\treturn dispatch(setUserInfo({\n\t\t\t'username': user.username,\n\t\t\t'email': user.email,\n\t\t\t'id': user.id,\n\t\t\t'emailVerified': user.email_verified,\n\t\t}));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'get user info': 'Unable to get user info' }));\n\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/reset/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\t return dispatch(forgotPasswordEmailSent());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'request password reset email': `Unable to send a password reset email. It is likely that the email address ${email} is not associated with a registered user` }));\n\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n//////////////////////////////////\n// change password\nexport const changePassword = (data) => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(passwordNotChanged());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in data) {\n\t\tformData.append(name, data[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/change/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tdispatch(changePasswordComplete());\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'changePassword': error.message }));\n\t});\n};\n\nexport const passwordNotChanged = token => {\n\treturn {\n\t\t'type': PASSWORD_NOT_CHANGED,\n\t};\n};\n\nexport const changePasswordComplete = (token) => {\n\treturn {\n\t\t'type': CHANGE_PASSWORD_COMPLETE,\n\t};\n};\n\n//////////////////////////////////\n// Email confirmation\nexport const confirmEmailNotSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_NOT_SENT\n\t};\n};\n\nexport const confirmEmailSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_SENT\n\t};\n};\n\nexport const confirmEmailAlreadyVerified = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_ALREADY_VERIFIED\n\t};\n};\n\n//////////////////////////////////\n\nexport const sendConfirmationEmail = () => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(confirmEmailNotSent());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/sendconfirmationemail/',\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tif (response.message === 'Email confirmation sent') {\n\t\t\treturn dispatch(confirmEmailSent());\n\t\t} else if (response.message === 'Email already verified') {\n\t\t\treturn dispatch(confirmEmailAlreadyVerified());\n\t\t}\n\t}).catch(error => {\n\t\tconsole.log('sendConfirmationEmail error ', error);\n\t\tconst message = 'Unable to send confirmation email. This probably means that there is no user registered with that email address.';\n\t\treturn dispatch(getErrors({ 'sendConfirmationEmail': message }));\n\t});\n};\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isLoading': false,\n\t'isAuthenticated': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'changePasswordComplete': false,\n\t'confirmEmailSent': false,\n\t'user': {}\n};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'isLoading': true,\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user info\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user info\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': false,\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'id': action.payload.id,\n\t\t\t\t\t'emailVerified': action.payload.emailVerified,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// forgot password\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase PASSWORD_NOT_CHANGED: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': false,\n\t\t\t\t'errors': {}\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CHANGE_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// confirm email\n\t\tcase CONFIRM_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': false,\n\t\t\t\t'confirmEmailAlreadyVerified': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_ALREADY_VERIFIED: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailAlreadyVerified': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","import fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\n\nexport const SEARCH_HOME_STARTED = 'SEARCH_HOME_STARTED';\nexport const SEARCH_HOME_SUCCEEDED = 'SEARCH_HOME_SUCCEEDED';\nexport const SEARCH_HOME_FAILED = 'SEARCH_HOME_FAILED';\nexport const SEARCH_HOME_CLEAR = 'SEARCH_HOME_CLEAR';\n\n///////////////////////////////////\n// Home page search function\nexport function searchHomeStarted(searchTerm) {\n\treturn {\n\t\t'type': SEARCH_HOME_STARTED,\n\t\t'payload': { searchTerm },\n\t};\n}\n\nfunction searchHomeSucceeded(results) {\n\t// TODO notify if no results\n\treturn {\n\t\t'type': SEARCH_HOME_SUCCEEDED,\n\t\t'payload': { results },\n\t};\n}\n\nfunction searchHomeFailed() {\n\treturn {\n\t\t'type': SEARCH_HOME_FAILED,\n\t};\n}\n\n// reset if there is no searchTerm\nexport function searchHomeClear() {\n\treturn {\n\t\t'type': SEARCH_HOME_CLEAR,\n\t};\n}\n\nexport function searchHome(searchTerm) {\n\treturn (dispatch, getState) => {\n\t\t// don't search on empty string\n\t\tif(!searchTerm || searchTerm === '') {\n\t\t\treturn dispatch(searchHomeClear());\n\t\t}\n\n\t\tdispatch(searchHomeStarted(searchTerm));\n\n\t\t// if the user is not logged in, don't use auth. The server should return the list if a non-authenticated user should see it.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/searchhome/?search=${searchTerm}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\treturn dispatch(searchHomeSucceeded(response.results));\n\t\t}).catch(error => {\n\t\t\tdispatch(searchHomeFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////////\n// reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'searchTerm': '',\n\t'searchComplete': false,\n\t'searchResults': [],\n};\n\nexport default function page(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SEARCH_HOME_STARTED\t: {\n\t\t\treturn updeep({\n\t\t\t\t'searchTerm': action.payload.searchTerm,\n\t\t\t\t'searchComplete': false,\n\t\t\t\t'searchResults': updeep.constant([]),\n\t\t\t}, state);\n\t\t}\n\n\t\tcase SEARCH_HOME_SUCCEEDED\t: {\n\t\t\treturn updeep({\n\t\t\t\t'searchComplete': true,\n\t\t\t\t'searchResults': updeep.constant(action.payload.results),\n\t\t\t}, state);\n\t\t}\n\n\t\tcase SEARCH_HOME_FAILED\t: {\n\t\t\treturn updeep({\n\t\t\t\t'searchComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase SEARCH_HOME_CLEAR\t: {\n\t\t\treturn updeep({\n\t\t\t\t'searchTerm': updeep.constant(''),\n\t\t\t\t'searchComplete': false,\n\t\t\t\t'searchResults': updeep.constant([]),\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","export const LIST_IS_PUBLIC_VALUES = [false, true];\nexport const MAX_ITEMS_IN_LIST = 10;\nexport const PAGE_SIZE = 10;\n","import { createSelector } from 'reselect';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport store from '../store';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tRECEIVE_ENTITIES,\n\tFETCH_LIST_DETAIL_STARTED,\n\tRECEIVE_ORGANIZER_DATA,\n} from './list';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const CREATE_ITEM_REQUESTED = 'CREATE_ITEM_REQUESTED';\nexport const CREATE_ITEM_SUCCEEDED = 'CREATE_ITEM_SUCCEEDED';\nexport const UPDATE_ITEM_SUCCEEDED = 'UPDATE_ITEM_SUCCEEDED';\nexport const MOVE_ITEM_UP_SUCCEEDED = 'MOVE_ITEM_UP_SUCCEEDED';\n\n////////////////////////////////////\n// create item\nexport const createItem = item => dispatch => {\n\tdispatch(createItemRequested());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/item/',\n\t\t'data': JSON.stringify(item),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\treturn dispatch(createItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create item': error.message }));\n\t});\n};\n\nexport function createItemRequested() {\n\treturn {\n\t\t'type': 'CREATE_ITEM_REQUESTED',\n\t};\n}\n\nexport function createItemSucceeded(item) {\n\treturn {\n\t\t'type': 'CREATE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titem\n\t\t}\n\t};\n}\n\n////////////////////////////////////\n// update item\nexport const updateItem = (itemId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/item/${itemId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateItemSucceeded(response) {\n\treturn {\n\t\t'type': UPDATE_ITEM_SUCCEEDED,\n\t\t'payload': response,\n\t};\n}\n\n//////////////////////////////////\n// move item up\nexport const moveItemUp = ({ itemId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/item/${itemId}/moveup/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(moveItemUpSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'move item up error ': error.message }));\n\t});\n};\n\nexport const moveItemDown = ({ itemId }) => dispatch => {\n\t// to move an item down, we move the item below up\n\t// find the item\n\tconst item = store.getState().item.things[itemId];\n\n\t// find its parent list\n\tconst listId = item.list_id;\n\n\t// find the item's order\n\tconst order = item.order;\n\n\t// find the item below it in the parent list\n\tconst item_below_id = store.getState().list.things[listId].item[order];\n\n\tdispatch(moveItemUp({ 'itemId': item_below_id }));\n};\n\nexport function moveItemUpSucceeded(items) {\n\treturn {\n\t\t'type': 'MOVE_ITEM_UP_SUCCEEDED',\n\t\t'payload': {\n\t\t\titems,\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialItemsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'count': null,\n\t'next': null,\n\t'previous': null,\n\t'things': {},\n\t'organizerData': {},\n};\n\n/////////////////////////////\n// organizer data\n// all items and lists, for selector to use\nexport const getOrganizerItems = state => state.item.organizerData;\nconst getOrganizerLists = state => state.list.organizerData;\n\nexport const groupedItems = createSelector(\n\t[getOrganizerItems, getOrganizerLists],\n\t(items, lists) => {\n\t\tlet itemsByList = {};\n\n\t\t// find the items for each list\n\t\tObject.keys(lists).map(listId => { // eslint-disable-line array-callback-return\n\t\t\tconst list = lists[listId];\n\n\t\t\tlet itemsArray = [];\n\n\t\t\tfor (let i=0; i<list.item.length; i++) {\n\t\t\t\tlet item = { ...items[list.item[i]] };\n\n\t\t\t\tif (item.name !== '') {\n\t\t\t\t\titemsArray.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsByList[list.id] = itemsArray;\n\t\t});\n\n\t\t// note the parent_item, if any, of each list\n\t\t// add the list's id to the item as childListId\n\t\tObject.keys(lists).map(listId => { // eslint-disable-line array-callback-return\n\t\t\tconst list = lists[listId];\n\n\t\t\tif (list.parent_item) {\n\t\t\t\tconst parentItem = items[list.parent_item];\n\n\t\t\t\tif (parentItem) {\n\t\t\t\t\t// can't use array order to pull out item, because items with no name have been removed\n\t\t\t\t\t// instead, explicitly find the item object in the array by its 'order' property\n\n\t\t\t\t\tlet itemsArray = itemsByList[parentItem.list_id];\n\t\t\t\t\tlet item = itemsArray.find(item => item.order === parentItem.order);\n\t\t\t\t\titem.childListId = list.id;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn itemsByList;\n\t}\n\n);\n\n/////////////////////////////\n// state updates\n\nexport default function item(state = initialItemsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialItemsState, {}); // constant provides placement instead of update, so all previous entries are removed\n\t\t}\n\t\t\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\n\t\t\tlet things = {};\n\n\t\t\tif (entities && entities.item) {\n\t\t\t\tthings = entities.item;\n\t\t\t}\n\n\t\t\treturn updeep({\n\t\t\t\t'things': updeep.constant(things),\n\t\t\t\t'organizerData': updeep.constant({}), // new list data so clear out old organizer data, this must be loaded separately\n\t\t\t\t'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LIST_DETAIL_STARTED: {\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\t\t\treturn updeep({ 'things': { [item.id]: item } }, state);\n\t\t}\n\n\t\tcase UPDATE_ITEM_SUCCEEDED: {\n\t\t\t// update editable properties\n\t\t\tconst update = {\n\t\t\t\t'name': action.payload.name,\n\t\t\t\t'description': action.payload.description,\n\t\t\t\t'modified_at': action.payload.modified_at,\n\t\t\t\t'order': action.payload.order,\n\t\t\t};\n\n\t\t\treturn updeep({ 'things': { [action.payload.id]: update } }, state);\n\t\t}\n\n\t\tcase MOVE_ITEM_UP_SUCCEEDED: {\n\t\t\tconst itemsArray = action.payload.items; // array containing the two items that have been swapped\n\n\t\t\tlet itemsObject = {};\n\t\t\titemsArray.map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\titemsObject[item.id] = item;\n\t\t\t});\n\t\t\treturn updeep({ 'things': itemsObject }, state);\n\t\t}\n\n\t\tcase RECEIVE_ORGANIZER_DATA: {\n\t\t\tconst { entities } = action.payload;\n\n\t\t\tif (entities && entities.item) {\n\t\t\t\treturn updeep({ 'organizerData': updeep.constant(entities.item), 'isLoading': false }, state);\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n// all items, for selector to use\n// export const getItems = state => state.item.things;\n\n//// not currently used but left in as an example of sorting list items by order\n// items belonging to the current list\n/* export const sortedItems = createSelector(\n\t[getItems],\n\t(items) => {\n\t\tlet listItems = (Object.keys(items).map(id => {\n\t\t\treturn items[id];\n\t\t})).sort(function(a, b){\n\t\t\treturn a.order - b.order; // sort to index order\n\t\t});\n\n\t\treturn listItems;\n\t}\n); */\n\n","import { createSelector } from 'reselect';\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport { normalize, schema } from 'normalizr';\nimport store from '../store';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tCREATE_ITEM_SUCCEEDED,\n\t// DELETE_ITEM_SUCCEEDED,\n\tMOVE_ITEM_UP_SUCCEEDED,\n} from './item';\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const RECEIVE_ENTITIES = 'RECEIVE_ENTITIES';\nexport const FETCH_LISTS_STARTED = 'FETCH_LISTS_STARTED';\nexport const FETCH_LISTS_FAILED = 'FETCH_LISTS_FAILED';\nexport const FETCH_LIST_DETAIL_STARTED = 'FETCH_LIST_DETAIL_STARTED';\nexport const FETCH_LIST_DETAIL_FAILED = 'FETCH_LIST_DETAIL_FAILED';\nexport const CREATE_LIST_STARTED = 'CREATE_LIST_STARTED';\nexport const CREATE_LIST_SUCCEEDED = 'CREATE_LIST_SUCCEEDED';\nexport const DELETE_LIST_SUCCEEDED = 'DELETE_LIST_SUCCEEDED';\nexport const SET_LIST_IS_PUBLIC_SUCCEEDED = 'SET_LIST_IS_PUBLIC_SUCCEEDED';\nexport const UPDATE_LIST_SUCCEEDED = 'UPDATE_LIST_SUCCEEDED';\n\nexport const RECEIVE_ORGANIZER_DATA = 'RECEIVE_ORGANIZER_DATA';\nexport const FETCH_ORGANIZER_DATA_STARTED = 'FETCH_ORGANIZER_DATA_STARTED';\nexport const FETCH_ORGANIZER_DATA_FAILED = 'FETCH_ORGANIZER_DATA_FAILED';\n\nconst itemSchema = new schema.Entity('item', {\n\t'list': ['listSchema'],\n});\nconst listSchema = new schema.Entity('list', {\n\t'item': [itemSchema],\n});\n\nfunction receiveEntities(entities) {\n\treturn {\n\t\t'type': RECEIVE_ENTITIES,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchListsStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_LISTS_STARTED,\n\t};\n}\n\nfunction fetchListsFailed() {\n\treturn {\n\t\t'type': FETCH_LISTS_FAILED\n\t};\n}\n\nexport function fetchLists({ listset, topLevelListsOnly, limit, offset } = {}) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListsStarted());\n\t\t// if the user is not logged in, don't use auth. The server should return only the lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\tlet url = `/api/v1/content/list/?`;\n\n\t\tif (topLevelListsOnly) {\n\t\t\turl += '&toplevel=1';\n\t\t}\n\n\t\tif (listset) {\n\t\t\turl += `&listset=${listset}`;\n\t\t}\n\n\t\tif (limit) {\n\t\t\turl += `&limit=${limit}`;\n\t\t}\n\n\t\tif (offset) {\n\t\t\turl += `&offset=${offset}`;\n\t\t}\n\t\treturn fetchAPI({\n\t\t\t'url': url,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tlet data = {\n\t\t\t\t'count': response.count,\n\t\t\t\t'next': response.next,\n\t\t\t\t'previous': response.previous,\n\t\t\t\t'entities': normalize(response.results, [listSchema]).entities,\n\t\t\t};\n\n\t\t\treturn dispatch(receiveEntities(data));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListsFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////\n// fetch a single list with is parent and children, if any\nexport function fetchListDetailStarted() {\n\treturn {\n\t\t'type': FETCH_LIST_DETAIL_STARTED,\n\t};\n}\n\nfunction fetchListDetailFailed() {\n\treturn {\n\t\t'type': FETCH_LIST_DETAIL_FAILED\n\t};\n}\n\nexport function fetchListDetail(id) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListDetailStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return the list if a non-authenticated user should see it.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/listdetail/?id=${id}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListDetailFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\n/////////////////////////////\n// create list\nexport const createList = (list, history) => dispatch => {\n\tdispatch(createListStarted());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/list/',\n\t\t'data': JSON.stringify(list),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\tdispatch(createListSucceeded(response));\n\t\thistory.push(`/list/${response.id}`);\n\t\treturn;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create list': error.message }));\n\t});\n};\n\nexport function createListStarted() {\n\treturn {\n\t\t'type': CREATE_LIST_STARTED,\n\t};\n}\n\nexport function createListSucceeded(list) {\n\treturn {\n\t\t'type': CREATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tlist\n\t\t}\n\t};\n}\n\n///////////////////////////\n// update list\nexport const updateList = (listId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/list/${listId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateListSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateListSucceeded(response) {\n\treturn {\n\t\t'type': UPDATE_LIST_SUCCEEDED,\n\t\t'payload': response,\n\t};\n}\n\n///////////////////////////\n// delete list\nexport const deleteList = id => (dispatch, getState) => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/list/${id}/`,\n\t\t'method': 'DELETE',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(deleteListSucceeded(id));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete list': error.message }));\n\t});\n};\n\nexport function deleteListSucceeded(id) {\n\treturn {\n\t\t'type': DELETE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport const setListIsPublic = ({ id, is_public }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/list/${id}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ is_public }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(setListIsPublicSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'set list is public': error.message }));\n\t});\n};\n\nexport function setListIsPublicSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': SET_LIST_IS_PUBLIC_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// fetch the names of my lists and their items\n// for displaying and managing list hierarchy i.e. list parent_item\n// returns only the fields that are required for this function\nfunction receiveOrganizerData(entities) {\n\treturn {\n\t\t'type': RECEIVE_ORGANIZER_DATA,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchOrganizerDataStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_ORGANIZER_DATA_STARTED,\n\t};\n}\n\nfunction fetchOrganizerDataFailed() {\n\treturn {\n\t\t'type': FETCH_ORGANIZER_DATA_FAILED\n\t};\n}\n\nexport function fetchOrganizerData(userId) {\n\t// get minimal information about all lists owned by one user\n\t// for use in organizer\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchOrganizerDataStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return only the lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/list/?expand=item&fields=id,name,item,is_public,order,parent_item&created_by=${userId}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\t\t\t\n\t\t\treturn dispatch(receiveOrganizerData(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchOrganizerDataFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch my list names': error.message }));\n\t\t});\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\n// this is initial state of lists and the list loading states\n// note that the lists's list of items is called 'item' for consistency with the database.\nconst initialListsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'count': 0,\n\t'next': '',\n\t'previous': '',\n\t'things': {},\n\t'organizerData': {},\n};\n\n// 'state' here is global state\nexport const getSearchTerm = state => {\n\treturn state.page.searchTerm;\n};\n\n// returns lists as an array not an object\nexport const getLists = state => {\n\treturn Object.keys(state.list.things).map(id => {\n\t\treturn state.list.things[id];\n\t});\n};\n\nconst getItems = state => state.item.things;\n\nexport const getPublicLists = createSelector(\n\t[getLists],\n\tlists => {\n\t\treturn lists.filter(list => {\n\t\t\treturn list.is_public;\n\t\t});\n\t}\n); \n\nexport const getMyGroupedLists = createSelector(\n\t[getLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => (list.created_by === store.getState().auth.user.id) && (list.is_public === is_public));\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\n/////////////////////////////\n// organizer data\nexport const getOrganizerLists = state => state.list.organizerData;\nconst getOrganizerItems = state => state.item.organizerData;\n\n// returns lists in an array, sorted by name\n// instead of the state.list.organizerData object, keyed by id\nexport const getSortedOrganizerLists = createSelector(\n\t[getOrganizerLists],\n\t(lists) => {\n\t\tconst listsArray = Object.keys(lists).map(id => {\n\t\t\treturn lists[id];\n\t\t});\n\n\t\tlistsArray.sort(function (a, b) {\n\t\t\treturn a.name.localeCompare(b.name);\n\t\t});\n\n\t\treturn listsArray;\n\t}\n);\n\n// lists, items should be memoized\n// even though the rest of the selector will be rerun, it's still a gain\nexport const getItemsForList = createSelector(\n\t[getLists, getItems],\n\t(lists, items) => (list) => {\n\t\tlet listItems = [];\n\n\t\tif (list) {\n\t\t\tlist.item.map((itemId) => { // eslint-disable-line array-callback-return\n\t\t\t\tlet item = { ...items[itemId] }; // shallow copy is extensible\n\n\t\t\t\tconst childList = lists.find(list => list.parent_item === itemId);\n\n\t\t\t\tif (childList) {\n\t\t\t\t\titem.childList = { ...childList };\n\t\t\t\t}\n\n\t\t\t\tlistItems.push(item);\n\t\t\t});\n\t\t}\n\t\treturn listItems;\n\t}\n);\n\n// lists, items should be memoized\n// even though the rest of the selector will be rerun, it's still a gain\nexport const getParentItemAndList = createSelector(\n\t[getOrganizerLists, getOrganizerItems],\n\t// find a lists's parent item and the parent list, if any\n\t// uses the organizer data which has minimal data for all lists belonging to that user\n\t(lists, items) => (list) => {\n\t\tlet parentItem;\n\t\tlet parentList;\n\n\t\tif (list && list.parent_item) {\n\t\t\tif (items) {\n\t\t\t\tparentItem = items[list.parent_item];\n\n\t\t\t\tif (parentItem) {\n\t\t\t\t\tparentList = lists[parentItem.list_id];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { parentItem, parentList };\n\t}\n);\n\n/////////////////////////////\n// state updates\n\n// state here is the substate state.lists\n// the book uses 'items' for the list of things i.e. lists. items\n// as 'items' for us is a specific thing, we need another name for the set of entities to be displayed i.e. the lists themselves\n// so those are globalState.lists.things\n// i.e. state.things here\nexport default function list(state = initialListsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialListsState, {});\n\t\t}\n\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\t// load lists data into store\n\t\t\tconst { count, previous, next, entities } = action.payload;\n\n\t\t\tlet things = {};\n\n\t\t\tif (entities && entities.list) {\n\t\t\t\tthings = entities.list;\n\t\t\t}\n\n\t\t\treturn updeep({\n\t\t\t\t'count': count,\n\t\t\t\t'previous': previous,\n\t\t\t\t'next': next,\n\t\t\t\t'things': updeep.constant(things), // constant provides placement instead of update, so all previous entries are removed\n\t\t\t\t'organizerData': updeep.constant({}), // new list data so clear out old organizer data, this must be loaded separately\n\t\t\t\t'isLoading': false\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LIST_DETAIL_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true\t}, state);\n\t\t}\n\n\t\tcase FETCH_LIST_DETAIL_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase CREATE_LIST_STARTED: {\n\t\t\t// at present this does nothing, it's really just to track that the action happened\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase CREATE_LIST_SUCCEEDED: {\n\t\t\tconst list = action.payload.list;\n\t\t\treturn updeep({ 'things': { [list.id]: list } }, state);\n\t\t}\n\n\t\tcase DELETE_LIST_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tcase SET_LIST_IS_PUBLIC_SUCCEEDED: {\n\t\t\tconst listId = action.payload.id;\n\n\t\t\treturn updeep({ 'things': { [listId]: { 'is_public': action.payload.is_public } } }, state);\n\t\t\t// reminder of another way to update nested arrays\n\t\t\t/* const index = state.things.findIndex((list) => list.id === action.payload.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\treturn updeep.updateIn(`things.${index}.is_public`, action.payload.is_public, state);\n\t\t\t} \n\n\t\t\treturn state; // in case list was not found\n\t\t\t*/\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\n\t\t\tfunction addItem(items) {\n\t\t\t\treturn [].concat(items, item.id);\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${item.list}.item`, addItem, state);\n\t\t}\n\n\t\t/* case DELETE_ITEM_SUCCEEDED: {\n\t\t\tfunction deleteItem(items) {\n\t\t\t\tconst itemIndex = items.findIndex((item) => item === action.payload.itemId); \n\t\t\t\tlet newItems = [].concat(items);\n\t\t\t\tnewItems.splice(itemIndex, 1);\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${action.payload.listId}.items`, deleteItem, state);\n\t\t} */\n\n\t\tcase UPDATE_LIST_SUCCEEDED: {\n\t\t\t// update editable properties\n\t\t\tconst update = {\n\t\t\t\t'name': action.payload.name,\n\t\t\t\t'description': action.payload.description,\n\t\t\t\t'is_public': action.payload.is_public,\n\t\t\t\t'modified_by': action.payload.modified_by,\n\t\t\t\t'modified_at': action.payload.modified_at,\n\t\t\t\t'parent_item': action.payload.parent_item,\n\t\t\t};\n\n\t\t\treturn updeep({ 'things': { [action.payload.id]: update } }, state);\n\t\t}\n\n\t\tcase MOVE_ITEM_UP_SUCCEEDED: {\n\t\t\tconst itemsArray = action.payload.items; // array containing the two items that have been swapped\n\t\t\t// update the Items array in their parent list, change order\n\t\t\tconst listId = itemsArray[0].list_id;\n\n\t\t\tfunction replaceItems(items) {\n\t\t\t\tlet newItems = [].concat(state.things[listId].item);\n\t\t\t\titemsArray.map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\t\tnewItems[item.order-1] = item.id;\n\t\t\t\t});\n\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${listId}.item`, replaceItems, state);\n\t\t}\n\n\t\tcase RECEIVE_ORGANIZER_DATA: {\n\t\t\t// load lists data into store\n\t\t\tconst { entities } = action.payload;\n\t\t\tlet lists = {};\n\n\t\t\tif (entities && entities.list) {\n\t\t\t\tlists = entities.list; // there is at least one list\n\t\t\t}\n\n\t\t\treturn updeep({ 'organizerData': updeep.constant(lists), 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_ORGANIZER_DATA_STARTED: {\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase FETCH_ORGANIZER_DATA_FAILED: {\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","// note that the reducers are called 'list', 'item' for consistency with the database and endpoints\n// this terminology is maintained in the store\n// in the UI components we use listReducer, itemReducer\n// this isn't ideal but absolute naming consistency seems to be required on the server for DRF FlexFields to work\n\n// import the partial reducers\nimport { combineReducers } from 'redux';\nimport errors from './errors';\nimport auth from './auth';\nimport page from './page';\nimport list from './list';\nimport item from './item';\n// by importing the actual reducer as the default, the state of each is initialised\n\nexport default combineReducers({\n\t'errors': errors,\n\t'auth': auth,\n\t'page': page,\n\t'list': list,\n\t'item': item,\n});\n","// store.js\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules/rootReducer';\n\nconst composeEnhancers = composeWithDevTools({\n\t// options like actionSanitizer, stateSanitizer\n});\n\nconst store = createStore(\n\trootReducer, \n\t// inititalState, // by not supplying initial state, we tell the store to use the defaults specified in the reducer\n\tcomposeEnhancers(\n\t\tapplyMiddleware(thunk),\n\t));\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./modules/rootReducer', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport './Search.scss';\n\nclass Search extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\n\t\tthis.closeDropdown = this.closeDropdown.bind(this);\n\t\tthis.onFocus = this.onFocus.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener('click', this.handleClick, false);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener('click', this.handleClick, false);\n\t}\n\n\thandleClick = e => {\n\t\t// clicked inside component\n\t\tif (this.node.contains(e.target)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// clicked outside component\n\t\tthis.closeDropdown();\n\t}\n\n\tcloseDropdown() {\n\t\tthis.setState({\n\t\t\t'showDropdown': false,\n\t\t});\n\t}\n\n\tonFocus() {\n\t\tthis.setState({\n\t\t\t'showDropdown': true,\n\t\t});\n\t}\n\n\trender() {\n\t\tlet searchResults;\n\t\t\n\t\tif (this.props.searchComplete) {\n\t\t\tif (this.props.searchResults.length === 0) {\n\t\t\t\tsearchResults = <div className=\"hint\">{`no results found for ${this.props.searchTerm}`}</div>;\n\t\t\t} else {\n\t\t\t\tsearchResults = <div className=\"results\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{this.props.searchResults.map((result) => {\n\t\t\t\t\t\t\tlet type = '';\n\t\t\t\t\t\t\tconst url = `/list/${result.id}`;\n\n\t\t\t\t\t\t\tif (result.type === 'List') {\n\t\t\t\t\t\t\t\ttype = 'List';\n\t\t\t\t\t\t\t} else if (result.type === 'Item') {\n\t\t\t\t\t\t\t\ttype = 'Item';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li className=\"result\" key={result.id}>\n\t\t\t\t\t\t\t\t\t<Link to={url} onClick={this.closeDropdown}><span className=\"type\">{type}: </span><span className=\"name\">{result.name}</span>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>;\n\t\t\t}\n\t\t}\n\n\t\treturn(\n\t\t\t<div className=\"search\" ref={node => this.node = node}>\n\t\t\t\t<Input className=\"form-control\"\n\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t\tonFocus={this.onFocus}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t/>\n\t\t\t\t{this.state.showDropdown && searchResults}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Search;\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport * as authReducer from '../modules/auth';\nimport * as pageReducer from '../modules/page';\n\nimport Search from '../components/Search';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\n\t\tthis.onLogout = this.onLogout.bind(this);\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\n\t\tthis.props.dispatch(authReducer.logoutUser(this.props.history));\n\t}\n\n\tonSearch = e => {\n\t\t// wait until the user stops typing before searching\n\t\tconst searchTerm = e.target.value;\n\t\tclearTimeout(this.searchTimeout);\n\n\t\tthis.searchTimeout = setTimeout(() => {\n\t\t\tthis.props.dispatch(pageReducer.searchHome(searchTerm));\n\t\t}, 500);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<Search\n\t\t\t\t\t\tonChange={this.onSearch}\n\t\t\t\t\t\tplaceholder=\"Search lists and items...\"\n\t\t\t\t\t\tsearchComplete={this.props.searchComplete}\n\t\t\t\t\t\tsearchResults={this.props.searchResults}\n\t\t\t\t\t\tsearchTerm={this.props.searchTerm}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'searchTerm': PropTypes.string.isRequired,\n\t'searchComplete': PropTypes.bool.isRequired,\n\t'searchResults': PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'searchTerm': state.page.searchTerm,\n\t'searchComplete': state.page.searchComplete,\n\t'searchResults': state.page.searchResults,\n});\n\nexport default connect(mapStateToProps)(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(e);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's handleSubmit\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email address to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row md=\"9\" lg=\"6\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.registration && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.registration}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Shown after successful registration of a new user\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Welcome extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Welcome to My Top Tens</h2>\n\t\t\t\t<p>Your account has been created.</p>\n\t\t\t\t<p>To create lists, you will need to verify your email address. An email containing a verification link has been sent to the email address with which you registered. Please click the link to verify your email address.</p>\n\t\t\t\t<p>If you do not receive the email within a few minutes, please check your Junk or Spam folder.</p>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<p>You can request a new registration email by <Link to=\"/login\">Logging in</Link> and going to your user account (click your username in the header bar).</p>\n\t\t\t\t\t\t\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nWelcome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps)(Welcome);\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.authentication && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.authentication}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","import React from 'react';\n\n// onClick should dismiss the condition that caused the FlashMessage to be displayed\n// it is the responsibility of the component that triggers the FlashMessage, to also provide the way to dismiss it\nexport default function FlashMessage({ message, type, onClick }) {\n\treturn (\n\t\t<div className={`flash-error ${type}`}>\n\t\t\t<span>{message}</span>\n\t\t\t<button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={onClick}>\n\t\t\t  <span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport './Loading.scss';\n\nfunction Loading() {\n\treturn (\n\t\t<div className='loading'>\n\t\t\t<div className='inner-tube'>\n\t\t\t\t<Spinner color='secondary' style={{ 'width': '3rem', 'height': '3rem' }} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Loading;\n","// List of all lists\n\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst ListsList = ({ children, is_public, headerText }) => {\n\treturn (\n\t\t<Container className=\"lists-list\">\n\t\t\t{headerText &&\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h3 className=\"lists-list-name\">\n\t\t\t\t\t\t{headerText}\n\t\t\t\t\t</h3>\n\t\t\t\t</Col>\n\t\t\t</Row>}\n\t\t\t<Row>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default ListsList;\n","// Set whether the list is public\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport React from 'react';\n\nimport './SetListIsPublic.scss';\n\nconst SetListIsPublic = props => {\n\tconst listId = props.listId;\n\tconst isPublic = props.isPublic ? 'public' : 'private';\n\tconst tooltip = props.isPublic ? 'Public' : 'Private';\n\n\n\tfunction onChangeIsPublic(e) {\n\t\t// map from button data to true / false\n\t\tconst value = e.target.dataset.ispublic === 'public' ? true : false;\n\t\tprops.onChangeIsPublic({ 'id': e.target.dataset.listid, 'is_public': !value });\n\t}\n\n\treturn (\n\t\t<div className=\"is-public\">\n\t\t\t<button\n\t\t\t\tonClick={onChangeIsPublic}\n\t\t\t\tdata-listid={listId}\n\t\t\t\tdata-ispublic={isPublic}\n\t\t\t\tclassName={`${isPublic} btn btn-default`}\n\t\t\t\ttitle={tooltip}\n\t\t\t>&nbsp;</button>\n\t\t</div>\n\t);\n};\n\nexport default SetListIsPublic;\n","export default function findObjectByProperty({ parentObject, property, value }) {\n\t// e.g. find a list in the store based on its id\n\t// it feels like there ought to be a smarter way to do this!\n\t// but this does work, and stops once the object is found\n\tconst keys = Object.keys(parentObject);\n\n\tfor (let i=0; i<keys.length; i++) {\n\t\tlet childObject = parentObject[keys[i]];\n\t\tif (childObject[property] === value) {\n\t\t\treturn childObject;\n\t\t}\n\t}\n\n\treturn;\n}\n","// check whether the user can perform actions on lists, items\n// items inherit permissions from their list\n\n// result depends on whether they are logged in:\n// whether they own the list:\n// whether the list is public\n\n// list is identified by id (primary key)\n// for viewing, we could trust the server that if a list is returned, it can be viewed.\n// but for editing, we need to check if the user created it\n\n// identifier should be like { 'id': 'efg' } i.e. an object with one property\n\nimport store from '../store';\nimport findObjectByProperty from './findObjectByProperty';\n\nexport function canViewList(id) {\n\t// a list can be viewed if public or if created by user\n\t//const property = Object.keys(identifier)[0];\n\t//const value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.list.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canViewList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, 'property': 'id', 'value': id });\n\n\t\tif (list && (list.is_public || (list.created_by === userId))) {\n\t\t\tcanViewList = true;\n\t\t}\n\t}\n\n\treturn canViewList;\n}\n\nexport function canEditList(id) {\n\t// a list can be edited if created by user\n\t//const property = Object.keys(identifier)[0];\n\t//const value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.list.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canEditList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, 'property': 'id', 'value': id });\n\n\t\tif (list && (list.created_by === userId)) {\n\t\t\tcanEditList = true;\n\t\t}\n\t}\n\n\treturn canEditList;\n}\n\nexport function canCreateList() {\n\t// the user can create a list if they are logged in\n\t// and have verified their email address\n\tconst state = store.getState();\n\n\tif (state.auth.isAuthenticated && state.auth.user.emailVerified) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n","// Top-level summary of a list\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport SetListIsPublic from './SetListIsPublic';\n\nimport * as permissions from '../modules/permissions';\n\nimport './ListSummary.scss';\n\nconst ListSummary = props => {\n\tlet canEdit = permissions.canEditList({ 'id': props.list.id });\n\n\treturn (\n\t\t<Col sm=\"12\" md=\"6\">\n\t\t\t<div className=\"list-summary\">\n\t\t\t\t<Link to={`/list/${props.list.id}`}>\n\t\t\t\t\t<div className=\"list-name\">\n\t\t\t\t\t\t<div>{props.list.name}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\t\t\t\t{canEdit && (\n\t\t\t\t\t<div className=\"list-summary-controls\">\n\t\t\t\t\t\t<SetListIsPublic\n\t\t\t\t\t\t\tlistId={props.list.id}\n\t\t\t\t\t\t\tisPublic={props.list.is_public}\n\t\t\t\t\t\t\tonChangeIsPublic={props.onChangeIsPublic}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button className=\"btn btn-danger\" title=\"Delete\" onClick={onDeleteList}>X</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<Link to={`/list/${props.list.id}`}>\n\t\t\t\t\t<div className=\"list-description\">{props.list.description}</div>\n\t\t\t\t</Link>\n\t\t\t\t\n\t\t\t\t{props.showCreatedBy && \n\t\t\t\t\t<div className=\"list-created-by\">{props.list.created_by_username}</div>\n\n\t\t\t\t}\n\t\t\t</div>\n\t\t</Col>\n\t);\n\n\tfunction onDeleteList(e) {\n\t\tprops.onDeleteList({ 'id': props.list.id, 'name': props.list.name });\n\t}\n};\n\nexport default ListSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.scss';\n// adapted from http://jasonwatmore.com/post/2017/03/14/react-pagination-example-with-logic-like-google\n// major changes to render only pagination controls, not data\n// replaced <a> with <button> for accessibility\n \nclass Pagination extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { 'pager': {} };\n\t}\n \n\tcomponentDidMount() {\n\t\t// set page if there is a count\n\t\t// also check for currentPage. Parent component may re-render, causing this component to be recreated.\n\t\tif (this.props.count) {\n\t\t\tconst initialPage = this.props.currentPage ? this.props.currentPage : this.props.defaultPage;\n\t\t\tthis.setPage(initialPage);\n\t\t}\n\t}\n \n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t// reset page if items array has changed\n\t\tif (this.props.count !== prevProps.count) {\n\t\t\tthis.setPage(this.props.defaultPage);\n\t\t}\n\t}\n \n\tsetPage(pageNumber) {\n\t\tvar { count, pageSize } = this.props;\n\t\tvar pager = this.state.pager;\n \n\t\t// get new pager object for specified page\n\t\tpager = this.getPager(count, pageNumber, pageSize);\n\n\t\tif (pageNumber < 1 || pageNumber > pager.totalPages) {\n\t\t\treturn;\n\t\t}\n\n\t\tpageNumber = Math.min(pageNumber, pager.totalPages);\n \n\t\t// update state\n\t\tthis.setState({ 'pager': pager });\n \n\t\tthis.props.onChangePage(pageNumber);\n\t}\n \n\tgetPager(totalItems, currentPage, pageSize) {\n\t\t// default to first page\n\t\tcurrentPage = currentPage || 1;\n \n\t\t// default page size is 10\n\t\tpageSize = pageSize || 10;\n \n\t\t// calculate total pages\n\t\tvar totalPages = Math.ceil(totalItems / pageSize);\n \n\t\tvar startPage, endPage;\n\t\tif (totalPages <= 10) {\n\t\t\t// less than 10 total pages so show all\n\t\t\tstartPage = 1;\n\t\t\tendPage = totalPages;\n\t\t} else {\n\t\t\t// more than 10 total pages so calculate start and end pages\n\t\t\tif (currentPage <= 6) {\n\t\t\t\tstartPage = 1;\n\t\t\t\tendPage = 10;\n\t\t\t} else if (currentPage + 4 >= totalPages) {\n\t\t\t\tstartPage = totalPages - 9;\n\t\t\t\tendPage = totalPages;\n\t\t\t} else {\n\t\t\t\tstartPage = currentPage - 5;\n\t\t\t\tendPage = currentPage + 4;\n\t\t\t}\n\t\t}\n \n\t\t// calculate start and end item indexes\n\t\tvar startIndex = (currentPage - 1) * pageSize;\n\t\tvar endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n \n\t\t// create an array of pages to ng-repeat in the pager control\n\t\tvar pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n \n\t\t// return object with all pager properties required by the view\n\t\treturn {\n\t\t\t'totalItems': totalItems,\n\t\t\t'currentPage': currentPage,\n\t\t\t'pageSize': pageSize,\n\t\t\t'totalPages': totalPages,\n\t\t\t'startPage': startPage,\n\t\t\t'endPage': endPage,\n\t\t\t'startIndex': startIndex,\n\t\t\t'endIndex': endIndex,\n\t\t\t'pages': pages\n\t\t};\n\t}\n \n\trender() {\n\t\tvar pager = this.state.pager;\n \n\t\tif (!pager.pages || pager.pages.length <= 1) {\n\t\t\t// don't display pager if there is only 1 page\n\t\t\treturn null;\n\t\t}\n \n\t\treturn (\n\t\t\t<ul className=\"pagination\">\n\t\t\t\t<li className={pager.currentPage === 1 ? 'disabled' : ''}>\n\t\t\t\t\t<button type=\"button\" className=\"btn pagination first\" onClick={() => this.setPage(1)}>First</button>\n\t\t\t\t</li>\n\t\t\t\t<li className={pager.currentPage === 1 ? 'disabled' : ''}>\n\t\t\t\t\t<button type=\"button\" className=\"btn pagination previous\" onClick={() => this.setPage(pager.currentPage - 1)}>Previous</button>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"spacer\"></li>\n\t\t\t\t{pager.pages.map((page, index) =>\n\t\t\t\t\t<li key={index} className={pager.currentPage === page ? 'active' : ''}>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn pagination page\" onClick={() => this.setPage(page)}>{page}</button>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t<li className=\"spacer\"></li>\n\t\t\t\t<li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n\t\t\t\t\t<button type=\"button\" className=\"btn pagination next\" onClick={() => this.setPage(pager.currentPage + 1)}>Next</button>\n\t\t\t\t</li>\n\t\t\t\t<li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n\t\t\t\t\t<button type=\"button\" className=\"btn pagination last\" onClick={() => this.setPage(pager.totalPages)}>Last</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nPagination.propTypes = {\n\t'count': PropTypes.number,\n\t'onChangePage': PropTypes.func.isRequired,\n\t'defaultPage': PropTypes.number,\n\t'pageSize': PropTypes.number\n};\n\nPagination.defaultProps = {\n\t'count': 0,\n\t'defaultPage': 1,\n\t'pageSize': 10\n};\n\nexport default Pagination;\n","// Page to display list of lists\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ListsList from '../components/ListsList';\nimport ListSummary from '../components/ListSummary';\nimport './ListsPage.scss';\nimport Pagination from '../components/Pagination';\n//import Search from '../components/Search';\n\nclass ListsPage extends Component {\n\t/*onSearch = e => {\n\t\tthis.props.onSearch(e.target.value);\n\t} */\n\n\tonAddList = () => {\n\t\tthis.props.history.push('/newlist');\n\t}\n\n\trenderPublicLists() {\n\t\tconst { publicLists, onChangeIsPublic, onDeleteList } = this.props;\n\n\t\treturn (\n\t\t\t<ListsList headerText=\"All public lists\">\n\t\t\t\t{publicLists.map(list => \n\t\t\t\t\t<ListSummary\n\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tonChangeIsPublic={onChangeIsPublic}\n\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\tshowCreatedBy={true}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ListsList>\n\t\t);\n\t}\n\n\trenderMyLists() {\n\t\tconst { myLists, onChangeIsPublic, onDeleteList } = this.props;\n\n\t\treturn Object.keys(myLists).map((is_public, index) => {\n\t\t\tconst listsByIsPublic = myLists[is_public];\n\t\t\tlet headerText = is_public === 'true' ? 'My public lists' : 'My private lists';\n\n\t\t\treturn (\n\t\t\t\t<div key={index}>\n\t\t\t\t\t{(listsByIsPublic.length > 0) && (\n\t\t\t\t\t\t<ListsList is_public={is_public} headerText={headerText}>\n\t\t\t\t\t\t\t{listsByIsPublic.map(list => \n\t\t\t\t\t\t\t\t<ListSummary\n\t\t\t\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\t\t\t\tonChangeIsPublic={onChangeIsPublic}\n\t\t\t\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ListsList>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trenderTabs() {\n\t\treturn (\n\t\t\t<ul><li>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.props.selectedTab === 'my-lists'? 'selected' : ''}\n\t\t\t\t\tid='my-lists'\n\t\t\t\t\tonClick={this.props.handleTabClick}>My lists\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.props.selectedTab === 'public-lists'? 'selected' : ''}\n\t\t\t\t\tid='public-lists'\n\t\t\t\t\tonClick={this.props.handleTabClick}>Public lists\n\t\t\t\t</span>\n\t\t\t</li></ul>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet listsList;\n\n\t\tif (this.props.selectedTab === 'my-lists') {\n\t\t\tlistsList = this.renderMyLists();\n\t\t} else if (this.props.selectedTab === 'public-lists') {\n\t\t\tlistsList = this.renderPublicLists();\n\t\t}\n\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"lists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet createList;\n\t\tif (this.props.canCreateList()) {\n\t\t\tcreateList = (<button\n\t\t\t\tclassName=\"btn btn-primary create-list\"\n\t\t\t\tonClick={this.onAddList}\n\t\t\t>+ New list</button>);\n\t\t} else if (this.props.auth.isAuthenticated) {\n\t\t\tcreateList = (<div>In order to create new lists, please verify your email address by clicking the link in the email you were sent when you registered. You can request a new verification email from your <Link to=\"/account\">Account</Link> page.</div>);\n\t\t} else {\n\t\t\tcreateList = (<div>In order to create new lists, please <Link to=\"/login\">log in</Link> or <Link to=\"/register\">register a My Top Tens account</Link>.</div>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"lists-list\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col  className=\"top-level-lists-control\">\n\t\t\t\t\t\t\t<Label check>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tdefaultChecked={this.props.topLevelListsOnly}\n\t\t\t\t\t\t\t\t\tonChange={this.props.handleTopLevelListsChange}/>{' '}\n\t\t\t\t\t\t\t\tShow top level lists only\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{createList}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t{this.props.auth.isAuthenticated && <div className=\"tabs\">\n\t\t\t\t\t{this.renderTabs()}\n\t\t\t\t\t<div className=\"clearing\"></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"lists\">\n\t\t\t\t\t{listsList}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tcount={this.props.count}\n\t\t\t\t\t\t\tpageSize={this.props.pageSize}\n\t\t\t\t\t\t\tcurrentPage={this.props.currentPage}\n\t\t\t\t\t\t\tonChangePage={this.props.onChangePage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ListsPage);\n","// Home.js\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as listReducer from '../modules/list';\nimport * as pageReducer from '../modules/page';\nimport { getPublicLists, getMyGroupedLists } from '../modules/list';\n\nimport FlashMessage from '../components/FlashMessage';\nimport Loading from '../components/Loading';\nimport ListsPage from '../components/ListsPage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\nimport { PAGE_SIZE } from '../constants';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tprops.dispatch(clearErrors());\n\n\t\t// which set of lists to view\n\t\t// if logged in, default my-lists\n\t\t// if not logged in, only show public-lists\n\t\tlet listset = 'public-lists';\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(props.location.search);\n\t\t\tlistset = urlParams.get('listset') || 'my-lists';\n\t\t}\n\n\t\tthis.setListSetURL(listset);\n\n\t\tthis.state = {\n\t\t\t'selectedTab': listset,\n\t\t\t'topLevelListsOnly': true,\n\t\t\t'currentPage': 1,\n\t\t};\n\n\t\tthis.onChangePage = this.onChangePage.bind(this);\n\t\tthis.handleTopLevelListsChange = this.handleTopLevelListsChange.bind(this);\n\t\tthis.handleTabClick = this.handleTabClick.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchLists({});\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user's status has changed, refresh Lists\n\t\tif(prevProps.auth.user.token !== this.props.auth.user.token){\n\t\t\tthis.fetchLists({});\n\t\t}\n\n\t\t// user has just logged out\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': 'public-lists',\n\t\t\t});\n\n\t\t\tthis.setListSetURL('public-lists');\n\t\t}\n\t}\n\n\t// refresh lists based on user choices\n\tfetchLists({ listset = this.state.listset, topLevelListsOnly = this.state.topLevelListsOnly, currentPage = this.state.currentPage }) {\n\t\t// use state values by default\n\t\t// however these may be passed in by functions that set state because setState is not synchronous\n\t\tthis.props.dispatch(listReducer.fetchLists({\n\t\t\tlistset,\n\t\t\ttopLevelListsOnly,\n\t\t\t'limit': PAGE_SIZE,\n\t\t\t'offset': (currentPage - 1) * PAGE_SIZE,\n\t\t}));\n\t}\n\n\tonChangePage(currentPage) {\n\t\t// update state with new page of items\n\t\tthis.setState({ 'currentPage': currentPage });\n\n\t\tif (currentPage !== this.state.currentPage) {\n\t\t\tthis.fetchLists({ currentPage });\n\t\t}\n\t}\n\n\tonSearch = searchTerm => {\n\t\t// wait until the user pauses in typing before searching\n\t\tclearTimeout(this.searchTimeout);\n\t\tthis.searchTimeout = setTimeout(() => {\n\t\t\tthis.props.dispatch(pageReducer.searchHome(searchTerm));\n\t\t}, 500);\n\t}\n\n\tonChangeIsPublic = ({ id, is_public }) => {\n\t\tthis.props.dispatch(listReducer.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = ({ id, name }) => {\n\t\tif (confirm(`Are you sure you want to delete the list ${name}`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t\tthis.props.dispatch(listReducer.deleteList(id));\n\t\t}\n\t}\n\n\thandleTopLevelListsChange() {\n\t\tconst topLevelListsOnly = !this.state.topLevelListsOnly;\n\t\tthis.setState({\n\t\t\t'topLevelListsOnly': topLevelListsOnly,\n\t\t});\n\n\t\tthis.fetchLists({ topLevelListsOnly });\n\t}\n\n\tsetListSetURL(listset) { // indicate current list set in URL; depends on selected tab\n\t\tlet URL = `${this.props.location.pathname}?listset=${listset}`;\n\t\tthis.props.history.push(URL);\n\t}\n\n\thandleTabClick = (e) => {\n\t\tconst selectedTab = e.target.id;\n\n\t\tif (this.state.selectedTab !== selectedTab) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': selectedTab,\n\t\t\t});\n\n\t\t\tthis.setListSetURL(e.target.id);\n\t\t\tthis.fetchLists({ 'listset': selectedTab });\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t{this.props.isLoading && <Loading />}\n\t\t\t\t<ListsPage\n\t\t\t\t\tauth={this.props.auth}\n\t\t\t\t\tmyLists={this.props.myLists}\n\t\t\t\t\tpublicLists={this.props.publicLists}\n\t\t\t\t\tcanCreateList={permissions.canCreateList}\n\t\t\t\t\tonCreateList={this.onCreateList}\n\t\t\t\t\tonChangeIsPublic={this.onChangeIsPublic}\n\t\t\t\t\tonDeleteList={this.onDeleteList}\n\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t\ttopLevelListsOnly={this.state.topLevelListsOnly}\n\t\t\t\t\thandleTopLevelListsChange={this.handleTopLevelListsChange}\n\t\t\t\t\thandleTabClick={this.handleTabClick}\n\t\t\t\t\tselectedTab={this.state.selectedTab}\n\t\t\t\t\tcount={this.props.count}\n\t\t\t\t\tpageSize={PAGE_SIZE}\n\t\t\t\t\tcurrentPage={this.state.currentPage}\n\t\t\t\t\tonChangePage={this.onChangePage}\n\t\t\t\t\t//searchTerm={this.props.searchTerm}\n\t\t\t\t\t//searchComplete={this.props.searchComplete}\n\t\t\t\t\t//searchResults={this.props.searchResults}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'publicLists': PropTypes.array.isRequired,\n\t'myLists': PropTypes.object.isRequired,\n\t'count': PropTypes.number, // data may not yet be loaded\n\t'next': PropTypes.string, // there may be no 'next' page\n\t'previous': PropTypes.string, // there may be no 'previous' page\n\t//'searchTerm': PropTypes.string.isRequired,\n\t//'searchComplete': PropTypes.bool.isRequired,\n\t//'searchResults': PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.list.isLoading,\n\t'publicLists': getPublicLists(state),\n\t'myLists': getMyGroupedLists(state),\n\t'count': state.list.count,\n\t'next': state.list.next,\n\t'previous': state.list.previous,\n\t//'searchTerm': state.page.searchTerm,\n\t//'searchComplete': state.page.searchComplete,\n\t//'searchResults': state.page.searchResults,\n});\n\nexport default connect(mapStateToProps)(withRouter(Home));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\nimport { createList } from '../modules/list';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\n\nimport ValidatedForm from '../components/ValidatedForm.js';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nimport './CreateList.scss';\n\nclass CreateList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'name': '',\n\t\t\t'description': '',\n\t\t};\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`item${i}_name`] = '';\n\t\t\tthis.state[`item${i}_description`] = '';\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\n\t\tprops.dispatch(clearErrors());\n\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(props.location.search);\n\t\t\tthis.state.parentItemId = urlParams.get('parent-item-id');\n\t\t\tthis.state.parentItemName = urlParams.get('parent-item-name');\n\t\t\tthis.state.parentListName = urlParams.get('parent-list-name');\n\t\t\tthis.state.parentListId = urlParams.get('parent-list-id');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tcancel(e) {\n\t\tthis.props.history.push('/');\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tlet newList = {\n\t\t\t'name': this.state.name,\n\t\t\t'description': this.state.description,\n\t\t\t'item': [],\n\t\t};\n\t\t\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tif (this.state[`item${i}`] !== '') {\n\t\t\t\tconst newItem = {\n\t\t\t\t\t'name': this.state[`item${i}_name`],\n\t\t\t\t\t'description': this.state[`item${i}_description`],\n\t\t\t\t\t'order': i,\n\t\t\t\t};\n\t\t\t\tnewList.item.push(newItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.state.parentItemId) {\n\t\t\tnewList.parent_item = this.state.parentItemId;\n\t\t}\n\n\t\tthis.onCreateList(newList);\n\t}\n\n\tonCreateList = (newList) => {\n\t\tthis.props.dispatch(createList(newList, this.props.history));\n\t}\n\n\n\tcomponentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user cannot create a list, redirect to Home\n\t\tif(!permissions.canCreateList() && !this.props.auth.isLoading){\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderItemInputs() {\n\t\tlet elements = [];\n\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\telements.push(\n\t\t\t\t<div className=\"form-group\" key={`item${i}`}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\" className=\"item-name\">\n\t\t\t\t\t\t\t<Label for={`item${i}_name`}>Item {i}</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_name`}\n\t\t\t\t\t\t\t\tid={`item${i}_name`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_name`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Enter the item name\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\" className=\"item-description\">\n\t\t\t\t\t\t\t<Label for={`item${i}_description`}>Item {i} description</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tname={`item${i}_description`}\n\t\t\t\t\t\t\t\tid={`item${i}_description`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_description`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Enter the item description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>);\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container className=\"create-list\">\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<h2>Create a new list</h2>\n\t\t\t\t{this.state.parentItemName && (\n\t\t\t\t\t<div className=\"parent-item\"><Link to={`/list/${this.state.parentListId}`}>{this.state.parentListName}</Link> > {this.state.parentItemName}</div>\n\t\t\t\t)}\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\" className=\"list-name\">\n\t\t\t\t\t\t\t\t<Label for=\"name\">List name</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.name }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Name is required</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\" className=\"list-description\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">List description</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.description }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.renderItemInputs()}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSave list\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t{this.props.errors.lists && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.lists}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nCreateList.propTypes = {\n\t//'createList': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n});\n\nexport default connect(mapStateToProps)(withRouter(CreateList));\n","// An input or textarea that can be edited by clicking on it\n// It can be blank, or required\n// note custom property data-state which is the name of the property in this.state\n// Can be used with keyboard only\n// It is a regular form with cancel, submit. This allows keyboard navigation but the form stays open on blur - otherwise cancel would not be possible with keyboard.\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Row, Col, Label, Input } from 'reactstrap';\nimport './EditableTextField.scss';\nimport Markdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\n\nclass EditableTextField extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'showInput': false,\n\t\t\t'isValidated': false,\n\t\t\t'initialValue': '',\n\t\t\t'overflowActive': false,\n\t\t\t'type': props.textarea ? 'textarea' : 'input',\n\t\t};\n\n\t\tif (props.textarea === true) {\n\t\t\tthis.state.expanded = false;\n\t\t}\n\n\t\tthis.showInput = this.showInput.bind(this);\n\t\tthis.onKeyUp = this.onKeyUp.bind(this);\n\t\tthis.toggleMore = this.toggleMore.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\t// does the text overflow its container?\n\tisOverflowActive() {\n\t\tif (!this.props.textarea) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst element = this.textElement;\n\t\tif (!element) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst overflowActive = element.offsetHeight < element.scrollHeight;\n\n\t\tif (overflowActive !== this.state.overflowActive) {\n\t\t\tthis.setState({ 'overflowActive': overflowActive });\n\t\t}\n\t}\n\n\ttoggleMore() {\n\t\tthis.setState({\n\t\t\t'expanded': !this.state.expanded,\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.isOverflowActive();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.isOverflowActive();\n\t}\n\n\tonKeyUp(e) {\n\t\tvar code = e.keyCode || e.which;\n\t\tif(code === 13) { //13 is the enter keycode\n\t\t\tthis.showInput(e);\n\t\t}\n\t}\n\n\tshowInput(e) {\n\t\tconst isPlaceholder = e.target.classList.contains('placeholder');\n\n\t\tif (!isPlaceholder) {\n\t\t\tthis.setState({\n\t\t\t\t'initialValue': e.target.textContent,\n\t\t\t});\n\t\t}\n\t\tthis.toggleInput();\n\t}\n\n\ttoggleInput() {\n\t\tconst newShowInputValue = !this.state.showInput;\n\n\t\t// optionally, tell the parent component whether the field is being edited\n\t\tif (typeof this.props.isEditing === 'function') {\n\t\t\tthis.props.isEditing(newShowInputValue);\n\t\t}\n\n\t\tthis.setState({\n\t\t\t'showInput': newShowInputValue,\n\t\t});\n\t}\n\n\tcancel = () => {\n\t\t// restore the initial value of the field as though the user had just entered it\n\t\tconst fakeEvent = {\n\t\t\t'target': {\n\t\t\t\t'dataset': { 'state': this.props['data-state'] },\n\t\t\t\t'value': this.state.initialValue,\n\t\t\t}\n\t\t};\n\t\tthis.props.handleInputChange(fakeEvent);\n\t\tthis.toggleInput();\n\t}\n\n\tvalidate = () => {\n\t\t// custom validation for consistency with other forms\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst elem = formEl.querySelector(this.state.type);\n\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\tif (!elem.validity.valid) {\n\t\t\tlet message = elem.validationMessage;\n\t\t\terrorLabel.textContent = message;\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\terrorLabel.textContent = '';\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\t// the user has typed a new value and the parent component should be notified\n\t\t\n\t\tconst inputElement = e.target.querySelector(this.state.type);\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.handleNewValue(inputElement);\n\t\t\tthis.toggleInput();\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t}\n\n\trenderValue() {\n\t\t// construct the display of the text value\n\t\tlet expanded = '';\n\t\tif (this.state.expanded) {\n\t\t\texpanded = 'expanded';\n\t\t}\n\n\t\tlet showMoreButton = false;\n\n\t\tif (this.state.overflowActive || this.state.expanded) {\n\t\t\tshowMoreButton = true;\n\t\t}\n\n\t\tlet moreButtonText = 'More...';\n\t\tif (this.state.expanded) {\n\t\t\tmoreButtonText = 'Less...';\n\t\t}\n\n\t\tlet onClick;\n\t\tlet onKeyUp;\n\t\tlet tabIndex = '';\n\n\t\tif (this.props.canEdit) {\n\t\t\ttabIndex = '0';\n\t\t\tonClick=this.showInput;\n\t\t\tonKeyUp=this.onKeyUp;\n\t\t}\n\n\t\tlet item = (\n\t\t\t<span>\n\t\t\t\t<span className={`text ${expanded}`}\n\t\t\t\t\tref={ref => (this.textElement = ref)}\n\t\t\t\t\tonKeyUp={onKeyUp}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\ttabIndex={tabIndex}\t\n\t\t\t\t>\n\t\t\t\t\t<Markdown \n\t\t\t\t\t\tescapeHtml={true}\n\t\t\t\t\t\tsource={this.props.value} \n\t\t\t\t\t/>\n\t\t\t\t\t{showMoreButton && <span className=\"fader\"></span>}</span>\n\t\t\t\t{showMoreButton && <button type=\"button\" className=\"show-more\" onClick={this.toggleMore}>{moreButtonText}</button>}\n\t\t\t</span>\n\t\t);\n\n\t\treturn item;\n\t}\n\n\trender() {\n\t\tlet type = 'text';\n\t\tif (this.props.textarea) {\n\t\t\ttype = 'textarea';\n\t\t}\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (this.props.className) {\n\t\t\tclassNames = [...this.props.className];\n\t\t\tdelete this.props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\tconst showInput = this.state.showInput;\n\t\tlet item;\n\n\t\tif (this.props.canEdit) {\n\t\t\tif (showInput) {\t\t\t\n\t\t\t\titem = (\n\t\t\t\t\t<form\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\t\tclassName={classNames}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<Label for={this.props.id}>{this.props.label}</Label>\n\t\t\t\t\t\t\t\t\t<Input autoFocus\n\t\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\t\tname={this.props.id}\n\t\t\t\t\t\t\t\t\t\trequired={this.props.required}\n\t\t\t\t\t\t\t\t\t\tdata-state={this.props['data-state']}\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props['data-entityid']}\n\t\t\t\t\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\t\t\t\t\tonChange={this.props.handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"controls\">\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\" onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tDone\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span className=\"hint\">You can use <Link to=\"https://help.github.com/articles/basic-writing-and-formatting-syntax/\">Markdown</Link></span>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</form>);\n\t\t\t} else {\n\t\t\t\tif (this.props.value !== '') {\n\t\t\t\t\titem = this.renderValue();\n\t\t\t\t} else {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"placeholder\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\tonClick={this.showInput}\n\t\t\t\t\t\t\tonKeyUp={this.onKeyUp}\n\t\t\t\t\t\t>{this.props.placeholder}</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.props.value !== '') {\n\t\t\t\titem = this.renderValue();\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className={`editable-text-field ${showInput && 'editing'}`}>\n\t\t\t\t{ item }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditableTextField;\n","// An individual item\n// It is a stateful component so that the description field can be shown only if there is a name defined.\n\nimport store from '../store';\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport EditableTextField from './EditableTextField.js';\nimport * as permissions from '../modules/permissions';\nimport './Item.scss';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nclass Item extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\t'isEditingName': false,\n\t\t};\n\t\t//console.log('item props, ', props);\n\t\tthis.onCreateChildList = this.onCreateChildList.bind(this);\n\t\tthis.setIsEditingName = this.setIsEditingName.bind(this);\n\t\tthis.onMoveUp = this.onMoveUp.bind(this);\n\t\tthis.onMoveDown = this.onMoveDown.bind(this);\n\t}\n\n\tsetIsEditingName(showInput) {\n\t\tthis.setState({\n\t\t\t'isEditingName': showInput,\n\t\t});\n\t}\n\n\tonCreateChildList = () => {\n\t\tthis.props.onCreateChildList(this.props.item);\n\t}\n\n\tonMoveUp = () => {\n\t\tthis.props.onMoveItemUp(this.props.item.id);\n\t}\n\n\tonMoveDown = () => {\n\t\tthis.props.onMoveItemDown(this.props.item.id);\n\t}\n\n\trender() {\n\t\tlet showDescription = true;\n\t\tif (this.props.item.name === '') {\n\t\t\tshowDescription = false;\n\t\t} else if (this.state.isEditingName && store.getState().item.things[this.props.item.id] && store.getState().item.things[this.props.item.id].name === '') {\n\t\t\tshowDescription = false;\n\t\t}\n\n\t\tlet canCreateChildList = true; // should the \"create child list\" button be visible?\n\n\t\tif (this.props.item.childList || // there is already a child list\n\t\t\tthis.props.item.name === '' || // there is no item\n\t\t\tthis.state.isEditingName || // the item name is being edited\n\t\t\t!this.props.canEdit) { // the user can't edit this list\n\t\t\tcanCreateChildList = false;\n\t\t}\n\n\t\tlet canViewChildList = false;\n\n\t\t// child list exists and user can view it\n\t\tif (this.props.item.childList && permissions.canViewList(this.props.item.childList.id)) {\n\t\t\tcanViewChildList = true;\n\t\t}\n\n\t\tlet childList;\n\n\t\tif (canCreateChildList) {\n\t\t\tchildList = (<button className=\"btn btn-primary create-childlist\" onClick={this.onCreateChildList}>Create child list</button>);\t\n\t\t} else if (canViewChildList) {\n\t\t\tchildList = (\n\t\t\t\t<div className=\"child-list\">\t\n\t\t\t\t\t<Link to={`/list/${this.props.item.childList.id}`}>{this.props.item.childList.name} ></Link>\n\t\t\t\t</div>);\n\t\t}\n\n\t\tlet showUp = true;\n\t\tlet showDown = true;\n\n\t\tif (!this.props.canEdit ||\n\t\t\tthis.props.item.name === '' ||\n\t\t\t!showDescription) { // assume that showDescription means there is a saved name i.e. the item exists\n\t\t\tshowUp = false;\n\t\t\tshowDown = false;\n\t\t} else if (this.props.item.order === 1) {\n\t\t\tshowUp = false;\n\t\t} else if (this.props.item.order === MAX_ITEMS_IN_LIST) {\n\t\t\tshowDown = false;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"item-container\">\n\t\t\t\t<div className=\"item-header\">\n\t\t\t\t\t<span className=\"order\">{this.props.item.order}:</span><EditableTextField\n\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\tname={`${this.props.item.order}_name`}\n\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\tplaceholder=\"Click here to add an item\"\n\t\t\t\t\t\tdata-state={`${this.props.item.order}_name`}\n\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\tid={`${this.props.item.order}_name`} // id of the html element\n\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\tisEditing={this.setIsEditingName}\n\t\t\t\t\t\tvalue={this.props.item.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{childList}\n\t\t\t\t{showDescription &&\n\t\t\t\t\t<div className=\"item-body\">\n\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\t\tname={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tplaceholder=\"Click here to add a description\"\n\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\tdata-state={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\t\tid={`${this.props.item.order}_description`} // id of the html element\n\t\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\t\tvalue={this.props.item.description}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{showUp && <button className=\"btn btn-secondary move-up\" onClick={this.onMoveUp}>Up</button>\n\t\t\t\t}\n\t\t\t\t{showDown && <button className=\"btn btn-secondary move-down\" onClick={this.onMoveDown}>Down</button>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Item;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\n\nimport * as itemsReducer from '../modules/item';\n\nimport { MAX_ITEMS_IN_LIST } from '../constants';\nimport Item from './Item';\n\nclass ItemsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\n\t\t// set up the state to hold each item's name and description\n\t\t// coded by order\n\t\t// this is not elegant but keeps state flat\n\t\tfor (let i=1; i<= MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`${i}_name`] = '';\n\t\t\tthis.state[`${i}_description`] = '';\n\t\t}\n\n\t\t// build the items\n\t\t// each item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst items = this.props.items;\n\n\t\tObject.keys(items).forEach((key) => {\n\t\t\tif (items[key].order && items[key].order <= MAX_ITEMS_IN_LIST) {\n\t\t\t\tconst order = items[key].order;\n\n\t\t\t\tthis.state[`${order}_id`] = items[key].id;\n\t\t\t\tthis.state[`${order}_name`] = items[key].name;\n\t\t\t\tthis.state[`${order}_description`] = items[key].description;\n\n\t\t\t\t// child lists\n\t\t\t\tif (items[key].childList) {\n\t\t\t\t\tthis.state[`${order}_childList`] = items[key].childList;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tonMoveItemUp = (itemId) => {\n\t\tthis.props.dispatch(itemsReducer.moveItemUp({ itemId }));\n\t}\n\n\tonMoveItemDown = (itemId) => {\n\t\tthis.props.dispatch(itemsReducer.moveItemDown({ itemId }));\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tlet update = {};\n\t\tfor (let i=0; i<this.props.items.length; i++) {\n\t\t\tconst item = this.props.items[i];\n\n\t\t\t// first the list is loaded and this just gives ids\n\t\t\t// only when the full data are loaded and getItemsForList recalculated do we find the childList\n\t\t\tif (prevProps.items[i].id !== this.props.items[i].id ||\n\t\t\t\tprevProps.items[i].childList !== this.props.items[i].childList) {\n\t\t\t\tconst order = item.order;\n\n\t\t\t\t// update item properties\n\t\t\t\tupdate[`${order}_id`] = item.id;\n\t\t\t\tupdate[`${order}_name`] = item.name;\n\t\t\t\tupdate[`${order}_description`] = item.description;\n\n\t\t\t\t// set child list if exists\n\t\t\t\t// or set to null if it does not\n\t\t\t\tupdate[`${order}_childList`] = item.childList;\n\t\t\t}\n\t\t}\n\t\t// only setState if there is a change to make\n\t\t// otherwise it triggers endless updates\n\t\tif (Object.keys(update).length > 0) {\n\t\t\tthis.setState(update);\n\t\t}\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst itemId = element.dataset.entityid;\n\n\t\t// the item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(itemsReducer.updateItem(itemId, propertyName, value));\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewItemForm': !this.state.showNewItemForm });\n\t}\n\n\trenderItemsList() {\n\t\tlet elements = [];\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tconst name = this.state[`${i}_name`];\n\t\t\tconst canEdit = this.props.canEdit;\n\t\t\tif (name || canEdit) {\n\t\t\t\telements.push(\n\t\t\t\t\t<Row key={`item${i}`}>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\tkey={`item${i}`}\n\t\t\t\t\t\t\t\titem={{\n\t\t\t\t\t\t\t\t\t'id': this.state[`${i}_id`],\n\t\t\t\t\t\t\t\t\t'order': i,\n\t\t\t\t\t\t\t\t\t'name': name,\n\t\t\t\t\t\t\t\t\t'description': this.state[`${i}_description`],\n\t\t\t\t\t\t\t\t\t'childList': this.state[`${i}_childList`],\n\t\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\tcanEdit={canEdit}\n\t\t\t\t\t\t\t\tonCreateChildList={this.props.onCreateChildList}\n\t\t\t\t\t\t\t\tonMoveItemUp={this.onMoveItemUp}\n\t\t\t\t\t\t\t\tonMoveItemDown={this.onMoveItemDown}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"items-list\">\n\t\t\t\t{this.renderItemsList()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(ItemsPage);\n","// a single list to be displayed in the Organizer\n// can be expanded to show items\n// an item can be selected\n\nimport React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\n\nclass OrganizerList extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\t//console.log('item props ', props);\n\t\tthis.state = {\n\t\t\t'showItems': props.showItems,\n\t\t};\n\n\t\tthis.onSelectItem = this.onSelectItem.bind(this);\n\t\tthis.onShowItems = this.onShowItems.bind(this);\n\t}\n\n\tonShowItems() {\n\t\tthis.setState({\n\t\t\t'showItems': !this.state.showItems,\n\t\t});\n\t}\n\n\tonSelectItem (e) {\n\t\tthis.props.onSelectItem({ 'list': this.props.list, 'order': e.target.dataset.order, 'childListId': e.target.dataset.childlistid });\n\t}\n\n\trenderItems() {\n\t\tconst selectedItemOrder = parseInt(this.props.selectedItemOrder); // element property is a string. Order should be a number.\n\t\tconst listId = this.props.list.id;\n\t\tconst selectedListId = this.props.selectedListId;\n\n\t\treturn (\n\t\t\t<div className=\"items\">\n\t\t\t\t{this.props.itemOrganizerData[listId].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\t\tconst isSelectedItem = ((listId === selectedListId) && (item.order === selectedItemOrder));\n\n\t\t\t\t\tlet childListElm;\n\n\t\t\t\t\tif (item.childListId) {\n\t\t\t\t\t\tconst childList = this.props.listOrganizerData.find((list) => list.id === item.childListId);\n\t\t\t\t\t\tchildListElm = (\n\t\t\t\t\t\t\t<span className=\"child-list\">> {childList.name}</span>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.name) {\n\t\t\t\t\t\treturn (<div key={item.id} className={`item ${isSelectedItem ? 'selected' : ''}`}>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tonClick={this.onSelectItem}\n\t\t\t\t\t\t\t\tdata-order={item.order}\n\t\t\t\t\t\t\t\tdata-childlistid={item.childListId}\n\t\t\t\t\t\t\t><span className=\"order\">{item.order}:</span>{item.name}</span>{childListElm}\n\t\t\t\t\t\t</div>);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst name = this.props.list.name;\n\n\t\tconst isSelectedList = (this.props.list.id === this.props.selectedListId);\n\n\t\tlet showItemsButtonText = '+';\n\n\t\tif (this.state.showItems) {\n\t\t\tshowItemsButtonText = '-';\n\t\t}\n\n\t\treturn (\n\t\t\t<Row className={`organizer-list ${isSelectedList ? 'selected' : ''}`}>\n\t\t\t\t<Col>\n\t\t\t\t\t<button className=\"btn btn-light show-items\" onClick={this.onShowItems}>{showItemsButtonText}</button>\n\t\t\t\t\t<div className=\"name\">{name}</div>\n\t\t\t\t\t{this.state.showItems && this.renderItems()}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default OrganizerList;\n","// Displays the user's lists and items\n// Allows the parent item of a list to be changed\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\nimport ReactDOM from 'react-dom';\n\nimport * as listReducer from '../modules/list';\n\nimport OrganizerList from './OrganizerList';\nimport './Organizer.scss';\n\nclass Organizer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'showOrganizer': false,\n\t\t\t'parentItemId': props.list.parent_item,\n\t\t\t'parentListId': props.parentListId, // parent list and item are stored in state so a new value can be selected, with the old value still present in props if the user cancels\n\t\t\t'selectedItemChildListId': null,\n\t\t\t'selectedItemOrder': null,\n\t\t};\n\n\t\tthis.onSelectParentItem = this.onSelectParentItem.bind(this);\n\t\tthis.onClickCancel = this.onClickCancel.bind(this);\n\t\tthis.onClickDone = this.onClickDone.bind(this);\n\t\tthis.onClickOrganize = this.onClickOrganize.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t}\n\n\tcomponentDidUpdate = (prevProps) => {\n\t\t// data for new list have loaded\n\t\tif ((prevProps.list.parent_item !== this.props.list.parent_item) ||\n\t\t// navigated to new list\n\t\t(prevProps.listOrganizerData.length === 0 && this.props.listOrganizerData.length !== 0)) {\n\t\t\tthis.setState({ // reset component\n\t\t\t\t'showOrganizer': false,\n\t\t\t\t'selectedItemOrder': this.selectedItemOrder(),\n\t\t\t\t'parentItemId': this.props.list.parent_item,\n\t\t\t\t'parentListId': this.props.parentListId,\n\t\t\t});\n\t\t}\n\t}\n\n\tonClickOrganize = () => {\n\t\tthis.setState({\n\t\t\t'showOrganizer': true,\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tconst DOMNode = ReactDOM.findDOMNode(this); // component parent node\n\t\t\tconst element = DOMNode.querySelector('.organizer-list.selected');\n\t\t\tif (element) {\n\t\t\t\telement.scrollIntoView();\n\t\t\t}\n\t\t}, 100);\n\t}\n\n\tonClickCancel = () => {\n\t\tthis.setState({\n\t\t\t'showOrganizer': false,\n\t\t});\n\t}\n\n\tonClickDone = () => {\n\t\tthis.setState({\n\t\t\t'showOrganizer': false,\n\t\t});\n\n\t\t// Don't allow the user to select an item from the current list.\n\t\t// this shouldn't happen as the current list is not displayed in the organizer.\n\t\tif (this.state.parentListId === this.props.list.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.parentItemId) {\n\t\t\tif (confirm(`'${this.props.list.name}' will become a top level list. Are you sure you want to continue?`)) { // eslint-disable-line no-restricted-globals\n\t\t\t\tthis.setParentItem();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// if the new parent item already has a child list\n\t\tif (this.state.selectedItemChildListId) {\n\t\t\tconst childList = this.props.listOrganizerData.find((list) => list.id === this.state.selectedItemChildListId);\n\n\t\t\t// no change\n\t\t\tif (this.state.parentItemId === this.props.list.parent_item) {\n\t\t\t\treturn;\n\t\t\t} else { // will disconnect the existing child list\n\t\t\t\tif (confirm(`The child list '${childList.name}' will become a top level list. Are you sure you want to continue?`)) { // eslint-disable-line no-restricted-globals\n\t\t\t\t\tthis.setParentItem();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setParentItem();\n\t}\n\n\tsetParentItem() {\n\t\tthis.props.dispatch(listReducer.updateList(\n\t\t\tthis.props.list.id,\n\t\t\t'parent_item_id',\n\t\t\tthis.state.parentItemId));\n\t}\n\n\tonSelectParentItem = ({ list, order, childListId }) => {\n\t\t// if the user clicks the selected item, deselect it\n\t\t// i.e. make this a top-level list\n\t\tif (list.id === this.state.parentListId && list.item[order-1] === this.state.parentItemId) {\n\t\t\tthis.setState({\n\t\t\t\t'parentItemId': null,\n\t\t\t\t'parentListId': null,\n\t\t\t\t'selectedItemChildListId': null,\n\t\t\t\t'selectedItemOrder': null,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\t'parentItemId': list.item[order-1],\n\t\t\t\t'parentListId': list.id,\n\t\t\t\t'selectedItemChildListId': childListId,\n\t\t\t\t'selectedItemOrder': order,\n\t\t\t});\n\t\t}\n\t}\n\n\tselectedItemOrder() {\n\t\t// find the order of the parent item\n\t\tlet order; // there may not be a parent item, so there may not be a default selection\n\t\tif (this.props.parentListId) {\n\t\t\tlet parentItemId = this.props.list.parent_item;\n\t\t\tconst parentList = this.props.listOrganizerData.find(list => list.id === this.props.parentListId);\n\n\t\t\tlet parentListItems = parentList.item;\n\n\t\t\torder = parentListItems.indexOf(parentItemId);\n\n\t\t\tif (order !== -1) { // item is found\n\t\t\t\torder += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn order;\n\t}\n\n\trenderLists() {\n\t\treturn (\n\t\t\t<div className=\"lists\">\n\t\t\t\t<div className=\"inner-tube\">\n\t\t\t\t\t<span>Select a new parent item for this list: </span>\n\t\t\t\t\t{this.props.listOrganizerData.map(list => {\n\t\t\t\t\t\tconst numberOfItems = this.props.itemOrganizerData[list.id].length;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// only show lists with at least one item\n\t\t\t\t\t\t// and don't show the page list - it can't be its own parent\n\t\t\t\t\t\tif (numberOfItems > 0 && (list.id !== this.props.list.id)) {\n\t\t\t\t\t\t\tconst showItems = (list.id === this.state.parentListId);\n\n\t\t\t\t\t\t\treturn (<OrganizerList\n\t\t\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\t\t\tlistOrganizerData={this.props.listOrganizerData}\n\t\t\t\t\t\t\t\titemOrganizerData={this.props.itemOrganizerData}\n\t\t\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\t\t\tselectedListId={this.state.parentListId}\n\t\t\t\t\t\t\t\tselectedItemOrder={this.state.selectedItemOrder}\n\t\t\t\t\t\t\t\tonSelectItem={this.onSelectParentItem}\n\t\t\t\t\t\t\t\tshowItems={showItems}\n\t\t\t\t\t\t\t/>);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn; // eslint-disable-line array-callback-return\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet controls;\n\n\t\tif (this.state.showOrganizer) {\n\t\t\tcontrols = (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<button className=\"btn btn-secondary\" onClick={this.onClickCancel}>Cancel</button>\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.onClickDone}>Done</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>);\n\t\t} else {\n\t\t\tcontrols = (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<button className=\"btn btn-default organize\" onClick={this.onClickOrganize}>...</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={`organizer ${this.state.showOrganizer ? 'open' : ''}`}>\n\t\t\t\t{controls}\n\t\t\t\t{this.state.showOrganizer && this.renderLists()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(Organizer);\n","// Full detail view of a list\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport SetListIsPublic from '../components/SetListIsPublic';\nimport EditableTextField from '../components/EditableTextField.js';\nimport ItemsPage from '../components/ItemsPage';\nimport Organizer from '../components/Organizer';\nimport Loading from '../components/Loading';\n\nimport * as listReducer from '../modules/list';\nimport * as itemReducer from '../modules/item';\nimport * as permissions from '../modules/permissions';\nimport findObjectByProperty from '../modules/findObjectByProperty';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nimport './ListDetail.scss';\n\n\nclass ListDetails extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\t// load the list and any parent / children\n\t\tthis.getListData = this.getListData.bind(this);\n\t\tconst id = this.getListData(props);\n\n\t\tthis.state = {\n\t\t\tid,\n\t\t\t'showOrganizer': false,\n\t\t};\n\n\t\tthis.onDeleteList = this.onDeleteList.bind(this);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.isLoading && !this.props.isLoading) {\n\t\t\t// just finished loading; need to check if user should view this list\n\t\t\tconst canEditList = permissions.canEditList(this.state.id);\n\t\t\tconst canViewList = permissions.canViewList(this.state.id);\n\n\t\t\tif (!canViewList) {\n\t\t\t\tthis.props.history.push('/');\n\t\t\t}\n\n\t\t\tthis.getOrganizerData();\n\n\t\t\tthis.setState({\n\t\t\t\t'canView': canViewList,\n\t\t\t\t'canEdit': canEditList,\n\t\t\t});\n\n\t\t\tif(canViewList) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t'list_name': this.props.list.name,\n\t\t\t\t\t'list_description': this.props.list.description,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// user has navigated to a different list\n\t\tif (prevProps.match.params.id !== this.props.match.params.id) {\n\t\t\tconst id = this.getListData(this.props);\n\t\t\tthis.setState({\n\t\t\t\tid,\n\t\t\t});\n\t\t}\n\n\t\t// user has just logged out\n\t\t// store needs to be repopulated\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.props.dispatch(listReducer.fetchListDetail(this.state.id));\n\t\t\tthis.props.dispatch(clearErrors());\n\t\t}\n\t}\n\n\tgetListData = (props) => {\n\t\tconst id = props.match.params.id;\n\n\t\tprops.dispatch(listReducer.fetchListDetail(id));\n\t\tprops.dispatch(clearErrors());\n\t\treturn id;\n\t}\n\n\tgetOrganizerData = () => {\n\t\t// minimal data for all my lists and items to allow parent list to be changed.\n\t\t// can't do this until the list has been loaded, to find the owner\n\t\tif (!this.props.list) { // probably the user does not have permission to view this list\n\t\t\treturn;\n\t\t}\n\t\tthis.props.dispatch(listReducer.fetchOrganizerData(this.props.list.created_by));\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tonChangeIsPublic = ({ id, is_public }) => {\n\t\tthis.props.dispatch(listReducer.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = () => {\n\t\tconst id = this.props.list.id;\n\t\tconst name = this.props.list.name;\n\n\t\tif (confirm(`Are you sure you want to delete the list ${name}?`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t  this.props.dispatch(listReducer.deleteList(id));\n\n\t\t  // if there is a visible parent, navigate there\n\t\t  if (this.props.parentList) {\n\t\t  \tif (permissions.canViewList(this.props.parentList.id)) {\n\t\t  \t\tthis.props.history.push(`/list/${this.props.parentList.id}`);\n\t\t  \t\treturn;\n\t\t  \t}\n\t\t  }\n\n\t\t  // otherwise navigate home\n\t\t  this.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst listId = element.dataset.entityid;\n\n\t\t// the list field to update is coded in the 'state' data e.g. 'list_name'\n\t\t// we want to keep item name and list name clearly separate\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(listReducer.updateList(listId, propertyName, value));\n\t}\n\n\tonCreateChildList = (item) => {\n\t\tthis.props.history.push(`/newlist?parent-item-id=${item.id}&parent-item-name=${item.name}&parent-list-name=${this.props.list.name}&parent-list-id=${this.props.list.id}`);\n\t}\n\n\tonChangeIsPublic = ({ id, is_public }) => {\n\t\tthis.props.dispatch(listReducer.setListIsPublic({ id, is_public }));\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderPage() {\n\t\tif (!this.props.list) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet showPrivacyWarning = false;\n\t\tlet privacyWarningText = '';\n\n\t\tif (this.state.canEdit && this.props.parentList) {\n\t\t\tif (this.props.list.is_public && !this.props.parentList.is_public) {\n\t\t\t\tprivacyWarningText = 'This public list has a private parent list';\n\t\t\t\tshowPrivacyWarning = true;\n\t\t\t} else if (!this.props.list.is_public && this.props.parentList.is_public) {\n\t\t\t\tprivacyWarningText = 'This private list has a public parent list';\n\t\t\t\tshowPrivacyWarning = true;\n\t\t\t}\n\t\t}\n\n\t\tlet breadcrumbs = <div className=\"breadcrumbs\">Top level list</div>;\n\n\t\tlet parentListId;\n\t\tif (this.props.parentList) {\n\t\t\tparentListId = this.props.parentList.id;\n\n\t\t\tbreadcrumbs = <div className=\"breadcrumbs\"><Link to={`/list/${this.props.parentList.id}`}>{this.props.parentList.name}</Link> > {this.props.parentItem.name}</div>;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t{this.props.isLoading && <Loading />}\n\t\t\t\t{this.props.list && !this.props.isLoading && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"list-name\">\n\t\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\tname={'list_name'}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a name for the list\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\t\t\t\t\tdata-state={'list_name'} // this.state property\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\t\tid='list_name' // id of the html element\n\t\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.list_name}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{this.state.canEdit && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"list-detail-controls\">\n\t\t\t\t\t\t\t\t\t\t\t<SetListIsPublic\n\t\t\t\t\t\t\t\t\t\t\t\tlistId={this.props.list.id}\n\t\t\t\t\t\t\t\t\t\t\t\tisPublic={this.props.list.is_public}\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeIsPublic={this.onChangeIsPublic}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={this.onDeleteList}>X</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t{this.state.canEdit &&\n\t\t\t\t\t\t\t\t\t<Organizer\n\t\t\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\t\t\tparentListId={parentListId}\n\t\t\t\t\t\t\t\t\t\tlistOrganizerData={this.props.listOrganizerData}\n\t\t\t\t\t\t\t\t\t\titemOrganizerData={this.props.itemOrganizerData}\n\t\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\t\t\t{breadcrumbs}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t{showPrivacyWarning && (\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<div className=\"privacy-warning\">{privacyWarningText}</div>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"list-description\">\n\t\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\t\tname={'list_description'}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a description for the list\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\t\t\t\tdata-state={'list_description'} // this.state property\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\t\tid='list_description' // id of the html element\n\t\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.list_description}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t{this.props.thisListItems && (\n\t\t\t\t\t\t\t\t<ItemsPage\n\t\t\t\t\t\t\t\t\titems={this.props.thisListItems}\n\t\t\t\t\t\t\t\t\tlist={this.props.list.id}\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\tonCreateChildList={this.onCreateChildList}\n\t\t\t\t\t\t\t\t\tonMoveItemUp={this.onMoveItemUp}\n\t\t\t\t\t\t\t\t\tonMoveItemDown={this.onMoveItemDown}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t///////////////\n\n\trender() {\n\t\tlet content;\n\n\t\tif (this.state.canView) {\n\t\t\tcontent = this.renderPage();\n\t\t} else {\n\t\t\tcontent = <p>Either this list does not exist or you do not have permission to view it</p>;\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"list-detail\">\n\t\t\t\t{ content }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nListDetails.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'thisListItems': PropTypes.array.isRequired, // items belonging to this list\n\t'listOrganizerData': PropTypes.array.isRequired, // minimal data for all lists owned by the same user.\n\t'itemOrganizerData': PropTypes.object.isRequired, // minimal data for all lists owned by the same user\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst lists = state.list.things; // details of the current list, with parent and child lists if they exist\n\n\t// first find the target list\n\tconst list = findObjectByProperty({ 'parentObject': lists, 'property': 'id', 'value': ownProps.match.params.id });\n\n\tconst parentItemAndList = listReducer.getParentItemAndList(state)(list);\n\n\treturn ({\n\t\t'auth': state.auth,\n\t\t'errors': state.errors,\n\t\t'isLoading': state.list.isLoading,\n\t\t'list': list,\n\t\t'thisListItems': listReducer.getItemsForList(state)(list),\n\t\t'parentList': parentItemAndList.parentList,\n\t\t'parentItem': parentItemAndList.parentItem,\n\t\t'listOrganizerData': listReducer.getSortedOrganizerLists(state), // array containing limited list info: id, name, item (array of child items), parent_item\n\t\t'itemOrganizerData': itemReducer.groupedItems(state), // object. limited item info: id, name, list_id\n\t});\n};\n\nexport default connect(mapStateToProps)(ListDetails);\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport Loading from '../components/Loading';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\n\t\tthis.sendConfirmationEmail = this.sendConfirmationEmail.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.confirmEmailNotSent());\n\t}\n\n\tsendConfirmationEmail() {\n\t\tthis.props.dispatch(auth.sendConfirmationEmail());\n\t}\n\n\trender() {\n\t\tconst emailVerified = this.props.auth.user.emailVerified;\n\t\tconst email_status = emailVerified ? 'verified': 'unverified';\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<Container>\n\t\t\t\t\t{this.props.isLoading && <Loading />}\n\t\t\t\t\t<h2>My account</h2>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div>Username: {this.props.auth.user.username}</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Link to=\"/changepassword\">Change password</Link>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div>Email address: {this.props.auth.user.email}</div>\n\t\t\t\t\t\t\t<div>Status: {email_status}</div>\n\t\t\t\t\t\t\t{!emailVerified &&\t<button type=\"button\" className=\"btn btn-primary\"onClick={this.sendConfirmationEmail}>\n\t\t\t\t\t\t\t\t\tResend confirmation email\n\t\t\t\t\t\t\t</button>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t{this.props.auth.confirmEmailSent && (<div className=\"valid-feedback\">A verification email has been sent to {this.props.auth.user.email}. If you do not receive the email within a few minutes, please check your Junk or Spam folder.</div>)}\n\t\t\t\t\t{this.props.auth.confirmEmailAlreadyVerified && (<div className=\"valid-feedback\">The email address {this.props.auth.user.email} has already been verified.</div>)}\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'sendConfirmationEmail': PropTypes.func.isRequired,\n\t'confirmEmailNotSent': PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.list.isLoading,\n\t'sendConfirmationEmail': auth.sendConfirmationEmail,\n\t'confirmEmailNotSent': auth.confirmEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.forgotPasswordEmailNotSent());\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.dispatch(auth.forgotPassword(user));\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) &&\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>}\n\t\t\t\t<h2>Forgot your password?</h2>\n\t\t\t\t<p>Enter your email address. A reset password link will be emailed to you.</p>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.email && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.email}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"valid-feedback\">If the address {this.state.email} is associated with an account, an email has been sent. If you don't see it within a few minutes, please check your junk mail folder.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'forgotPassword': auth.forgotPassword,\n\t'forgotPasswordEmailNotSent': auth.forgotPasswordEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { changePassword, passwordNotChanged } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass ChangePassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'old_password': '',\n\t\t\t'new_password': '',\n\t\t\t'new_password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst data = {\n\t\t\t'old_password': this.state.old_password,\n\t\t\t'new_password1': this.state.new_password,\n\t\t\t'new_password2': this.state.new_password_confirm\n\t\t};\n\n\t\tthis.props.changePassword(data, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Change your password</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'new_password',\n\t\t\t\t\t'input2': 'new_password_confirm',\n\t\t\t\t\t'message': 'New passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"old_password\">Old password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"old_password\"\n\t\t\t\t\t\t\t\t\tid=\"old_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.old_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your old password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password\">New password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password_confirm\">Confirm your new password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tChange password now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.changePassword && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.changePassword}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t      {this.props.auth.changePasswordComplete && (<div className=\"valid-feedback\">Your new password has been saved</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nChangePassword.propTypes = {\n\t'changePassword': PropTypes.func.isRequired,\n\t'passwordNotChanged': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ changePassword, passwordNotChanged })(withRouter(ChangePassword));\n","// Shown after user successfully verifies email address\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { logoutUser } from '../modules/auth';\n\nclass Verified extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onLogout();\n\t}\n\n\tonLogout(e) {\n\t\t// just in case a different user is logged in\n\t\t// to avoid confusion and force new login\n\t\tif (this.props.auth.isAuthenticated) {\n\t\t\tthis.props.logoutUser(this.props.history);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Your email address has been verified</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/login\" className=\"nav-link\">Login</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nVerified.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Verified));\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport { setCurrentUser, getUserInfo, logoutUser, getAuthToken } from '../modules/auth';\n\nimport Navbar from '../components/Navbar';\nimport Register from '../components/Register';\nimport Welcome from '../components/Welcome';\nimport Login from '../components/Login';\nimport Home from '../containers/Home';\nimport CreateList from '../containers/CreateList';\nimport ListDetails from '../containers/ListDetail';\nimport Account from '../components/Account';\nimport ForgotPassword from '../components/ForgotPassword';\nimport ChangePassword from '../components/ChangePassword';\nimport Verified from '../components/Verified';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password loads the bootstrap css from static/bootstrap\n\n// check if user is already logged in\nif(getAuthToken()) {\n\tstore.dispatch(setCurrentUser(localStorage.mytoptensJwtToken));\n\tstore.dispatch(getUserInfo());\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.mytoptensJwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\t\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t\t<Route exact path=\"/newlist\" component={ CreateList } />\n\t\t\t\t\t\t\t<Route exact path=\"/list/:id\" component={ ListDetails } />\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/welcome\" component={ Welcome } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t<Route exact path=\"/changepassword\" component={ ChangePassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/verified\" component={ Verified } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./containers/App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}
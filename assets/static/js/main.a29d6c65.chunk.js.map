{"version":3,"sources":["modules/errors.js","modules/formatErrorMessages.js","modules/fetchAPI.js","modules/isEmpty.js","modules/auth.js","constants/index.js","modules/items.js","modules/lists.js","modules/page.js","modules/rootReducer.js","store.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Welcome.js","components/Login.js","components/ListsList.js","modules/findObjectByProperty.js","modules/permissions.js","components/ListSummary.js","containers/ListsPage.js","components/FlashMessage.js","containers/Home.js","containers/CreateList.js","components/EditableTextField.js","components/Item.js","components/ItemsPage.js","containers/ListDetail.js","components/Account.js","components/ForgotPassword.js","components/ChangePassword.js","components/Verified.js","containers/App.js","serviceWorker.js","index.js"],"names":["getErrors","error","type","payload","clearErrors","updeep","require","initialState","formatErrorMessages","errors","messageArray","Object","keys","forEach","key","push","map","item","join","fetchAPI","_ref","url","data","_ref$method","method","_ref$useAuth","useAuth","_ref$headers","headers","Authorization","concat","store","getState","auth","user","token","fetch","body","then","response","ok","contentType","get","includes","json","catch","Promise","reject","Error","message","text","html","page_type","status","isEmpty","value","undefined","length","trim","LOGOUT_USER_COMPLETE","setCurrentUser","dispatch","localStorage","setItem","setAuthToken","logoutUser","history","removeItem","logout user","getUserInfo","setUserInfo","username","email","id","slug","emailVerified","email_verified","get user info","forgotPasswordEmailNotSent","forgotPassword","formData","FormData","name","append","request password reset email","passwordNotChanged","changePasswordComplete","confirmEmailNotSent","sendConfirmationEmail","isAuthenticated","forgotPasswordEmailSent","resetPasswordComplete","confirmEmailSent","LIST_IS_PUBLIC_VALUES","LIST_IS_PUBLIC_TEXTS","MAX_ITEMS_IN_LIST","CREATE_ITEM_SUCCEEDED","UPDATE_ITEM_SUCCEEDED","DELETE_ITEM_SUCCEEDED","updateItem","itemId","propertyName","Content-Type","JSON","stringify","defineProperty","updateItemSucceeded","update item","initialItemsState","things","isLoading","sortedItems","createSelector","state","items","sort","a","b","order","RECEIVE_ENTITIES","FETCH_LISTS_STARTED","FETCH_LISTS_FAILED","FETCH_LIST_BY_SLUG_STARTED","FETCH_LIST_BY_SLUG_FAILED","FILTER_LISTS","CREATE_LIST_STARTED","CREATE_LIST_SUCCEEDED","DELETE_LIST_SUCCEEDED","SET_LIST_IS_PUBLIC_SUCCEEDED","UPDATE_LIST_SUCCEEDED","itemSchema","schema","Entity","listSchema","receiveEntities","entities","fetchLists","normalizedData","normalize","fetch lists","fetchListBySlug","createList","list","create list","updateList","listId","updateListSucceeded","deleteList","deleteListSucceeded","delete list","setListIsPublic","_ref2","is_public","_ref3","setListIsPublicSucceeded","set list is public","initialListsState","getFilteredLists","lists","page","searchTerm","filter","match","RegExp","getFilteredPublicLists","grouped","getMyGroupedAndFilteredLists","created_by_id","combineReducers","arguments","action","toConsumableArray","constant","confirmEmailAlreadyVerified","omit","updateIn","itemIndex","findIndex","newItems","splice","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","createElement","className","Link","to","onClick","onLogout","bind","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","Component","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","assertThisInitialized","formLength","checkValidity","i","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","handleSubmit","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","node","setCustomValidity","objectSpread","classNames","assign","noValidate","children","Register","password","password_confirm","handleInputChange","target","password1","password2","registerUser","nextProps","Container","ValidatedForm_ValidatedForm","Row","Col","md","lg","Label","for","Input","required","onChange","minLength","pattern","registration","style","display","Welcome","Login","loginUser","authentication","ListsList","headerText","findObjectByProperty","parentObject","property","childObject","canViewList","identifier","userId","canCreateList","ListSummary","canEdit","canEditList","permissions","sm","description","onIsPublicChange","onDeleteList","showCreatedBy","created_by_username","ListsPage","onSearch","onAddList","handleTabClick","selectedTab","setListSetURL","listset","URLSearchParams","location","search","prevProps","_this$props","publicLists","components_ListsList","components_ListSummary","_this$props2","myLists","index","listsByIsPublic","URL","pathname","listsList","renderMyLists","renderPublicLists","renderTabs","FlashMessage","aria-hidden","Home","confirm","onCloseFlashMessage","src_containers_ListsPage","onCreateList","CreateList","newList","cancel","newItem","elements","renderItemInputs","EditableTextField","fakeEvent","dataset","initialValue","toggleInput","showInput","textarea","keyCode","which","classList","contains","newShowInputValue","isEditing","inputElement","handleNewValue","label","autoFocus","data-state","data-entityid","onKeyUp","tabIndex","Item","isEditingName","showDescription","src_components_EditableTextField","setIsEditingName","ItemsPage","element","entityid","split","itemsReducer","toggleForm","showNewItemForm","src_components_Item","renderItemsList","ListDetails","params","canView","list_name","list_description","components_ItemsPage","content","renderItemsPage","ownProps","Account","email_status","ForgotPassword","ChangePassword","old_password","new_password","new_password_confirm","console","log","new_password1","new_password2","changePassword","Verified","getItem","jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","hostname","navigator","serviceWorker","ready","unregister","render","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.a29d6c65.chunk.js","sourcesContent":["// errorReducer.js\n\nconst GET_ERRORS = 'GET_ERRORS';\nconst CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const getErrors = error => {\n\t// error is an object, e.g. { 'registration': error.message }\n\treturn {\n\t\t'type': GET_ERRORS,\n\t\t'payload': error,\n\t};\n};\n\nexport const clearErrors = () => {\n\treturn {\n\t\t'type': CLEAR_ERRORS,\n\t};\n};\n\nvar updeep = require('updeep');\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\t// ensure we have an array of strings to allow multiple errors to be displayed\n\t\t\tlet errors = {};\n\n\t\t\tObject.keys(action.payload).forEach((key) => {\n\t\t\t\tif (typeof action.payload[key] === 'string') {\n\t\t\t\t\t// a string is simply copied\n\t\t\t\t\terrors[key] = [action.payload[key]];\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = [...action.payload[key]];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn updeep(errors, {}); // clear any existing errors\n\t\t}\n\n\t\tcase CLEAR_ERRORS: {\n\t\t\treturn {};\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// join arrays of error messages from different errors, into a single string.\n// it is expected that there will only ever be one type of error, e.g. 'register', but the object is parsed to be on the safe side.\n/*\n{ {'register': [\n\t\t'email already in use',\n\t\t'username already in use'\n\t\t]},\n\t{'login': [\n\t\t'could not log in'\n\t]\n}\n*/\n\nexport default function (errors) {\n\tlet messageArray = [];\n\tObject.keys(errors).forEach((key) => {\n\t\tif (typeof errors[key] === 'string') {\n\t\t\tmessageArray.push(errors[key]); // plain string error\n\t\t} else { // arary of errors\n\t\t\terrors[key].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\tmessageArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst message = messageArray.join(' ');\n\n\treturn message;\n};\n","// uses fetch to get or post data.\n// passes up useful errors to the calling function.\n// set useAuth to true for validating logged-in user: token will be sent in header\nimport store from '../store';\nimport formatErrorMessages from '../modules/formatErrorMessages';\n\nexport default function fetchAPI({ url, data, method = 'GET', useAuth = false, headers = {} }) {\n\tif (useAuth) {\n\t\theaders.Authorization = `Token ${store.getState().auth.user.token}`;\n\t}\n\n\treturn fetch(url, { headers, 'method': method, 'body': data })\n\t\t.then(response => {\n\t\t\t// fetch returns ok true / false in most situations\n\t\t\t// true is a successful response\n\t\t\tif (response.ok) {\n\t\t\t\tconst contentType = response.headers.get('Content-Type') || '';\n\n\t\t\t\tif (contentType.includes('application/json')) {\n\t\t\t\t\treturn response.json().catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('Invalid JSON: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (contentType.includes('text/html')) {\n\t\t\t\t\treturn response.text().then(html => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'page_type': 'generic',\n\t\t\t\t\t\t\t'html': html\n\t\t\t\t\t\t};\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('HTML error: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// ok == false means some problem to display\n\t\t\t\t// even though no error was returned\n\t\t\t\tif (response.status === 404) {\n\t\t\t\t\treturn Promise.reject(new Error('Page not found: ' + url));\n\t\t\t\t}\n\n\t\t\t\tif (response.status === 500) {\n\t\t\t\t\treturn Promise.reject(new Error('Internal server error: ' + url));\n\t\t\t\t}\n\n\t\t\t\treturn response.json().then(response => {\n\t\t\t\t\t// the server rejected the request, e.g. because of a wrong password, we want to display the reason\n\t\t\t\t\t// the information is contained in the json()\n\t\t\t\t\t// there may be more than one error, so join them into a single string.\n\t\t\t\t\t// multiline display would be more elegant but this will do for now and makes all errors consistent (one message string)\n\n\t\t\t\t\treturn Promise.reject(new Error(formatErrorMessages(response))\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\t// fetch returned an error\n\t\t\treturn Promise.reject(new Error(error.message));\n\t\t});\n};\n","// check for a null, empty, undefined object\n\nconst isEmpty = (value) => {\n\treturn (\n\t\tvalue === undefined ||\n\t\tvalue === null ||\n\t\t(typeof value === 'object' && Object.keys(value).length === 0) ||\n\t\t(typeof value === 'string' && value.trim().length === 0)\n\t);\n};\n\nexport default isEmpty;\n","// authReducer.js\n\nimport store from '../store';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors, clearErrors } from '../modules/errors';\nimport isEmpty from '../modules/isEmpty';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\nexport const PASSWORD_NOT_CHANGED = 'PASSWORD_NOT_CHANGED';\nexport const CHANGE_PASSWORD_COMPLETE = 'CHANGE_PASSWORD_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_NOT_SENT = 'CONFIRM_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_SENT = 'CONFIRM_EMAIL_SENT';\nexport const CONFIRM_EMAIL_ALREADY_VERIFIED = 'CONFIRM_EMAIL_ALREADY_VERIFIED';\n\n// Side effects Services\nexport const getAuthToken = () => {\n\treturn localStorage.getItem('jwtToken');\n};\n\nfunction setAuthToken(token) {\n\tlocalStorage.setItem('jwtToken', token);\n\treturn;\n}\n\nfunction removeAuthToken() {\n\tlocalStorage.removeItem('jwtToken');\n\treturn;\n}\n\nexport const registerUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/registration/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t}).then(response => {\n\t\thistory.push('/welcome');\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'registration': error.message }));\n\t});\n};\n\nexport const loginUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/login/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\treturn dispatch(setCurrentUser(response.key));\n\t}).then(() => {\n\t\thistory.push('/');\n\t\t// after store has been updated with token, we can query the server for current user info\n\t\treturn store.dispatch(getUserInfo());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'authentication': 'Unable to log in with the provided credentials, please try again.' }));\n\t});\n};\n\nexport const setCurrentUser = (token, dispatch) => {\n\tsetAuthToken(token);\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': { token },\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\tdispatch(clearErrors());\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/logout/',\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\tremoveAuthToken();\n\t\treturn dispatch(logoutUserComplete());\n\t}).then(() => {\n\t\t// ensure token is removed from localStorage and store before redirecting\n\t\t// history.push('/');\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'logout user': 'Unable to logout' }));\n\t});\n};\n\n///////////////////////////////\n// get user info\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = () => (dispatch) => {\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/user/',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t}).then(user => {\n\t\treturn dispatch(setUserInfo({\n\t\t\t'username': user.username,\n\t\t\t'email': user.email,\n\t\t\t'id': user.id,\n\t\t\t'slug': user.slug,\n\t\t\t'emailVerified': user.email_verified,\n\t\t}));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'get user info': 'Unable to get user info' }));\n\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/reset/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\t return dispatch(forgotPasswordEmailSent());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'request password reset email': `Unable to send a password reset email. It is likely that the email address ${email} is not associated with a registered user` }));\n\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n//////////////////////////////////\n// change password\nexport const changePassword = (data) => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(passwordNotChanged());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in data) {\n\t\tformData.append(name, data[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/change/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tdispatch(changePasswordComplete());\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'changePassword': error.message }));\n\t});\n};\n\nexport const passwordNotChanged = token => {\n\treturn {\n\t\t'type': PASSWORD_NOT_CHANGED,\n\t};\n};\n\nexport const changePasswordComplete = (token) => {\n\treturn {\n\t\t'type': CHANGE_PASSWORD_COMPLETE,\n\t};\n};\n\n//////////////////////////////////\n// Email confirmation\nexport const confirmEmailNotSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_NOT_SENT\n\t};\n};\n\nexport const confirmEmailSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_SENT\n\t};\n};\n\nexport const confirmEmailAlreadyVerified = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_ALREADY_VERIFIED\n\t};\n};\n\nexport const sendConfirmationEmail = () => (dispatch) => {\n\tdispatch(clearErrors());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/sendconfirmationemail/',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tif (response.message === 'Email confirmation sent') {\n\t\t\treturn dispatch(confirmEmailSent());\n\t\t} else if (response.message === 'Email already verified') {\n\t\t\treturn dispatch(confirmEmailAlreadyVerified());\n\t\t}\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'sendConfirmationEmail': error.message }));\n\t});\n};\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isAuthenticated': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'changePasswordComplete': false,\n\t'confirmEmailSent': false,\n\t'user': {}\n};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user info\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user info\n\t\t\treturn updeep({\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'slug': action.payload.slug,\n\t\t\t\t\t'id': action.payload.id,\n\t\t\t\t\t'emailVerified': action.payload.emailVerified,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// forgot password\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase PASSWORD_NOT_CHANGED: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': false,\n\t\t\t\t'errors': {}\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CHANGE_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// confirm email\n\t\tcase CONFIRM_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': false,\n\t\t\t\t'confirmEmailAlreadyVerified': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_ALREADY_VERIFIED: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailAlreadyVerified': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","export const LIST_IS_PUBLIC_VALUES = [false, true];\nexport const LIST_IS_PUBLIC_TEXTS = ['Private', 'Public'];\nexport const MAX_ITEMS_IN_LIST = 10;\n","import { createSelector } from 'reselect';\nimport { RECEIVE_ENTITIES } from '../modules/lists';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tFETCH_LIST_BY_SLUG_STARTED\n} from './lists';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const CREATE_ITEM_REQUESTED = 'CREATE_ITEM_REQUESTED';\nexport const CREATE_ITEM_SUCCEEDED = 'CREATE_ITEM_SUCCEEDED';\nexport const UPDATE_ITEM_SUCCEEDED = 'UPDATE_ITEM_SUCCEEDED';\nexport const DELETE_ITEM_SUCCEEDED = 'DELETE_ITEM_SUCCEEDED';\n\nexport const createItem = item => dispatch => {\n\tdispatch(createItemRequested());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/items/',\n\t\t'data': JSON.stringify(item),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\treturn dispatch(createItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create item': error.message }));\n\t});\n};\n\nexport function createItemRequested() {\n\treturn {\n\t\t'type': 'CREATE_ITEM_REQUESTED',\n\t};\n}\n\nexport function createItemSucceeded(item) {\n\treturn {\n\t\t'type': 'CREATE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titem\n\t\t}\n\t};\n}\n\nexport const updateItem = (itemId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateItemSucceeded({ id }) {\n\treturn {\n\t\t'type': UPDATE_ITEM_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t}\n\t};\n}\n\nexport const deleteItem = ({ itemId, listId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'method': 'DELETE',\n\t}).then(response => {\n\t\treturn dispatch(deleteItemSucceeded({ itemId, listId }));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete item': error.message }));\n\t});\n};\n\nexport function deleteItemSucceeded({ itemId, listId }) {\n\treturn {\n\t\t'type': 'DELETE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titemId,\n\t\t\tlistId\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialItemsState = {\n\t'things': {},\n\t'isLoading': false,\n\t'error': null,\n};\n\nexport default function items(state = initialItemsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialItemsState, {});\n\t\t}\n\t\t\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tif (entities && entities.items) {\n\t\t\t\treturn updeep({ 'things': entities.items, 'isLoading': false }, state);\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'things': updeep.constant({}), // remove all existing items\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\t\t\treturn updeep({ 'things': { [item.id]: item } }, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n// all items, for selector to use\nexport const getItems = state => state.items.things;\n\n// items belonging to the current list\nexport const sortedItems = createSelector(\n\t[getItems],\n\t(items) => {\n\t\tlet listItems = (Object.keys(items).map(id => {\n\t\t\treturn items[id];\n\t\t})).sort(function(a, b){\n\t\t\treturn a.order - b.order; // sort to index order\n\t\t});\n\n\t\treturn listItems;\n\t}\n);\n\n","import { createSelector } from 'reselect';\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport { normalize, schema } from 'normalizr';\nimport store from '../store';\n\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tCREATE_ITEM_SUCCEEDED,\n\tDELETE_ITEM_SUCCEEDED\n} from './items';\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const RECEIVE_ENTITIES = 'RECEIVE_ENTITIES';\nexport const FETCH_LISTS_STARTED = 'FETCH_LISTS_STARTED';\nexport const FETCH_LISTS_FAILED = 'FETCH_LISTS_FAILED';\nexport const FETCH_LIST_BY_SLUG_STARTED = 'FETCH_LIST_BY_SLUG_STARTED';\nexport const FETCH_LIST_BY_SLUG_FAILED = 'FETCH_LISTS_FAILED';\nexport const FILTER_LISTS = 'FILTER_LISTS';\nexport const CREATE_LIST_STARTED = 'CREATE_LIST_STARTED';\nexport const CREATE_LIST_SUCCEEDED = 'CREATE_LIST_SUCCEEDED';\nexport const DELETE_LIST_SUCCEEDED = 'DELETE_LIST_SUCCEEDED';\nexport const SET_LIST_IS_PUBLIC_SUCCEEDED = 'SET_LIST_IS_PUBLIC_SUCCEEDED';\nexport const UPDATE_LIST_SUCCEEDED = 'UPDATE_LIST_SUCCEEDED';\n\nconst itemSchema = new schema.Entity('items');\nconst listSchema = new schema.Entity('lists', {\n\t'items': [itemSchema],\n});\n\nfunction receiveEntities(entities) {\n\treturn {\n\t\t'type': RECEIVE_ENTITIES,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchListsStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_LISTS_STARTED,\n\t};\n}\n\nfunction fetchListsFailed() {\n\treturn {\n\t\t'type': FETCH_LISTS_FAILED\n\t};\n}\n\nexport function fetchLists() {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListsStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return only the lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': '/api/v1/content/lists/',\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\t\t\t\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListsFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////\n// fetch a single list by slug\nexport function fetchListBySlugStarted() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_STARTED,\n\t};\n}\n\nfunction fetchListBySlugFailed() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_FAILED\n\t};\n}\n\nexport function fetchListBySlug(slug) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListBySlugStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return the list if a non-authenticated user should see it.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/list/?slug=${slug}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListBySlugFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\nexport function filterLists(searchTerm) {\n\treturn { \n\t\t'type': FILTER_LISTS,\n\t\t'payload': { searchTerm },\n\t};\n}\n\n/////////////////////////////\n// create list\nexport const createList = (list, history) => dispatch => {\n\tdispatch(createListStarted());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/lists/',\n\t\t'data': JSON.stringify(list),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\tdispatch(createListSucceeded(response));\n\t\thistory.push(`/list/${response.slug}`);\n\t\treturn;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create list': error.message }));\n\t});\n};\n\nexport function createListStarted() {\n\treturn {\n\t\t'type': CREATE_LIST_STARTED,\n\t};\n}\n\nexport function createListSucceeded(list) {\n\treturn {\n\t\t'type': CREATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tlist\n\t\t}\n\t};\n}\n\n///////////////////////////\n// update list\nexport const updateList = (listId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${listId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateListSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateListSucceeded({ id }) {\n\treturn {\n\t\t'type': UPDATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t}\n\t};\n}\n\n///////////////////////////\n// delete list\nexport const deleteList = id => (dispatch, getState) => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'method': 'DELETE',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(deleteListSucceeded(id));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete list': error.message }));\n\t});\n};\n\nexport function deleteListSucceeded(id) {\n\treturn {\n\t\t'type': DELETE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport const setListIsPublic = ({ id, is_public }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ is_public }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(setListIsPublicSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'set list is public': error.message }));\n\t});\n};\n\nexport function setListIsPublicSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': SET_LIST_IS_PUBLIC_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\n// this is initial state of lists and the list loading states\nconst initialListsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'things': {},\n};\n\n// 'state' here is global state\nexport const getSearchTerm = state => {\n\treturn state.page.searchTerm;\n};\n\nexport const getLists = state => {\n\treturn Object.keys(state.lists.things).map(id => {\n\t\treturn state.lists.things[id];\n\t});\n};\n\nexport const getFilteredLists = createSelector(\n\t[getLists, getSearchTerm],\n\t(lists, searchTerm) => {\n\t\treturn lists.filter(list => {\n\t\t\t// if no search term, return every list\n\t\t\tif (searchTerm === '') {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\treturn list.name.match(new RegExp(searchTerm, 'i'));\n\t\t});\n\t}\n);\n\nexport const getGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => list.is_public === is_public);\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\nexport const getFilteredPublicLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\treturn lists.filter(list => {\n\t\t\treturn list.is_public;\n\t\t});\n\t}\n);\n\nexport const getMyGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => (list.created_by_id === store.getState().auth.user.id) && (list.is_public === is_public));\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\n// state here is the substate state.lists\n// the book uses 'items' for the list of things i.e. lists. items\n// as 'items' for us is a specific thing, we need another name for the set of entities to be displayed i.e. the lists themselves\n// so those are globalState.lists.things\n// i.e. state.things here\nexport default function lists(state = initialListsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialListsState, {});\n\t\t}\n\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tlet lists = {};\n\n\t\t\tif (entities && entities.lists) {\n\t\t\t\tlists = entities.lists; // there is at least one list\n\t\t\t}\n\n\t\t\treturn updeep({ 'things': lists, 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': true,\n\t\t\t\t'things': updeep.constant({}), // remove all existing lists\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase CREATE_LIST_STARTED: {\n\t\t\t// at present this does nothing, it's really just to track that the action happened\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase CREATE_LIST_SUCCEEDED: {\n\t\t\tconst list = action.payload.list;\n\t\t\treturn updeep({ 'things': { [list.id]: list } }, state);\n\t\t}\n\n\t\tcase DELETE_LIST_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tcase SET_LIST_IS_PUBLIC_SUCCEEDED: {\n\t\t\tconst listId = action.payload.id;\n\n\t\t\treturn updeep({ 'things': { [listId]: { 'is_public': action.payload.is_public } } }, state);\n\t\t\t// reminder of another way to update nested arrays\n\t\t\t/* const index = state.things.findIndex((list) => list.id === action.payload.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\treturn updeep.updateIn(`things.${index}.is_public`, action.payload.is_public, state);\n\t\t\t} \n\n\t\t\treturn state; // in case list was not found\n\t\t\t*/\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\n\t\t\tfunction addItem(items) {\n\t\t\t\treturn [].concat(items, item.id);\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${item.list}.items`, addItem, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\tfunction deleteItem(items) {\n\t\t\t\tconst itemIndex = items.findIndex((item) => item === action.payload.itemId); \n\t\t\t\tlet newItems = [].concat(items);\n\t\t\t\tnewItems.splice(itemIndex, 1);\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${action.payload.listId}.items`, deleteItem, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","import {\n\tFILTER_LISTS,\n} from './lists';\n\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'searchTerm': '',\n};\n\nexport default function page(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FILTER_LISTS: {\n\t\t\treturn updeep({ 'searchTerm': action.payload.searchTerm }, state);\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","// index.js\n\n// import the partial reducers\nimport { combineReducers } from 'redux';\nimport errors from './errors';\nimport auth from './auth';\nimport page from './page';\nimport lists from './lists';\nimport items from './items';\n// by importing the actual reducer as the default, the state of each is initialised\n\nexport default combineReducers({\n\t'errors': errors,\n\t'auth': auth,\n\t'page': page,\n\t'lists': lists,\n\t'items': items,\n});\n","// store.js\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules/rootReducer';\n\nconst store = createStore(\n\trootReducer, \n\t// inititalState, // by not supplying initial state, we tell the store to use the defaults specified in the reducer\n\tcompose(applyMiddleware(thunk), \n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./modules/rootReducer', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../modules/auth';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(e);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's handleSubmit\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email address to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row md=\"9\" lg=\"6\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.registration && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.registration}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Shown after successful registration of a new user\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Welcome extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Welcome to My Top Tens</h2>\n\t\t\t\t<p>Your account has been created.</p>\n\t\t\t\t<p>To create lists, you will need to verify your email address. An email containing a verification link has been sent to the email address with which you registered. Please click the link to verify your email address.</p>\n\t\t\t\t<p>If you do not receive the email within a few minutes, please check your Junk or Spam folder.</p>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<p>You can request a new registration email by <Link to=\"/login\">Logging in</Link> and going to your user account (click your username in the header bar).</p>\n\t\t\t\t\t\t\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nWelcome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps)(Welcome);\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={this.handleSubmit.bind(this)}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange.bind(this) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.authentication && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.authentication}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","// List of all lists\n\nimport React from 'react';\nimport { Container, Row } from 'reactstrap';\n\nconst ListsList = ({ children, is_public, headerText }) => {\n\treturn (\n\t\t<Container className=\"lists-list\">\n\t\t\t{headerText && <Row>\n\t\t\t\t<h3 className=\"lists-list-name\">\n\t\t\t\t\t{headerText}\n\t\t\t\t</h3>\n\t\t\t</Row>}\n\t\t\t<Row>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default ListsList;\n","export default function findObjectByProperty({ parentObject, property, value }) {\n\t// e.g. find a list in the store based on its slug\n\t// it feels like there ought to be a smarter way to do this!\n\t// but this does work, and stops once the object is found\n\n\tconst keys = Object.keys(parentObject);\n\n\tfor (let i=0; i<keys.length; i++) {\n\t\tlet childObject = parentObject[keys[i]];\n\t\tif (childObject[property] === value) {\n\t\t\treturn childObject;\n\t\t}\n\t}\n\n\treturn;\n}\n","// check whether the user can perform actions on lists, items\n// items inherit permissions from their list\n\n// result depends on whether they are logged in:\n// whether they own the list:\n// whether the list is public\n\n// list may be identified by id (primary key) or by slug (provided by URL)\n// for viewing, we could trust the server that if a list is returned, it can be viewed.\n// but for editing, we need to check if the user created it\n\n// identifier should be like { 'slug': 'abc' } or { 'id': 'efg' } i.e. an object with one property\n\nimport store from '../store';\nimport findObjectByProperty from './findObjectByProperty';\n\nexport function canViewList(identifier) {\n\t// a list can be viewed if public or if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.lists.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canViewList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.is_public || (list.created_by_id === userId))) {\n\t\t\tcanViewList = true;\n\t\t}\n\t}\n\n\treturn canViewList;\n}\n\nexport function canEditList(identifier) {\n\t// a list can be edited if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.lists.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canEditList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.created_by_id === userId)) {\n\t\t\tcanEditList = true;\n\t\t}\n\t}\n\n\treturn canEditList;\n}\n\nexport function canCreateList() {\n\t// the user can create a list if they are logged in\n\t// and have verified their email address\n\tconst state = store.getState();\n\n\tif (state.auth.isAuthenticated && state.auth.user.emailVerified) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n","// An individual list\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nimport * as permissions from '../modules/permissions';\n\nconst ListSummary = props => {\n\tlet id=`select-${props.list.id}`;\n\tlet value = props.list.is_public ? 'Public' : 'Private';\n\tlet canEdit = permissions.canEditList({ 'id': props.list.id });\n\n\treturn (\n\t\t<Col sm=\"3\" md=\"4\" className=\"list-container\">\n\t\t\t<Link to={`/list/${props.list.slug}`}>\n\t\t\t\t<div className=\"list-header\">\n\t\t\t\t\t<div>{props.list.name}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"list-body\">{props.list.description}</div>\n\t\t\t</Link>\n\t\t\t<div className=\"list-status\">\n\t\t\t\t<label>Set list private/public status\n\t\t\t\t\t<select className=\"form-control\" value={value} onChange={onIsPublicChange} id={id}>\n\t\t\t\t\t\t{LIST_IS_PUBLIC_TEXTS.map(is_public => (\n\t\t\t\t\t\t\t<option key={is_public} value={is_public}>{is_public}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t{canEdit &&\n\t\t\t\t<button className=\"btn btn-danger\" onClick={onDeleteList}>Delete</button>\n\t\t\t}\n\t\t\t{props.showCreatedBy && \n\t\t\t\t<div className=\"list-created-by\">Created by: {props.list.created_by_username}</div>\n\n\t\t\t}\n\t\t\t\n\t\t</Col>\n\t);\n\n\tfunction onIsPublicChange(e) {\n\t\t// map from select options to true / false\n\t\tconst value = e.target.value === 'Public' ? true : false;\n\t\tprops.onIsPublicChange({ 'id': props.list.id, 'is_public': value });\n\t}\n\n\tfunction onDeleteList(e) {\n\t\tprops.onDeleteList({ 'id': props.list.id, 'name': props.list.name });\n\t}\n};\n\nexport default ListSummary;\n","// Page to display list of lists\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\nimport ListsList from '../components/ListsList';\nimport ListSummary from '../components/ListSummary';\nimport './ListsPage.scss';\n\nclass ListsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// which set of lists to view\n\t\t// if logged in, default my-lists\n\t\t// if not logged in, only show public-lists\n\t\tlet listset = 'public-lists';\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(this.props.location.search);\n\t\t\tlistset = urlParams.get('listset') || 'my-lists';\n\t\t}\n\n\t\tthis.setListSetURL(listset);\n\n\t\tthis.state = {\n\t\t\t'selectedTab': listset,\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// user has just logged out\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': 'public-lists',\n\t\t\t});\n\n\t\t\tthis.setListSetURL('public-lists');\n\t\t}\n\t}\n\n\tonSearch = e => {\n\t\tthis.props.onSearch(e.target.value);\n\t}\n\n\tonAddList = () => {\n\t\tthis.props.history.push('/newlist');\n\t}\n\n\trenderPublicLists() {\n\t\tconst { publicLists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\treturn (\n\t\t\t<ListsList headerText=\"All public lists\">\n\t\t\t\t{publicLists.map(list => \n\t\t\t\t\t<ListSummary\n\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\tshowCreatedBy={true}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ListsList>\n\t\t);\n\t}\n\n\trenderMyLists() {\n\t\tconst { myLists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\treturn Object.keys(myLists).map((is_public, index) => {\n\t\t\tconst listsByIsPublic = myLists[is_public];\n\t\t\tlet headerText = is_public === 'true' ? 'My public lists' : 'My private lists';\n\n\t\t\treturn (\n\t\t\t\t<div key={index}>\n\t\t\t\t\t{(listsByIsPublic.length > 0) && (\n\t\t\t\t\t\t<ListsList is_public={is_public} headerText={headerText}>\n\t\t\t\t\t\t\t{listsByIsPublic.map(list => \n\t\t\t\t\t\t\t\t<ListSummary\n\t\t\t\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ListsList>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\tsetListSetURL(listset) {\n\t\tlet URL = `${this.props.location.pathname}?listset=${listset}`;\n\t\tthis.props.history.push(URL);\n\t}\n\n\thandleTabClick = (e) => {\n\t\tif (this.state.selectedTab !== e.target.id) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': e.target.id,\n\t\t\t});\n\n\t\t\tthis.setListSetURL(e.target.id);\n\t\t}\n\t}\n\n\trenderTabs() {\n\t\treturn (\n\t\t\t<ul><li>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.state.selectedTab === 'my-lists'? 'selected' : ''}\n\t\t\t\t\tid='my-lists'\n\t\t\t\t\tonClick={this.handleTabClick}>My lists\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.state.selectedTab === 'public-lists'? 'selected' : ''}\n\t\t\t\t\tid='public-lists'\n\t\t\t\t\tonClick={this.handleTabClick}>Public lists\n\t\t\t\t</span>\n\t\t\t</li></ul>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet listsList;\n\n\t\tif (this.state.selectedTab === 'my-lists') {\n\t\t\tlistsList = this.renderMyLists();\n\t\t} else if (this.state.selectedTab === 'public-lists') {\n\t\t\tlistsList = this.renderPublicLists();\n\t\t}\n\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"lists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet createList;\n\t\tif (this.props.canCreateList()) {\n\t\t\tcreateList = (<button\n\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\tonClick={this.onAddList}\n\t\t\t>+ New list</button>);\n\t\t} else if (this.props.auth.isAuthenticated) {\n\t\t\tcreateList = (<div>In order to create new lists, please verify your email address by clicking the link in the email you were sent when you registered. You can request a new verification email from your <Link to=\"/account\">Account</Link> page.</div>);\n\t\t} else {\n\t\t\tcreateList = (<div>In order to create new lists, please <Link to=\"/login\">log in</Link> or <Link to=\"/register\">register a My Top Tens account</Link>.</div>);\n\t\t}\n\n\n\t\treturn (\n\t\t\t<div className=\"lists-list\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col sm=\"12\" md=\"9\">\n\t\t\t\t\t\t\t<div className=\"lists-list-header\">\n\t\t\t\t\t\t\t\t<input className=\"form-control\"\n\t\t\t\t\t\t\t\t\tonChange={this.onSearch}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{createList}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t{this.props.auth.isAuthenticated && <div className=\"tabs\">\n\t\t\t\t\t{this.renderTabs()}\n\t\t\t\t\t<div className=\"clearing\"></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"lists\">\n\t\t\t\t\t{listsList}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ListsPage);\n","import React from 'react';\n\n// onClick should dismiss the condition that caused the FlashMessage to be displayed\n// it is the responsibility of the component that triggers the FlashMessage, to also provide the way to dismiss it\nexport default function FlashMessage({ message, type, onClick }) {\n\treturn (\n\t\t<div className={`flash-error ${type}`}>\n\t\t\t<span>{message}</span>\n\t\t\t<button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={onClick}>\n\t\t\t  <span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","// Home.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport ListsPage from './ListsPage';\n\nimport * as lists from '../modules/lists';\nimport { getFilteredPublicLists, getMyGroupedAndFilteredLists } from '../modules/lists';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\t\n\t\tprops.dispatch(clearErrors());\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(lists.fetchLists());\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user's status has changed, refresh Lists\n\t\tif(prevProps.auth.user.token !== this.props.auth.user.token){\n\t\t\tthis.props.dispatch(lists.fetchLists());\n\t\t}\n\t}\n\n\tonSearch = searchTerm => {\n\t\tthis.props.dispatch(lists.filterLists(searchTerm));\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(lists.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = ({ id, name }) => {\n\t\tif (confirm(`Are you sure you want to delete the list ${name}`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t  this.props.dispatch(lists.deleteList(id));\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<ListsPage\n\t\t\t\t\tauth={this.props.auth}\n\t\t\t\t\tmyLists={this.props.myLists}\n\t\t\t\t\tpublicLists={this.props.publicLists}\n\t\t\t\t\tcanCreateList={permissions.canCreateList}\n\t\t\t\t\tonSearch={this.onSearch}\n\t\t\t\t\tonCreateList={this.onCreateList}\n\t\t\t\t\tonIsPublicChange={this.onIsPublicChange}\n\t\t\t\t\tonDeleteList={this.onDeleteList}\n\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'publicLists': PropTypes.array.isRequired,\n\t'myLists': PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.lists.isLoading,\n\t'publicLists': getFilteredPublicLists(state),\n\t'myLists': getMyGroupedAndFilteredLists(state),\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { createList } from '../modules/lists';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\n\nimport ValidatedForm from '../components/ValidatedForm.js';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nimport './CreateList.scss';\n\nclass CreateList extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'name': '',\n\t\t\t'description': '',\n\t\t};\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`item${i}_name`] = '';\n\t\t\tthis.state[`item${i}_description`] = '';\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\n\t\tprops.dispatch(clearErrors());\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tcancel(e) {\n\t\tthis.props.history.push('/');\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tlet newList = {\n\t\t\t'name': this.state.name,\n\t\t\t'description': this.state.description,\n\t\t\t'items': [],\n\t\t};\n\n\t\t\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tif (this.state[`item${i}`] !== '') {\n\t\t\t\tconst newItem = {\n\t\t\t\t\t'name': this.state[`item${i}_name`],\n\t\t\t\t\t'description': this.state[`item${i}_description`],\n\t\t\t\t\t'order': i,\n\t\t\t\t};\n\t\t\t\tnewList.items.push(newItem);\n\t\t\t}\n\t\t}\n\n\t\tthis.onCreateList(newList);\n\t}\n\n\tonCreateList = (newList) => {\n\t\tthis.props.dispatch(createList(newList, this.props.history));\n\t}\n\n\n\tcomponentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user cannot create a list, redirect to Home\n\t\tif(!permissions.canCreateList()){\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderItemInputs() {\n\t\tlet elements = [];\n\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\telements.push(\n\t\t\t\t<div className=\"form-group\" key={`item${i}`}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<h3>Item {i}</h3>\n\t\t\t\t\t\t\t<Label for={`item${i}_name`}>Name</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_name`}\n\t\t\t\t\t\t\t\tid={`item${i}_name`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_name`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<Label for={`item${i}_description`}>Description</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_description`}\n\t\t\t\t\t\t\t\tid={`item${i}_description`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_description`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>);\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<h2>Create a new list</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t\t<Label for=\"name\">Name</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.name }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Name is required</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Description</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.description }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.renderItemInputs()}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSave list\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t{this.props.errors.lists && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.lists}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nCreateList.propTypes = {\n\t//'createList': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n});\n\nexport default connect(mapStateToProps)(withRouter(CreateList));\n","// An input or textarea that can be edited by clicking on it\n// It can be blank, or required\n// note custom property data-state which is the name of the property in this.state\n// Can be used with keyboard only\n// It is a regular form with cancel, submit. This allows keyboard navigation but the form stays open on blur - otherwise cancel would not be possible with keyboard.\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Row, Col, Label, Input } from 'reactstrap';\nimport './EditableTextField.scss';\n\nclass EditableTextField extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'showInput': false,\n\t\t\t'isValidated': false,\n\t\t\t'initialValue': '',\n\t\t\t'type': props.textarea ? 'textarea' : 'input',\n\t\t};\n\n\t\t//this.showInput = this.showInput.bind(this);\n\t}\n\n\tonKeyUp(e) {\n\t\tvar code = e.keyCode || e.which;\n\t\tif(code === 13) { //13 is the enter keycode\n\t\t\t//Do stuff in here\n\t\t\tthis.showInput(e);\n\t\t}\n\t}\n\n\tshowInput(e) {\n\t\tconst isPlaceholder = e.target.classList.contains('placeholder');\n\n\t\tif (!isPlaceholder) {\n\t\t\tthis.setState({\n\t\t\t\t'initialValue': e.target.textContent,\n\t\t\t});\n\t\t}\n\t\tthis.toggleInput();\n\t}\n\n\ttoggleInput() {\n\t\tconst newShowInputValue = !this.state.showInput;\n\n\t\t// optionally, tell the parent component whether the field is being edited\n\t\tif (typeof this.props.isEditing === 'function') {\n\t\t\tthis.props.isEditing(newShowInputValue);\n\t\t}\n\n\t\tthis.setState({\n\t\t\t'showInput': newShowInputValue,\n\t\t});\n\t}\n\n\tcancel = () => {\n\t\t// restore the initial value of the field as though the user had just entered it\n\t\tconst fakeEvent = {\n\t\t\t'target': {\n\t\t\t\t'dataset': { 'state': this.props['data-state'] },\n\t\t\t\t'value': this.state.initialValue,\n\t\t\t}\n\t\t};\n\t\tthis.props.handleInputChange(fakeEvent);\n\t\tthis.toggleInput();\n\t}\n\n\tvalidate = () => {\n\t\t// custom validation for consistency with other forms\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst elem = formEl.querySelector(this.state.type);\n\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\tif (!elem.validity.valid) {\n\t\t\tlet message = elem.validationMessage;\n\t\t\terrorLabel.textContent = message;\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\terrorLabel.textContent = '';\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\t// the user has typed a new value and the parent component should be notified\n\n\t\tconst inputElement = e.target.querySelector(this.state.type);\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.handleNewValue(inputElement);\n\t\t\tthis.toggleInput();\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t}\n\n\trender() {\n\t\tlet type = 'text';\n\t\tif (this.props.textarea) {\n\t\t\ttype = 'textarea';\n\t\t}\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (this.props.className) {\n\t\t\tclassNames = [...this.props.className];\n\t\t\tdelete this.props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\tconst showInput = this.state.showInput;\n\t\tlet item;\n\n\t\tif(this.props.canEdit) {\n\t\t\tif (showInput) {\t\t\t\n\t\t\t\titem = (\n\t\t\t\t\t<form\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tonSubmit={this.handleSubmit.bind(this)}\n\t\t\t\t\t\tclassName={classNames}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<Label for={this.props.id}>{this.props.label}</Label>\n\t\t\t\t\t\t\t\t\t<Input autoFocus\n\t\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\t\tname={this.props.id}\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\trequired={this.props.required}\n\t\t\t\t\t\t\t\t\t\tdata-state={this.props['data-state']}\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props['data-entityid']}\n\t\t\t\t\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\t\t\t\t\tonChange={this.props.handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tDone\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</form>);\n\t\t\t} else {\n\t\t\t\tif (this.props.value !== '') {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tonClick={this.showInput.bind(this)}\n\t\t\t\t\t\t\t onKeyUp={this.onKeyUp.bind(this)}\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t>{this.props.value}</span>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"placeholder\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\tonClick={this.showInput.bind(this)}\n\t\t\t\t\t\t\tonKeyUp={this.onKeyUp.bind(this)}\n\t\t\t\t\t\t>{this.props.placeholder}</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.props.value !== '') {\n\t\t\t\titem = (\n\t\t\t\t\t<span>{this.props.value}</span>\n\t\t\t\t);\n\t\t\t} else {\n\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"editable-text-field\">\n\t\t\t\t{ item }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditableTextField;\n","// An individual item\n// It is a stateful component so that the description field can be shown only if there is a name defined.\n\nimport store from '../store';\n\nimport React, { Component } from 'react';\nimport { Col } from 'reactstrap';\nimport EditableTextField from './EditableTextField.js';\nimport './Item.scss';\n\nclass Item extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\t'isEditingName': false,\n\t\t};\n\t}\n\n\tsetIsEditingName(showInput) {\n\t\tthis.setState({\n\t\t\t'isEditingName': showInput,\n\t\t});\n\t}\n\n\trender() {\n\t\tlet showDescription = true;\n\t\tif (this.props.item.name === '') {\n\t\t\tshowDescription = false;\n\t\t} else if (this.state.isEditingName && store.getState().items.things[this.props.item.id] && store.getState().items.things[this.props.item.id].name === '') {\n\t\t\tshowDescription = false;\n\t\t}\n\n\t\treturn (\n\t\t\t<Col className=\"item-container\">\n\t\t\t\t<div className=\"item-header\">\n\t\t\t\t\t<span className=\"order\">{this.props.item.order}:</span><EditableTextField\n\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\tname={`${this.props.item.order}_name`}\n\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\tplaceholder=\"Click here to add an item\"\n\t\t\t\t\t\tdata-state={`${this.props.item.order}_name`}\n\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\tid={`${this.props.item.order}_name`} // id of the html element\n\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\tisEditing={this.setIsEditingName.bind(this)}\n\t\t\t\t\t\tvalue={this.props.item.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{showDescription &&\n\t\t\t\t\t<div className=\"item-body\">\n\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\t\tname={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tplaceholder=\"Click here to add a description\"\n\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\tdata-state={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\t\tid={`${this.props.item.order}_description`} // id of the html element\n\t\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\t\tvalue={this.props.item.description}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Col>\n\t\t);\n\t}\n};\n\nexport default Item;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\n\nimport * as itemsReducer from '../modules/items';\n\nimport { MAX_ITEMS_IN_LIST } from '../constants';\nimport Item from './Item';\n\nclass ItemsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\n\t\t// set up the state to hold each item's name and description\n\t\t// coded by order\n\t\t// this is not elegant but keeps state flat\n\t\tfor (let i=1; i<= MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`${i}_name`] = '';\n\t\t\tthis.state[`${i}_description`] = '';\n\t\t}\n\n\t\t// fill in whatever items exist\n\t\tconst items = this.props.items;\n\n\t\tObject.keys(items).forEach((key) => {\n\t\t\tif (items[key].order && items[key].order <= MAX_ITEMS_IN_LIST) {\n\t\t\t\tconst order = items[key].order;\n\n\t\t\t\tthis.state[`${order}_id`] = items[key].id;\n\t\t\t\tthis.state[`${order}_name`] = items[key].name;\n\t\t\t\tthis.state[`${order}_description`] = items[key].description;\n\t\t\t}\n\t\t});\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst itemId = element.dataset.entityid;\n\n\t\t// the item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(itemsReducer.updateItem(itemId, propertyName, value));\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewItemForm': !this.state.showNewItemForm });\n\t}\n\n\trenderItemsList() {\n\t\tlet elements = [];\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tconst name = this.state[`${i}_name`];\n\t\t\tconst canEdit = this.props.canEdit;\n\t\t\tif (name || canEdit) {\n\t\t\t\telements.push(\n\t\t\t\t\t<Row key={`item${i}`}>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\tkey={`item${i}`}\n\t\t\t\t\t\t\t\titem={{\n\t\t\t\t\t\t\t\t\t'id': this.state[`${i}_id`],\n\t\t\t\t\t\t\t\t\t'order': i,\n\t\t\t\t\t\t\t\t\t'name': name,\n\t\t\t\t\t\t\t\t\t'description': this.state[`${i}_description`],\n\t\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\tcanEdit={canEdit}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"items-list\">\n\t\t\t\t{this.renderItemsList()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(ItemsPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport EditableTextField from '../components/EditableTextField.js';\nimport ItemsPage from '../components/ItemsPage';\n\nimport * as lists from '../modules/lists';\nimport * as permissions from '../modules/permissions';\nimport formatErrorMessages from '../modules/formatErrorMessages';import isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport { sortedItems } from '../modules/items';\n\nimport './ListDetail.scss';\n\n\nclass ListDetails extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\t// to start with all we know is the slug. We have to find the list id, and then the list details and items can be loaded\n\t\tconst slug = props.match.params.slug;\n\n\t\tthis.state = {\n\t\t\t// find the list slug from the url\n\t\t\tslug,\n\t\t};\n\n\t\tprops.dispatch(lists.fetchListBySlug(slug));\n\t\tprops.dispatch(clearErrors());\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst listId = element.dataset.entityid;\n\n\t\t// the list field to update is coded in the 'state' data e.g. 'list_name'\n\t\t// we want to keep item name and list name clearly separate\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(lists.updateList(listId, propertyName, value));\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.isLoading && !this.props.isLoading) {\n\t\t\t// just finished loading; need to check if user should view this list\n\t\t\tconst canEditList = permissions.canViewList({ 'slug': this.state.slug });\n\n\t\t\tthis.setState({\n\t\t\t\t'canView': permissions.canViewList({ 'slug': this.state.slug }),\n\t\t\t\t'canEdit': canEditList,\n\t\t\t});\n\n\t\t\tif(canEditList) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t'list_name': this.props.list.name,\n\t\t\t\t\t'list_description': this.props.list.description,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// user has just logged out\n\t\t// store needs to be repopulated\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.props.dispatch(lists.fetchListBySlug(this.state.slug));\n\t\t\tthis.props.dispatch(clearErrors());\n\t\t}\n\t}\n\n\trenderItemsPage() {\n\t\treturn <div>\n\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>)}\n\t\t\t{this.props.list && (\n\t\t\t\t<div>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"list-name\">\n\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tname={'list_name'}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a name for the list\"\n\t\t\t\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\t\t\t\tdata-state={'list_name'} // this.state property\n\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\tid='list_name' // id of the html element\n\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\tvalue={this.state.list_name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"list-description\">\n\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\tname={'list_description'}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a description for the list\"\n\t\t\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\t\t\tdata-state={'list_description'} // this.state property\n\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\tid='list_description' // id of the html element\n\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\tvalue={this.state.list_description}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{this.props.items && (\n\t\t\t\t\t\t\t<ItemsPage\n\t\t\t\t\t\t\t\titems={this.props.items}\n\t\t\t\t\t\t\t\tlist={this.props.list.id}\n\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>;\n\t}\n\n\t///////////////\n\n\trender() {\n\t\tlet content;\n\n\t\tif (this.state.canView) {\n\t\t\tcontent = this.renderItemsPage();\n\t\t} else {\n\t\t\tcontent = <p>Either this list does not exist or you do not have permission to view it</p>;\n\t\t}\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{ content }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nListDetails.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'lists': PropTypes.object.isRequired,\n\t'items': PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst lists = state.lists.things;\n\tconst list = lists[Object.keys(lists)[0]];\n\n\treturn ({\n\t\t'auth': state.auth,\n\t\t'errors': state.errors,\n\t\t'isLoading': state.lists.isLoading,\n\t\t'lists': lists,\n\t\t'list': list,\n\t\t'items': sortedItems(state),\n\t});\n};\n\nexport default connect(mapStateToProps)(withRouter(ListDetails));\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.confirmEmailNotSent());\n\t}\n\n\tsendConfirmationEmail() {\n\t\tthis.props.dispatch(auth.sendConfirmationEmail());\n\t}\n\n\trender() {\n\t\tconst emailVerified = this.props.auth.user.emailVerified;\n\t\tconst email_status = emailVerified ? 'verified': 'unverified';\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>My account</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div>Username: {this.props.auth.user.username}</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/changepassword\">Change password</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div>Email address: {this.props.auth.user.email}</div>\n\t\t\t\t\t\t<div>Status: {email_status}</div>\n\t\t\t\t\t\t{!emailVerified &&\t<button type=\"button\" className=\"btn btn-primary\"onClick={this.sendConfirmationEmail.bind(this)}>\n\t\t\t\t\t\t\t\tResend confirmation email\n\t\t\t\t\t\t</button>}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{this.props.auth.confirmEmailSent && (<div className=\"valid-feedback\">A verification email has been sent to {this.props.auth.user.email}. If you don't see it within a few minutes, please check your junk mail folder.</div>)}\n\t\t\t\t{this.props.auth.confirmEmailAlreadyVerified && (<div className=\"valid-feedback\">The email address {this.props.auth.user.email} has already been verified.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'sendConfirmationEmail': PropTypes.func.isRequired,\n\t'confirmEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'sendConfirmationEmail': auth.sendConfirmationEmail,\n\t'confirmEmailNotSent': auth.confirmEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.forgotPasswordEmailNotSent());\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.dispatch(auth.forgotPassword(user));\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) &&\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>}\n\t\t\t\t<h2>Forgot your password?</h2>\n\t\t\t\t<p>Enter your email address. A reset password link will be emailed to you.</p>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.email && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.email}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"valid-feedback\">If the address {this.state.email} is associated with an account, an email has been sent. If you don't see it within a few minutes, please check your junk mail folder.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'forgotPassword': auth.forgotPassword,\n\t'forgotPasswordEmailNotSent': auth.forgotPasswordEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { changePassword, passwordNotChanged } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass ChangePassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'old_password': '',\n\t\t\t'new_password': '',\n\t\t\t'new_password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconsole.log('submit changePassword');\n\t\tconst data = {\n\t\t\t'old_password': this.state.old_password,\n\t\t\t'new_password1': this.state.new_password,\n\t\t\t'new_password2': this.state.new_password_confirm\n\t\t};\n\n\t\tthis.props.changePassword(data, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Change your password</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'new_password',\n\t\t\t\t\t'input2': 'new_password_confirm',\n\t\t\t\t\t'message': 'New passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"old_password\">Old password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"old_password\"\n\t\t\t\t\t\t\t\t\tid=\"old_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.old_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your old password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password\">New password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password_confirm\">Confirm your new password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tChange password now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.changePassword && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.changePassword}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t      {this.props.auth.changePasswordComplete && (<div className=\"valid-feedback\">Your new password has been saved</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nChangePassword.propTypes = {\n\t'changePassword': PropTypes.func.isRequired,\n\t'passwordNotChanged': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ changePassword, passwordNotChanged })(withRouter(ChangePassword));\n","// Shown after user successfully verifies email address\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { logoutUser } from '../modules/auth';\n\nclass Verified extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onLogout();\n\t}\n\n\tonLogout(e) {\n\t\t// just in case a different user is logged in\n\t\t// to avoid confusion and force new login\n\t\tif (this.props.auth.isAuthenticated) {\n\t\t\tthis.props.logoutUser(this.props.history);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Your email address has been verified</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/login\" className=\"nav-link\">Login</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nVerified.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Verified));\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport { setCurrentUser, getUserInfo, logoutUser, getAuthToken } from '../modules/auth';\n\nimport Navbar from '../components/Navbar';\nimport Register from '../components/Register';\nimport Welcome from '../components/Welcome';\nimport Login from '../components/Login';\nimport Home from '../containers/Home';\nimport CreateList from '../containers/CreateList';\nimport ListDetails from '../containers/ListDetail';\nimport Account from '../components/Account';\nimport ForgotPassword from '../components/ForgotPassword';\nimport ChangePassword from '../components/ChangePassword';\nimport Verified from '../components/Verified';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password loads the bootstrap css from static/bootstrap\n\n// check if user is already logged in\nif(getAuthToken()) {\n\tstore.dispatch(setCurrentUser(localStorage.jwtToken));\n\tstore.dispatch(getUserInfo());\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.jwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\t\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t\t<Route exact path=\"/newlist\" component={ CreateList } />\n\t\t\t\t\t\t\t<Route exact path=\"/list/:slug\" component={ ListDetails } />\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/welcome\" component={ Welcome } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t<Route exact path=\"/changepassword\" component={ ChangePassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/verified\" component={ Verified } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./containers/App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}
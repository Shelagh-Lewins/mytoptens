{"version":3,"sources":["modules/errors.js","modules/formatErrorMessages.js","modules/fetchAPI.js","modules/isEmpty.js","modules/auth.js","constants/index.js","modules/items.js","modules/lists.js","modules/page.js","modules/rootReducer.js","store.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Welcome.js","components/Login.js","components/ListsList.js","modules/findObjectByProperty.js","modules/permissions.js","components/ListSummary.js","containers/ListsPage.js","components/FlashMessage.js","containers/Home.js","containers/CreateList.js","components/EditableTextField.js","components/Item.js","components/ItemsPage.js","containers/ListDetail.js","components/Account.js","components/ForgotPassword.js","components/ChangePassword.js","containers/App.js","serviceWorker.js","index.js"],"names":["getErrors","error","type","payload","clearErrors","updeep","require","initialState","formatErrorMessages","errors","messageArray","Object","keys","forEach","key","push","map","item","join","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","fetchAPI","_ref","url","data","_ref$method","method","_ref$useAuth","useAuth","_ref$useCSRF","useCSRF","_ref$headers","headers","Authorization","concat","store","getState","auth","user","token","FormData","append","fetch","body","then","response","ok","contentType","get","includes","json","catch","Promise","reject","Error","message","text","html","page_type","status","isEmpty","value","undefined","LOGOUT_USER_COMPLETE","setCurrentUser","dispatch","localStorage","setItem","setAuthToken","logoutUser","history","removeItem","logout user","getUserInfo","setUserInfo","username","email","id","slug","email_verified","get user info","forgotPasswordEmailNotSent","forgotPassword","formData","request password reset email","passwordNotChanged","changePasswordComplete","isAuthenticated","canCreateList","forgotPasswordEmailSent","resetPasswordComplete","LIST_IS_PUBLIC_VALUES","LIST_IS_PUBLIC_TEXTS","MAX_ITEMS_IN_LIST","CREATE_ITEM_SUCCEEDED","UPDATE_ITEM_SUCCEEDED","DELETE_ITEM_SUCCEEDED","updateItem","itemId","propertyName","Content-Type","JSON","stringify","defineProperty","updateItemSucceeded","update item","initialItemsState","things","isLoading","sortedItems","createSelector","state","items","sort","a","b","order","RECEIVE_ENTITIES","FETCH_LISTS_STARTED","FETCH_LISTS_FAILED","FETCH_LIST_BY_SLUG_STARTED","FETCH_LIST_BY_SLUG_FAILED","FILTER_LISTS","CREATE_LIST_STARTED","CREATE_LIST_SUCCEEDED","DELETE_LIST_SUCCEEDED","SET_LIST_IS_PUBLIC_SUCCEEDED","UPDATE_LIST_SUCCEEDED","itemSchema","schema","Entity","listSchema","receiveEntities","entities","fetchLists","normalizedData","normalize","fetch lists","fetchListBySlug","createList","list","create list","updateList","listId","updateListSucceeded","deleteList","deleteListSucceeded","delete list","setListIsPublic","_ref2","is_public","_ref3","setListIsPublicSucceeded","set list is public","initialListsState","getFilteredLists","lists","page","searchTerm","filter","match","RegExp","getFilteredPublicLists","grouped","getMyGroupedAndFilteredLists","created_by_id","combineReducers","arguments","action","toConsumableArray","constant","omit","updateIn","itemIndex","findIndex","newItems","splice","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","createElement","className","Link","to","onClick","onLogout","bind","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","Component","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","assertThisInitialized","formLength","checkValidity","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","handleSubmit","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","node","setCustomValidity","objectSpread","classNames","assign","noValidate","children","Register","password","password_confirm","handleInputChange","target","password1","password2","registerUser","nextProps","Container","ValidatedForm_ValidatedForm","Row","Col","Label","for","Input","required","onChange","minLength","pattern","registration","style","display","Welcome","Login","loginUser","authentication","ListsList","headerText","findObjectByProperty","parentObject","property","childObject","canViewList","identifier","userId","canEditList","ListSummary","canEdit","permissions","sm","md","description","onIsPublicChange","onDeleteList","showCreatedBy","created_by_username","ListsPage","onSearch","onAddList","handleTabClick","selectedTab","setListSetURL","listset","URLSearchParams","location","search","prevProps","_this$props","publicLists","components_ListsList","components_ListSummary","_this$props2","myLists","index","listsByIsPublic","URL","pathname","listsList","renderMyLists","renderPublicLists","renderTabs","FlashMessage","aria-hidden","Home","confirm","onCloseFlashMessage","src_containers_ListsPage","onCreateList","CreateList","newList","cancel","newItem","elements","renderItemInputs","EditableTextField","fakeEvent","dataset","initialValue","toggleInput","showInput","textarea","keyCode","which","classList","contains","newShowInputValue","isEditing","inputElement","handleNewValue","label","autoFocus","data-state","data-entityid","onKeyUp","tabIndex","Item","isEditingName","showDescription","src_components_EditableTextField","setIsEditingName","ItemsPage","element","entityid","itemsReducer","toggleForm","showNewItemForm","src_components_Item","renderItemsList","ListDetails","params","canView","list_name","list_description","components_ItemsPage","content","renderItemsPage","ownProps","Account","console","log","sendConfirmationEmail","ForgotPassword","ChangePassword","old_password","new_password","new_password_confirm","new_password1","new_password2","changePassword","getItem","jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","hostname","navigator","serviceWorker","ready","unregister","render","src_containers_App","getElementById"],"mappings":"8YAKaA,EAAY,SAAAC,GAExB,MAAO,CACNC,KANiB,aAOjBC,QAAWF,IAIAG,EAAc,WAC1B,MAAO,CACNF,KAZmB,iBAgBjBG,EAASC,EAAQ,IAEfC,EAAe,GCRNC,EAAA,SAAUC,GACxB,IAAIC,EAAe,GAanB,OAZAC,OAAOC,KAAKH,GAAQI,QAAQ,SAACC,GACD,kBAAhBL,EAAOK,GACjBJ,EAAaK,KAAKN,EAAOK,IAEzBL,EAAOK,GAAKE,IAAI,SAACC,GAChBP,EAAaK,KAAKE,OAKLP,EAAaQ,KAAK,MCnBnC,SAASC,EAAUC,GAClB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE/B,IADA,IAAIC,EAAUF,SAASC,OAAOE,MAAM,KAC3BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACxC,IAAIH,EAASC,EAAQE,GAAGE,OAGxB,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CAC1DC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIH,OAAON,EAGO,SAASU,EAATC,GAAiG,IAA7EC,EAA6ED,EAA7EC,IAAKC,EAAwEF,EAAxEE,KAAwEC,EAAAH,EAAlEI,cAAkE,IAAAD,EAAzD,MAAyDA,EAAAE,EAAAL,EAAlDM,eAAkD,IAAAD,KAAAE,EAAAP,EAAjCQ,eAAiC,IAAAD,KAAAE,EAAAT,EAAhBU,eAAgB,IAAAD,EAAN,GAAMA,EAY/G,OAXIH,IACHI,EAAQC,cAAR,SAAAC,OAAiCC,GAAMC,WAAWC,KAAKC,KAAKC,QAIzDT,IACHE,EAAQ,eAAiBvB,EAAU,cACnCe,EAAOA,GAAQ,IAAIgB,UACdC,OAAO,sBAAuBhC,EAAU,eAGvCiC,MAAMnB,EAAK,CAAES,UAASN,OAAUA,EAAQiB,KAAQnB,IACrDoB,KAAK,SAAAC,GAGL,GAAIA,EAASC,GAAI,CAChB,IAAMC,EAAcF,EAASb,QAAQgB,IAAI,iBAAmB,GAE5D,OAAID,EAAYE,SAAS,oBACjBJ,EAASK,OAAOC,MAAM,SAAA5D,GAC5B,OAAO6D,QAAQC,OAAO,IAAIC,MAAM,iBAAmB/D,EAAMgE,YAIvDR,EAAYE,SAAS,aACjBJ,EAASW,OAAOZ,KAAK,SAAAa,GAC3B,MAAO,CACNC,UAAa,UACbD,KAAQA,KAEPN,MAAM,SAAA5D,GACR,OAAO6D,QAAQC,OAAO,IAAIC,MAAM,eAAiB/D,EAAMgE,iBAIzD,EAIA,OAAwB,MAApBV,EAASc,OACLP,QAAQC,OAAO,IAAIC,MAAM,mBAAqB/B,IAG9B,MAApBsB,EAASc,OACLP,QAAQC,OAAO,IAAIC,MAAM,0BAA4B/B,IAGtDsB,EAASK,OAAON,KAAK,SAAAC,GAM3B,OAAOO,QAAQC,OAAO,IAAIC,MAAMxD,EAAoB+C,SAIpDM,MAAM,SAAA5D,GAER,OAAO6D,QAAQC,OAAO,IAAIC,MAAM/D,EAAMgE,YCjFzC,IASeK,EATC,SAACC,GAChB,YACWC,IAAVD,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9B5D,OAAOC,KAAK2D,GAAO5C,QAC/B,kBAAV4C,GAA8C,IAAxBA,EAAM3C,OAAOD,QCMhC8C,EAAuB,uBAuB7B,IAwDMC,EAAiB,SAACzB,EAAO0B,GAErC,OApED,SAAsB1B,GACrB2B,aAAaC,QAAQ,WAAY5B,GAkEjC6B,CAAa7B,GACN,CACN/C,KAnF8B,mBAoF9BC,QAAW,CAAE8C,WAUF8B,EAAa,SAACC,GAAD,OAAa,SAAAL,GAEtC,OADAA,EAASvE,KACF2B,EAAS,CACfE,IAAO,4BACPG,OAAU,OACVE,SAAW,IACTgB,KAAK,SAAAC,GAEP,OAlFDqB,aAAaK,WAAW,YAkFhBN,EAbD,CACNzE,KAAQuE,MAaLnB,KAAK,WAEP0B,EAAQjE,KAAK,OACZ8C,MAAM,SAAA5D,GACR,OAAO0E,EAAS3E,EAAU,CAAEkF,cAAe,0BAgBhCC,EAAc,kBAAM,SAACR,GACjC,OAAO5C,EAAS,CACfE,IAAO,0BACPG,OAAU,MACVE,SAAW,IACTgB,KAAK,SAAAN,GACN,OAAO2B,EAbiB,SAAA3B,GAC1B,MAAO,CACN9C,KAhH2B,gBAiH3BC,QAAW6C,GAUMoC,CAAY,CAC5BC,SAAYrC,EAAKqC,SACjBC,MAAStC,EAAKsC,MACdC,GAAMvC,EAAKuC,GACXC,KAAQxC,EAAKwC,KACbC,eAAkBzC,EAAKyC,oBAEtB5B,MAAM,SAAA5D,GACR,OAAO0E,EAAS3E,EAAU,CAAE0F,gBAAiB,iCAMlCC,EAA6B,SAAA1C,GACzC,MAAO,CACN/C,KA1I4C,mCAoJjC0F,EAAiB,SAACN,GAAD,OAAW,SAAAX,GACxCA,EAASvE,KAET,IAAIyF,EAAY,IAAI3C,SAEpB,IAAI,IAAI9B,KAAQkE,EACfO,EAAS1C,OAAO/B,EAAMkE,EAAMlE,IAG7B,OAAOW,EAAS,CAEfE,IAAO,oCACPC,KAAQ2D,EACRzD,OAAU,OACVE,SAAW,IACTgB,KAAK,SAAAC,GACN,OAAOoB,EArBF,CACNzE,KArJwC,iCA0KtC2D,MAAM,SAAA5D,GACR,OAAO0E,EAAS3E,EAAU,CAAE8F,+BAAA,8EAAAlD,OAA8G0C,EAA9G,oDAsCjBS,EAAqB,SAAA9C,GACjC,MAAO,CACN/C,KAjNkC,yBAqNvB8F,EAAyB,SAAC/C,GACtC,MAAO,CACN/C,KAtNsC,6BAkPpCG,EAASC,EAAQ,IAEfC,EAAe,CACpB0F,iBAAmB,EACnBC,eAAiB,EACjBC,yBAA2B,EAC3BC,uBAAyB,EACzBJ,wBAA0B,EAC1BhD,KAAQ,IAGT,SAASkD,EAAcjD,GAGtB,OAAQqB,EAAQrB,GAGF,mBCpRFoD,EAAwB,EAAC,GAAO,GAChCC,EAAuB,CAAC,UAAW,UACnCC,EAAoB,WCiBpBC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAwB,wBAiC9B,IAAMC,EAAa,SAACC,EAAQC,EAActC,GAAvB,OAAiC,SAAAI,GAG1D,OAAO5C,EAAS,CACfE,IAAA,yBAAAW,OAAgCgE,EAAhC,KACAlE,QAAW,CAAEoE,eAAgB,oBAC7B5E,KAAQ6E,KAAKC,UAALrG,OAAAsG,EAAA,EAAAtG,CAAA,GAAkBkG,EAAetC,IACzCnC,OAAU,QACVE,SAAW,IACTgB,KAAK,SAAAC,GACP,OAAOoB,EAMF,SAAA3C,GAAqC,IAANuD,EAAMvD,EAANuD,GACrC,MAAO,CACNrF,KAAQuG,EACRtG,QAAW,CACVoF,GAAMA,IAVS2B,CAAoB3D,MAClCM,MAAM,SAAA5D,GACR,OAAO0E,EAAS3E,EAAU,CAAEmH,cAAelH,EAAMgE,eAoCnD,IAAI5D,EAASC,EAAQ,IAEf8G,EAAoB,CACzBC,OAAU,GACVC,WAAa,EACbrH,MAAS,MAuCH,IAGMsH,EAAcC,YAC1B,CAJuB,SAAAC,GAAK,OAAIA,EAAMC,MAAML,SAK5C,SAACK,GAOA,OANiB/G,OAAOC,KAAK8G,GAAO1G,IAAI,SAAAuE,GACvC,OAAOmC,EAAMnC,KACVoC,KAAK,SAASC,EAAGC,GACpB,OAAOD,EAAEE,MAAQD,EAAEC,UCxITC,EAAmB,mBACnBC,EAAsB,sBACtBC,EAAqB,qBACrBC,EAA6B,6BAC7BC,GAA4B,qBAC5BC,GAAe,eACfC,GAAsB,sBACtBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAA+B,+BAC/BC,GAAwB,wBAE/BC,GAAa,IAAIC,IAAOC,OAAO,SAC/BC,GAAa,IAAIF,IAAOC,OAAO,QAAS,CAC7ClB,MAAS,CAACgB,MAGX,SAASI,GAAgBC,GACxB,MAAO,CACN7I,KAAQ6H,EACR5H,QAAW4I,GAgBN,SAASC,KACf,OAAO,SAACrE,EAAU7B,GACjB6B,EAbM,CACNzE,KAAQ8H,IAeR,IAAI1F,GAAU,EAMd,OAJIQ,IAAWC,KAAKC,KAAKC,QACxBX,GAAU,GAGJP,EAAS,CACfE,IAAO,yBACPG,OAAU,MACVE,QAAWA,IACTgB,KAAK,SAAAC,GACP,IAAM0F,EAAiBC,YAAU3F,EAAU,CAACsF,KAE5C,OAAOlE,EAASmE,GAAgBG,MAC9BpF,MAAM,SAAA5D,GAGR,OAFA0E,EAzBK,CACNzE,KAAQ+H,IA0BAtD,EAAS3E,EAAU,CAAEmJ,cAAelJ,EAAMgE,cAmB7C,SAASmF,GAAgB5D,GAC/B,OAAO,SAACb,EAAU7B,GACjB6B,EAbM,CACNzE,KAAQgI,IAeR,IAAI5F,GAAU,EAMd,OAJIQ,IAAWC,KAAKC,KAAKC,QACxBX,GAAU,GAGJP,EAAS,CACfE,IAAA,8BAAAW,OAAqC4C,GACrCpD,OAAU,MACVE,QAAWA,IACTgB,KAAK,SAAAC,GACP,IAAM0F,EAAiBC,YAAU3F,EAAU,CAACsF,KAE5C,OAAOlE,EAASmE,GAAgBG,MAC9BpF,MAAM,SAAA5D,GAGR,OAFA0E,EAzBK,CACNzE,KAAQiI,KA0BAxD,EAAS3E,EAAU,CAAEmJ,cAAelJ,EAAMgE,cAc7C,IAAMoF,GAAa,SAACC,EAAMtE,GAAP,OAAmB,SAAAL,GAG5C,OAFAA,EAkBO,CACNzE,KAAQmI,KAjBFtG,EAAS,CACfE,IAAO,yBACPC,KAAQ6E,KAAKC,UAAUsC,GACvBlH,OAAU,OACVE,SAAW,EACXI,QAAW,CAAEoE,eAAgB,sBAC3BxD,KAAK,SAAAC,GACPoB,EAeM,CACNzE,KAAQoI,GACRnI,QAAW,CACVmJ,KAlB4B/F,KAC7ByB,EAAQjE,KAAR,SAAA6B,OAAsBW,EAASiC,SAE7B3B,MAAM,SAAA5D,GACR,OAAO0E,EAAS3E,EAAU,CAAEuJ,cAAetJ,EAAMgE,eAqB5C,IAAMuF,GAAa,SAACC,EAAQ5C,EAActC,GAAvB,OAAiC,SAAAI,GAG1D,OAAO5C,EAAS,CACfE,IAAA,yBAAAW,OAAgC6G,EAAhC,KACA/G,QAAW,CAAEoE,eAAgB,oBAC7B5E,KAAQ6E,KAAKC,UAALrG,OAAAsG,EAAA,EAAAtG,CAAA,GAAkBkG,EAAetC,IACzCnC,OAAU,QACVE,SAAW,IACTgB,KAAK,SAAAC,GACP,OAAOoB,EAMF,SAAA3C,GAAqC,IAANuD,EAAMvD,EAANuD,GACrC,MAAO,CACNrF,KAAQuI,GACRtI,QAAW,CACVoF,GAAMA,IAVSmE,CAAoBnG,MAClCM,MAAM,SAAA5D,GACR,OAAO0E,EAAS3E,EAAU,CAAEmH,cAAelH,EAAMgE,eAe5C,IAAM0F,GAAa,SAAApE,GAAE,OAAI,SAACZ,EAAU7B,GAC1C,OAAOf,EAAS,CACfE,IAAA,yBAAAW,OAAgC2C,EAAhC,KACAnD,OAAU,SACVE,SAAW,IACTgB,KAAK,SAAAC,GACP,OAAOoB,EAMF,SAA6BY,GACnC,MAAO,CACNrF,KAAQqI,GACRpI,QAAW,CACVoF,OAVeqE,CAAoBrE,MAClC1B,MAAM,SAAA5D,GACR,OAAO0E,EAAS3E,EAAU,CAAE6J,cAAe5J,EAAMgE,eAa5C,IAAM6F,GAAkB,SAAAC,GAAA,IAAGxE,EAAHwE,EAAGxE,GAAIyE,EAAPD,EAAOC,UAAP,OAAuB,SAAArF,GACrD,OAAO5C,EAAS,CACfE,IAAA,yBAAAW,OAAgC2C,EAAhC,KACA7C,QAAW,CAAEoE,eAAgB,oBAC7B5E,KAAQ6E,KAAKC,UAAU,CAAEgD,cACzB5H,OAAU,QACVE,SAAW,IACTgB,KAAK,SAAAC,GACP,OAAOoB,EAMF,SAAAsF,GAAqD,IAAjB1E,EAAiB0E,EAAjB1E,GAAIyE,EAAaC,EAAbD,UAC9C,MAAO,CACN9J,KAAQsI,GACRrI,QAAW,CACVoF,GAAMA,EACNyE,cAXeE,CAAyB3G,MACvCM,MAAM,SAAA5D,GACR,OAAO0E,EAAS3E,EAAU,CAAEmK,qBAAsBlK,EAAMgE,eAgB1D,IAAI5D,GAASC,EAAQ,IAGf8J,GAAoB,CACzB9C,WAAa,EACbrH,MAAS,KACToH,OAAU,IAcEgD,GAAmB7C,YAC/B,CAPuB,SAAAC,GACvB,OAAO9G,OAAOC,KAAK6G,EAAM6C,MAAMjD,QAAQrG,IAAI,SAAAuE,GAC1C,OAAOkC,EAAM6C,MAAMjD,OAAO9B,MANC,SAAAkC,GAC5B,OAAOA,EAAM8C,KAAKC,aAWlB,SAACF,EAAOE,GACP,OAAOF,EAAMG,OAAO,SAAAnB,GAEnB,MAAmB,KAAfkB,EACIlB,EAEDA,EAAKlI,KAAKsJ,MAAM,IAAIC,OAAOH,EAAY,UAkBpCI,IAb6BpD,YACzC,CAAC6C,IACD,SAAAC,GACC,IAAMO,EAAU,GAMhB,OAJAxE,EAAsBxF,QAAQ,SAAAmJ,GAC7Ba,EAAQb,GAAaM,EAAMG,OAAO,SAAAnB,GAAI,OAAIA,EAAKU,YAAcA,MAGvDa,IAI6BrD,YACrC,CAAC6C,IACD,SAAAC,GACC,OAAOA,EAAMG,OAAO,SAAAnB,GACnB,OAAOA,EAAKU,eAKFc,GAA+BtD,YAC3C,CAAC6C,IACD,SAAAC,GACC,IAAMO,EAAU,GAMhB,OAJAxE,EAAsBxF,QAAQ,SAAAmJ,GAC7Ba,EAAQb,GAAaM,EAAMG,OAAO,SAAAnB,GAAI,OAAKA,EAAKyB,gBAAkBlI,GAAMC,WAAWC,KAAKC,KAAKuC,IAAQ+D,EAAKU,YAAcA,MAGlHa,IC5ST,IAAIxK,GAASC,EAAQ,IAEfC,GAAe,CACpBiK,WAAc,ICGAQ,mBAAgB,CAC9BvK,OTWc,WAAwC,IAA/BgH,EAA+BwD,UAAAtJ,OAAA,QAAA6C,IAAAyG,UAAA,GAAAA,UAAA,GAAvB1K,EAAc2K,EAASD,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAAzG,EACtD,OAAO0G,EAAOhL,MACb,IAvBiB,aAyBhB,IAAIO,EAAS,GAWb,OATAE,OAAOC,KAAKsK,EAAO/K,SAASU,QAAQ,SAACC,GACD,kBAAxBoK,EAAO/K,QAAQW,GAEzBL,EAAOK,GAAO,CAACoK,EAAO/K,QAAQW,IAE9BL,EAAOK,GAAPH,OAAAwK,EAAA,EAAAxK,CAAkBuK,EAAO/K,QAAQW,MAI5BT,EAAOI,EAAQ,IAGvB,IAtCmB,eAuClB,MAAO,GAGR,QACC,OAAOgH,ISjCT1E,KLuQc,WAAwC,IAA/B0E,EAA+BwD,UAAAtJ,OAAA,QAAA6C,IAAAyG,UAAA,GAAAA,UAAA,GAAvB1K,EAAc2K,EAASD,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAAzG,EACtD,OAAO0G,EAAOhL,MACb,IA1Q8B,mBA2Q7B,OAAOG,EAAO,CACb4F,iBAAoB3B,EAAQ4G,EAAO/K,QAAQ8C,OAC3CiD,cAAiBA,EAAcgF,EAAO/K,QAAQ8C,OAC9CD,KAAQ3C,EAAO+K,SAAS,CAAEnI,MAASiI,EAAO/K,QAAQ8C,SAChDwE,GAEJ,IA3Q2B,gBA4Q1B,OAAOpH,EAAO,CACb2C,KAAQ,CACPqC,SAAY6F,EAAO/K,QAAQkF,SAC3BC,MAAS4F,EAAO/K,QAAQmF,MACxBE,KAAQ0F,EAAO/K,QAAQqF,KACvBD,GAAM2F,EAAO/K,QAAQoF,GACrBE,eAAkByF,EAAO/K,QAAQsF,iBAEhCgC,GAEJ,KAAKhD,EACJ,OAAOpE,EAAO,CACb4F,iBAAmB,EACnBC,cAAiBA,IACjBlD,KAAQ3C,EAAO+K,SAAS,KACtB3D,GAGJ,IA7R4C,iCA8R3C,OAAOpH,EAAO,CACb8F,yBAA2B,EAC3BC,uBAAyB,GACvBqB,GAGJ,IAzSwC,6BA0SvC,OAAOpH,EAAO,CACb8F,yBAA2B,EAC3BC,uBAAyB,GACvBqB,GAGJ,IA/SqC,0BAgTpC,OAAOpH,EAAO,CACb8F,yBAA2B,EAC3BC,uBAAyB,GACvBqB,GAGJ,IArTkC,uBAsTjC,OAAOpH,EAAO,CACb2F,wBAA0B,EAC1BvF,OAAU,IACRgH,GAGJ,IA3TsC,2BA4TrC,OAAOpH,EAAO,CACb2F,wBAA0B,GACxByB,GAGJ,QACC,OAAOA,IKrUT8C,KDHc,WAA4C,IAA9B9C,EAA8BwD,UAAAtJ,OAAA,QAAA6C,IAAAyG,UAAA,GAAAA,UAAA,GAAtB1K,GAAc2K,EAAQD,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAAzG,EAC1D,OAAQ0G,EAAOhL,MACd,KAAKkI,GACJ,OAAO/H,GAAO,CAAEmK,WAAcU,EAAO/K,QAAQqK,YAAc/C,GAG5D,QACC,OAAOA,ICHT6C,MF2Sc,WAAkD,IAAnC7C,EAAmCwD,UAAAtJ,OAAA,QAAA6C,IAAAyG,UAAA,GAAAA,UAAA,GAA3Bb,GAAmBc,EAAQD,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAAzG,EAChE,OAAQ0G,EAAOhL,MACd,KAAKuE,EACJ,OAAOpE,GAAO+J,GAAmB,IAGlC,KAAKrC,EAAkB,IACdgB,EAAamC,EAAO/K,QAApB4I,SACJuB,EAAQ,GAMZ,OAJIvB,GAAYA,EAASuB,QACxBA,EAAQvB,EAASuB,OAGXjK,GAAO,CAAEgH,OAAUiD,EAAOhD,WAAa,GAASG,GAGxD,KAAKO,EACJ,OAAO3H,GAAO,CAAEiH,WAAa,GAAQG,GAGtC,KAAKQ,EACJ,OAAO5H,GAAO,CAAEiH,WAAa,GAASG,GAGvC,KAAKS,EACJ,OAAO7H,GAAO,CACbiH,WAAa,EACbD,OAAUhH,GAAO+K,SAAS,KACxB3D,GAGJ,KAAKU,GACJ,OAAO9H,GAAO,CAAEiH,WAAa,GAASG,GAGvC,KAAKY,GAEJ,OAAOhI,GAAOoH,EAAOA,GAGtB,KAAKa,GACJ,IAAMgB,EAAO4B,EAAO/K,QAAQmJ,KAC5B,OAAOjJ,GAAO,CAAEgH,OAAS1G,OAAAsG,EAAA,EAAAtG,CAAA,GAAI2I,EAAK/D,GAAK+D,IAAU7B,GAGlD,KAAKc,GACJ,OAAOlI,GAAO,CAAEgH,OAAUhH,GAAOgL,KAAK,CAACH,EAAO/K,QAAQoF,MAAQkC,GAG/D,KAAKe,GACJ,IAAMiB,EAASyB,EAAO/K,QAAQoF,GAE9B,OAAOlF,GAAO,CAAEgH,OAAS1G,OAAAsG,EAAA,EAAAtG,CAAA,GAAI8I,EAAS,CAAEO,UAAakB,EAAO/K,QAAQ6J,aAAiBvC,GAYtF,KAAKjB,EAAuB,IACrBvF,EAAOiK,EAAO/K,QAAQc,KAM5B,OAAOZ,GAAOiL,SAAP,UAAA1I,OAA0B3B,EAAKqI,KAA/B,UAJP,SAAiB5B,GAChB,MAAO,GAAG9E,OAAO8E,EAAOzG,EAAKsE,KAG+BkC,GAG9D,KAAKf,EAQJ,OAAOrG,GAAOiL,SAAP,UAAA1I,OAA0BsI,EAAO/K,QAAQsJ,OAAzC,UAPP,SAAoB/B,GACnB,IAAM6D,EAAY7D,EAAM8D,UAAU,SAACvK,GAAD,OAAUA,IAASiK,EAAO/K,QAAQyG,SAChE6E,EAAW,GAAG7I,OAAO8E,GAEzB,OADA+D,EAASC,OAAOH,EAAW,GACpBE,GAGoEhE,GAG7E,QACC,OAAOA,IEjYTC,MH8Fc,WAAkD,IAAnCD,EAAmCwD,UAAAtJ,OAAA,QAAA6C,IAAAyG,UAAA,GAAAA,UAAA,GAA3B7D,EAAmB8D,EAAQD,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAAzG,EAChE,OAAQ0G,EAAOhL,MACd,KAAKuE,EACJ,OAAOpE,EAAO+G,EAAmB,IAGlC,KAAKW,EAAkB,IACdgB,EAAamC,EAAO/K,QAApB4I,SACR,OAAIA,GAAYA,EAASrB,MACjBrH,EAAO,CAAEgH,OAAU0B,EAASrB,MAAOJ,WAAa,GAASG,GAG1DA,EAGR,KAAKS,EACJ,OAAO7H,EAAO,CACbgH,OAAUhH,EAAO+K,SAAS,KACxB3D,GAGJ,KAAKjB,EACJ,IAAMvF,EAAOiK,EAAO/K,QAAQc,KAC5B,OAAOZ,EAAO,CAAEgH,OAAS1G,OAAAsG,EAAA,EAAAtG,CAAA,GAAIM,EAAKsE,GAAKtE,IAAUwG,GAGlD,KAAKf,EACJ,OAAOrG,EAAO,CAAEgH,OAAUhH,EAAOgL,KAAK,CAACH,EAAO/K,QAAQoF,MAAQkC,GAG/D,QACC,OAAOA,MI7HK5E,OAVD8I,YACbC,GAEAC,YAAQC,YAAgBC,KACvBC,OAAOC,8BAA+BD,OAAOC,qDCDzCC,eACL,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAAJ,IAClBE,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAAuL,GAAAO,KAAAH,KAAMH,KACD1E,MAAQ,CACZiF,cAAgB,GAHCN,4EAMNO,GACZA,EAAEC,iBACFN,KAAKO,SAAS,SAAAC,GAAS,MAAK,CAC3BJ,cAAiBI,EAAUJ,iDAIpBC,GACRA,EAAEC,iBACFN,KAAKH,MAAMpH,WAAWuH,KAAKH,MAAMnH,0CAGzB,IAAA+H,EAAAT,KAAAU,EAC0BV,KAAKH,MAAMpJ,KAArCkD,EADA+G,EACA/G,gBAAiBjD,EADjBgK,EACiBhK,KAEnBiK,EACLC,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,sBACZpK,EAAKqC,UAAY6H,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,YAAWF,EAAAtF,EAAAuF,cAACE,GAAA,EAAD,CAAMC,GAAG,WAAWF,UAAU,YAAYpK,EAAKqC,WAC1F6H,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,YAAWF,EAAAtF,EAAAuF,cAACE,GAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,WAAWG,QAASjB,KAAKkB,SAASC,KAAKnB,OAA9D,YAGrBoB,EACLR,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,sBACbF,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,YACbF,EAAAtF,EAAAuF,cAACE,GAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,aAA9B,aAEDJ,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,YACbF,EAAAtF,EAAAuF,cAACE,GAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,UAA9B,WAIH,OACCJ,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,iDACdF,EAAAtF,EAAAuF,cAACE,GAAA,EAAD,CAAMD,UAAU,eAAeE,GAAG,KAAlC,eACAJ,EAAAtF,EAAAuF,cAAA,UAAQC,UAAU,iBAAiBlN,KAAK,SAASyN,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBACrLR,QAAS,SAACZ,GAAOI,EAAKL,aAAaC,KACnCO,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,yBAEjBF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAS,4BAAAxK,OAA8B0J,KAAK7E,MAAMiF,aAAe,OAAS,IAAMnH,GAAG,0BACtFU,EAAkBgH,EAAYS,EAC/BR,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,4BACfF,EAAAtF,EAAAuF,cAAA,SAAOC,UAAU,uBAAuBlN,KAAK,SAAS8N,YAAY,SAASD,aAAW,WACtFb,EAAAtF,EAAAuF,cAAA,UAAQC,UAAU,uCAAuClN,KAAK,UAA9D,oBAjDe+N,aAkENC,eAJS,SAACzG,GAAD,MAAY,CACnC1E,KAAQ0E,EAAM1E,OAGyB,CAAEgC,cAA3BmJ,CAAyCC,aAAWjC,yECrD9CkC,eACpB,SAAAA,IAAc,IAAAhC,EAAA,OAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAA8B,IACbhC,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAAyN,GAAA3B,KAAAH,QAMD7E,MAAQ,CACP4G,aAAe,GARFjC,EA+DdkC,eAAiB,GA/DHlC,EAuEdmC,iBAAmB,SAACC,GAEnB,GAAIA,EAAKC,SAASC,YACjB,OAAOF,EAAKG,kBAIZ,GAAIH,EAAKC,SAASG,aAChB,OAAQxC,EAAKkC,eAAL,GAAA1L,OAAuB4L,EAAKtO,KAA5B,aAET,IAAK,IAAM2O,KAAczC,EAAKkC,eAC3B,GAAIE,EAAKC,SAASI,GAChB,OAAOzC,EAAKkC,eAAeO,IAnFrBzC,EA6Fd0C,SAAW,WACV,IAAMC,EAASC,IAASC,YAATtO,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KACT+C,EAAaJ,EAAOpN,OAQ1B,IAA+B,IAA3BoN,EAAOK,gBAA2B,CACrC,IAAK,IAAI1N,EAAI,EAAGA,EAAIyN,EAAYzN,IAAK,CAEpC,IAAM8M,EAAOO,EAAOrN,GAMd2N,EAAab,EAAKc,WAAWC,cAAc,qBAGjD,GAAIF,GAA8C,WAAhCb,EAAKgB,SAASC,cAC/B,GAAKjB,EAAKC,SAASiB,MAIlBL,EAAWM,YAAc,OAJA,CACzB,IAAI1L,EAAUmI,EAAKmC,iBAAiBC,IAASA,EAAKG,kBAClDU,EAAWM,YAAc1L,GAO5B,OAAO,EAGP,IAAK,IAAIvC,EAAI,EAAGA,EAAIyN,EAAYzN,IAAK,CACpC,IAAM8M,EAAOO,EAAOrN,GACd2N,EAAab,EAAKc,WAAWC,cAAc,qBAC7CF,GAA8C,WAAhCb,EAAKgB,SAASC,gBAC/BJ,EAAWM,YAAc,IAI3B,OAAO,GAxIKvD,EA4IdwD,aAAe,SAAAjD,GACdA,EAAEC,iBAEER,EAAK0C,YACR1C,EAAKD,MAAM0D,SAASlD,GAGrBP,EAAKS,SAAS,CAAEwB,aAAe,KAhJ/BjC,EAAK0C,SAAW1C,EAAK0C,SAASrB,KAAd9M,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KAChBA,EAAK0D,gBAAkB1D,EAAK0D,gBAAgBrC,KAArB9M,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KAJVA,mFAWM,IAAAW,EAAAT,KACnB,GAAGA,KAAKH,MAAM4D,gBAAiB,CAgB9B,IAAMhB,EAASC,IAASC,YAAY3C,MAE9B0D,EAAW1D,KAAKH,MAAM4D,gBAAgBE,OACtCC,EAAW5D,KAAKH,MAAM4D,gBAAgBI,OAEtCC,EAAgBrB,EAAOQ,cAAP,IAAA3M,OAAyBoN,IAEzCK,EAAgBtB,EAAOQ,cAAP,IAAA3M,OAAyBsN,IAE3CE,aAAyBE,aAAeD,aAAyBC,cACpEF,EAAcG,QAAU,SAAC5D,GAAD,OAAOI,EAAK+C,gBAAgBE,EAAUE,EAAUvD,IACxE0D,EAAcE,QAAU,SAAC5D,GAAD,OAAOI,EAAK+C,gBAAgBE,EAAUE,EAAUvD,8CAK3DsD,EAAQE,EAAQxD,GAG/B,IAAM6D,EAAOxB,IAASC,YAAY3C,MAElC,GAAIkE,aAAgBF,YAAa,CAC9B,IAAMF,EAAgBI,EAAKjB,cAAL,IAAA3M,OAAuBqN,IACvCI,EAAgBG,EAAKjB,cAAL,IAAA3M,OAAuBuN,IAEzCC,aAAyBE,aAAeD,aAAyBC,cAChEF,EAAc7L,QAAU8L,EAAc9L,MACxC8L,EAAcI,kBAAkB,IAEjCJ,EAAcI,kBAAkBnE,KAAKH,MAAM4D,gBAAgB9L,4CAiGhE,IAAMkI,EAAKxL,OAAA+P,GAAA,EAAA/P,CAAA,GAAQ2L,KAAKH,OAGpBwE,EAAa,GAWjB,OAVIxE,EAAMiB,YACTuD,EAAUhQ,OAAAwK,EAAA,EAAAxK,CAAOwL,EAAMiB,kBAChBjB,EAAMiB,WAGVd,KAAK7E,MAAM4G,aACdsC,EAAW5P,KAAK,iBAKhBmM,EAAAtF,EAAAuF,cAAA,OAAAxM,OAAAiQ,OAAA,GACKzE,EADL,CAECiB,UAAWuD,EACXE,YAAU,EACVhB,SAAUvD,KAAKsD,eAEdtD,KAAKH,MAAM2E,iBAhL2B7C,aCZrC8C,eACL,SAAAA,IAAc,IAAA3E,EAAA,OAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAAyE,IACb3E,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAAoQ,GAAAtE,KAAAH,QACK7E,MAAQ,CACZpC,SAAY,GACZC,MAAS,GACT0L,SAAY,GACZC,iBAAoB,IAErB7E,EAAK8E,kBAAoB9E,EAAK8E,kBAAkBzD,KAAvB9M,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KACzBA,EAAKwD,aAAexD,EAAKwD,aAAanC,KAAlB9M,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KATPA,iFAYIO,GACjBL,KAAKO,SAALlM,OAAAsG,EAAA,EAAAtG,CAAA,GACEgM,EAAEwE,OAAO/P,KAAOuL,EAAEwE,OAAO5M,6CAIfoI,GACZA,EAAEC,iBACF,IAAM5J,EAAO,CACZqC,SAAYiH,KAAK7E,MAAMpC,SACvBC,MAASgH,KAAK7E,MAAMnC,MACpB8L,UAAa9E,KAAK7E,MAAMuJ,SACxBK,UAAa/E,KAAK7E,MAAMwJ,kBAGzB3E,KAAKH,MAAMmF,aAAatO,EAAMsJ,KAAKH,MAAMnH,2DAGhBuM,GACtBA,EAAUxO,KAAKkD,iBACjBqG,KAAKH,MAAMnH,QAAQjE,KAAK,iDAUtBuL,KAAKH,MAAMpJ,KAAKkD,iBAClBqG,KAAKH,MAAMnH,QAAQjE,KAAK,sCAoBzB,OACCmM,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,KACCtE,EAAAtF,EAAAuF,cAAA,+BACAD,EAAAtF,EAAAuF,cAACsE,GAAD,CAAe5B,SAAWvD,KAAKsD,aAAeG,gBAAkB,CAC/DE,OAAU,WACVE,OAAU,mBACVlM,QAAW,yBAEXiJ,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAI,SAAX,iBACA3E,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,QACLkB,KAAK,QACL2Q,UAAU,EACVxM,GAAG,QACHyM,SAAW1F,KAAK4E,kBAChB3M,MAAQ+H,KAAK7E,MAAMnC,MACnB0I,YAAY,6BAEbd,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,qBACfF,EAAAtF,EAAAuF,cAAA,SAAOC,UAAU,wBAChBF,EAAAtF,EAAAuF,cAAA,8FAKJD,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAI,YAAX,YACA3E,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,OACLkB,KAAK,WACLmE,GAAG,WACHwM,UAAU,EACVC,SAAW1F,KAAK4E,kBAChB3M,MAAQ+H,KAAK7E,MAAMpC,SACnB2I,YAAY,wBAEbd,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,qBACfF,EAAAtF,EAAAuF,cAAA,SAAOC,UAAU,wBAChBF,EAAAtF,EAAAuF,cAAA,mFAKJD,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAI,YAAX,YACA3E,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,WACLkB,KAAK,WACL2Q,UAAU,EACVE,UAAW,EACXC,QAAQ,aACR3M,GAAG,WACHhB,MAAQ+H,KAAK7E,MAAMuJ,SACnBhD,YAAY,sBACZgE,SAAW1F,KAAK4E,oBAEjBhE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,wBAIlBF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAI,oBAAX,yBACA3E,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,WACLkB,KAAK,mBACLmE,GAAG,mBACHwM,UAAU,EACVE,UAAW,EACXC,QAAQ,aACR3N,MAAQ+H,KAAK7E,MAAMwJ,iBACnBjD,YAAY,wBACZgE,SAAW1F,KAAK4E,oBAEjBhE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,qBACfF,EAAAtF,EAAAuF,cAAA,SAAOC,UAAU,wBAAuBF,EAAAtF,EAAAuF,cAAA,UACvCD,EAAAtF,EAAAuF,cAAA,oFACAD,EAAAtF,EAAAuF,cAAA,+DACAD,EAAAtF,EAAAuF,cAAA,8DACAD,EAAAtF,EAAAuF,cAAA,2DAKJD,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,UAAQjN,KAAK,SAASkN,UAAU,mBAAhC,oBAKEF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACHxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACErF,KAAKH,MAAM1L,OAAO0R,cAAgBjF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,oBAAoBgF,MAAO,CAAEC,QAAW,UAAY/F,KAAKH,MAAM1L,OAAO0R,yBArKxGlE,aAyLRC,eALS,SAAAzG,GAAK,MAAK,CACjC1E,KAAQ0E,EAAM1E,KACdtC,OAAUgH,EAAMhH,SAGsB,CAAE6Q,aT/Jb,SAACtO,EAAMgC,GAAP,OAAmB,SAAAL,GAC9CA,EAASvE,KAET,IAAIyF,EAAY,IAAI3C,SAGpB,IAAI,IAAI9B,KAAQ4B,EACf6C,EAAS1C,OAAO/B,EAAM4B,EAAK5B,IAQ5B,OAAOW,EAAS,CACfE,IAAO,kCACPC,KAAQ2D,EACRzD,OAAU,SACRkB,KAAK,SAAAC,GAEN,OADAyB,EAAQjE,KAAK,YACNwC,IACNM,MAAM,SAAA5D,GACR,OAAO0E,EAAS3E,EAAU,CAAEmS,aAAgBlS,EAAMgE,gBSwIrCiK,CAA0CC,aAAW4C,KC3L9DuB,eACL,SAAAA,IAAc,IAAAlG,EAAA,OAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAAgG,IACblG,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAA2R,GAAA7F,KAAAH,QACK7E,MAAQ,CACZhH,OAAU,IAHE2L,yFAOYmF,GACtBA,EAAUxO,KAAKkD,iBACjBqG,KAAKH,MAAMnH,QAAQjE,KAAK,iDAKtBuL,KAAKH,MAAMpJ,KAAKkD,iBAClBqG,KAAKH,MAAMnH,QAAQjE,KAAK,sCAKzB,OACCmM,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,KACCtE,EAAAtF,EAAAuF,cAAA,oCACAD,EAAAtF,EAAAuF,cAAA,0EACAD,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAACE,GAAA,EAAD,CAAMC,GAAG,SAASF,UAAU,YAA5B,mBA3BgBa,aA6CPC,eALS,SAACzG,GAAD,MAAY,CACnC1E,KAAQ0E,EAAM1E,KACdtC,OAAUgH,EAAMhH,SAGFyN,CAAyBoE,IC3ClCC,eACL,SAAAA,IAAc,IAAAnG,EAAA,OAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAAiG,IACbnG,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAA4R,GAAA9F,KAAAH,QACK7E,MAAQ,CACZnC,MAAS,GACT0L,SAAY,IAJA5E,mFASVE,KAAKH,MAAMpJ,KAAKkD,iBAClBqG,KAAKH,MAAMnH,QAAQjE,KAAK,uDAIAwQ,GACtBA,EAAUxO,KAAKkD,iBACjBqG,KAAKH,MAAMnH,QAAQjE,KAAK,+CAIR4L,GACjBL,KAAKO,SAALlM,OAAAsG,EAAA,EAAAtG,CAAA,GACEgM,EAAEwE,OAAO/P,KAAOuL,EAAEwE,OAAO5M,6CAIfoI,GACZA,EAAEC,iBACF,IAAM5J,EAAO,CACZsC,MAASgH,KAAK7E,MAAMnC,MACpB0L,SAAY1E,KAAK7E,MAAMuJ,UAExB1E,KAAKH,MAAMqG,UAAUxP,EAAMsJ,KAAKH,MAAMnH,0CAItC,OACCkI,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,KACCtE,EAAAtF,EAAAuF,cAAA,mBACAD,EAAAtF,EAAAuF,cAACsE,GAAD,CAAe5B,SAAUvD,KAAKsD,aAAanC,KAAKnB,OAC/CY,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAI,SAAX,iBACA3E,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,QACLkB,KAAK,QACLmE,GAAG,QACHwM,UAAU,EACVC,SAAU1F,KAAK4E,kBAAkBzD,KAAKnB,MACtC/H,MAAO+H,KAAK7E,MAAMnC,MAClB0I,YAAY,8BAEbd,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,wBAIlBF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAI,YAAX,YACA3E,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,WACLkB,KAAK,WACL2Q,UAAU,EACVxM,GAAG,WACHhB,MAAQ+H,KAAK7E,MAAMuJ,SACnBhD,YAAY,WACZgE,SAAW1F,KAAK4E,kBAAkBzD,KAAKnB,QAExCY,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,wBAIlBF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,UAAQjN,KAAK,SAASkN,UAAU,mBAAhC,WAKEF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACHxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACErF,KAAKH,MAAM1L,OAAOgS,gBAAkBvF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,oBAAoBgF,MAAO,CAAEC,QAAW,UAAY/F,KAAKH,MAAM1L,OAAOgS,mBAI7HvF,EAAAtF,EAAAuF,cAACE,GAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,mBAA9B,4BAxFgBW,aAyGJC,eALQ,SAACzG,GAAD,MAAY,CACnC1E,KAAQ0E,EAAM1E,KACdtC,OAAUgH,EAAMhH,SAGwB,CAAE+R,UXjDlB,SAACxP,EAAMgC,GAAP,OAAmB,SAAAL,GAC3CA,EAASvE,KAET,IAAIyF,EAAY,IAAI3C,SAGpB,IAAI,IAAI9B,KAAQ4B,EACf6C,EAAS1C,OAAO/B,EAAM4B,EAAK5B,IAG5B,OAAOW,EAAS,CACfE,IAAO,2BACPC,KAAQ2D,EACRzD,OAAU,OACVE,SAAW,IACTgB,KAAK,SAAAC,GACN,OAAOoB,EAASD,EAAenB,EAASzC,QACvCwC,KAAK,WAGP,OAFA0B,EAAQjE,KAAK,KAEN8B,GAAM8B,SAASQ,OACpBtB,MAAM,SAAA5D,GACR,OAAO0E,EAAS3E,EAAU,CAAEyS,eAAkB,4EW2BhCvE,CAAwCqE,IC/FzCG,GAfG,SAAA1Q,GAAyC,IAAtC8O,EAAsC9O,EAAtC8O,SAAqB6B,GAAiB3Q,EAA5BgI,UAA4BhI,EAAjB2Q,YACzC,OACCzF,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,CAAWpE,UAAU,cACnBuF,GAAczF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACdxE,EAAAtF,EAAAuF,cAAA,MAAIC,UAAU,mBACZuF,IAGHzF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACEZ,KCdU,SAAS8B,GAAT5Q,GAOd,IAP+E,IAAjC6Q,EAAiC7Q,EAAjC6Q,aAAcC,EAAmB9Q,EAAnB8Q,SAAUvO,EAASvC,EAATuC,MAKhE3D,EAAOD,OAAOC,KAAKiS,GAEhBnR,EAAE,EAAGA,EAAEd,EAAKe,OAAQD,IAAK,CACjC,IAAIqR,EAAcF,EAAajS,EAAKc,IACpC,GAAIqR,EAAYD,KAAcvO,EAC7B,OAAOwO,GCMH,SAASC,GAAYC,GAE3B,IAAMH,EAAWnS,OAAOC,KAAKqS,GAAY,GACnC1O,EAAQ0O,EAAWH,GACnBrL,EAAQ5E,GAAMC,WACdwH,EAAQ7C,EAAM6C,MAAMjD,OACpB6L,EAASzL,EAAM1E,KAAKC,KAAKuC,GAE3ByN,GAAc,EAElB,GAAIrS,OAAOC,KAAK0J,GAAO3I,OAAS,EAAG,CAClC,IAAI2H,EAAOsJ,GAAqB,CAAEC,aAAgBvI,EAAOwI,WAAUvO,UAE/D+E,IAASA,EAAKU,WAAcV,EAAKyB,gBAAkBmI,KACtDF,GAAc,GAIhB,OAAOA,EAGD,SAASG,GAAYF,GAE3B,IAAMH,EAAWnS,OAAOC,KAAKqS,GAAY,GACnC1O,EAAQ0O,EAAWH,GACnBrL,EAAQ5E,GAAMC,WACdwH,EAAQ7C,EAAM6C,MAAMjD,OACpB6L,EAASzL,EAAM1E,KAAKC,KAAKuC,GAE3B4N,GAAc,EAElB,GAAIxS,OAAOC,KAAK0J,GAAO3I,OAAS,EAAG,CAClC,IAAI2H,EAAOsJ,GAAqB,CAAEC,aAAgBvI,EAAOwI,WAAUvO,UAE/D+E,GAASA,EAAKyB,gBAAkBmI,IACnCC,GAAc,GAIhB,OAAOA,EC3CR,IA4CeC,GA5CK,SAAAjH,GACnB,IAAI5G,EAAE,UAAA3C,OAAWuJ,EAAM7C,KAAK/D,IACxBhB,EAAQ4H,EAAM7C,KAAKU,UAAY,SAAW,UAC1CqJ,EAAUC,GAAwB,CAAE/N,GAAM4G,EAAM7C,KAAK/D,KAEzD,OACC2H,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,CAAK4B,GAAG,IAAIC,GAAG,IAAIpG,UAAU,kBAC5BF,EAAAtF,EAAAuF,cAACE,GAAA,EAAD,CAAMC,GAAE,SAAA1K,OAAWuJ,EAAM7C,KAAK9D,OAC7B0H,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,eACdF,EAAAtF,EAAAuF,cAAA,WAAMhB,EAAM7C,KAAKlI,OAElB8L,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,aAAajB,EAAM7C,KAAKmK,cAExCvG,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,eACdF,EAAAtF,EAAAuF,cAAA,8CACCD,EAAAtF,EAAAuF,cAAA,UAAQC,UAAU,eAAe7I,MAAOA,EAAOyN,SAkBnD,SAA0BrF,GAEzB,IAAMpI,EAA2B,WAAnBoI,EAAEwE,OAAO5M,MACvB4H,EAAMuH,iBAAiB,CAAEnO,GAAM4G,EAAM7C,KAAK/D,GAAIyE,UAAazF,KArBmBgB,GAAIA,GAC7Ee,EAAqBtF,IAAI,SAAAgJ,GAAS,OAClCkD,EAAAtF,EAAAuF,cAAA,UAAQrM,IAAKkJ,EAAWzF,MAAOyF,GAAYA,QAK9CqJ,GACAnG,EAAAtF,EAAAuF,cAAA,UAAQC,UAAU,iBAAiBG,QAgBtC,SAAsBZ,GACrBR,EAAMwH,aAAa,CAAEpO,GAAM4G,EAAM7C,KAAK/D,GAAInE,KAAQ+K,EAAM7C,KAAKlI,SAjB3D,UAEA+K,EAAMyH,eACN1G,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,mBAAf,eAA8CjB,EAAM7C,KAAKuK,uBC7BvDC,uBACL,SAAAA,EAAY3H,GAAO,IAAAC,EAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAAwH,IAClB1H,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAAmT,GAAArH,KAAAH,KAAMH,KA6BP4H,SAAW,SAAApH,GACVP,EAAKD,MAAM4H,SAASpH,EAAEwE,OAAO5M,QA/BX6H,EAkCnB4H,UAAY,WACX5H,EAAKD,MAAMnH,QAAQjE,KAAK,aAnCNqL,EAuFnB6H,eAAiB,SAACtH,GACbP,EAAK3E,MAAMyM,cAAgBvH,EAAEwE,OAAO5L,KACvC6G,EAAKS,SAAS,CACbqH,YAAevH,EAAEwE,OAAO5L,KAGzB6G,EAAK+H,cAAcxH,EAAEwE,OAAO5L,MAvF7B,IAAI6O,EAAU,eACVjI,EAAMpJ,KAAKkD,kBAEdmO,EADkB,IAAIC,gBAAgBjI,EAAKD,MAAMmI,SAASC,QACtC7Q,IAAI,YAAc,YATrB,OAYlB0I,EAAK+H,cAAcC,GAEnBhI,EAAK3E,MAAQ,CACZyM,YAAeE,GAfEhI,kFAmBAoI,GAEdA,EAAUzR,KAAKkD,kBAAoBqG,KAAKH,MAAMpJ,KAAKkD,kBACtDqG,KAAKO,SAAS,CACbqH,YAAe,iBAGhB5H,KAAK6H,cAAc,6DAYD,IAAAM,EACqCnI,KAAKH,MAArDuI,EADWD,EACXC,YAAahB,EADFe,EACEf,iBAAkBC,EADpBc,EACoBd,aAEvC,OACCzG,EAAAtF,EAAAuF,cAACwH,GAAD,CAAWhC,WAAW,oBACpB+B,EAAY1T,IAAI,SAAAsI,GAAI,OACpB4D,EAAAtF,EAAAuF,cAACyH,GAAD,CACC9T,IAAKwI,EAAK/D,GACV+D,KAAMA,EACNoK,iBAAkBA,EAClBC,aAAcA,EACdC,eAAe,+CAOJ,IAAAiB,EACqCvI,KAAKH,MAAjD2I,EADOD,EACPC,QAASpB,EADFmB,EACEnB,iBAAkBC,EADpBkB,EACoBlB,aAEnC,OAAOhT,OAAOC,KAAKkU,GAAS9T,IAAI,SAACgJ,EAAW+K,GAC3C,IAAMC,EAAkBF,EAAQ9K,GAC5B2I,EAA2B,SAAd3I,EAAuB,kBAAoB,mBAE5D,OACCkD,EAAAtF,EAAAuF,cAAA,OAAKrM,IAAKiU,GACPC,EAAgBrT,OAAS,GAC1BuL,EAAAtF,EAAAuF,cAACwH,GAAD,CAAW3K,UAAWA,EAAW2I,WAAYA,GAC3CqC,EAAgBhU,IAAI,SAAAsI,GAAI,OACxB4D,EAAAtF,EAAAuF,cAACyH,GAAD,CACC9T,IAAKwI,EAAK/D,GACV+D,KAAMA,EACNoK,iBAAkBA,EAClBC,aAAcA,gDAURS,GACb,IAAIa,EAAG,GAAArS,OAAM0J,KAAKH,MAAMmI,SAASY,SAA1B,aAAAtS,OAA8CwR,GACrD9H,KAAKH,MAAMnH,QAAQjE,KAAKkU,wCAcxB,OACC/H,EAAAtF,EAAAuF,cAAA,UAAID,EAAAtF,EAAAuF,cAAA,UACHD,EAAAtF,EAAAuF,cAAA,QACCC,UAAsC,aAA3Bd,KAAK7E,MAAMyM,YAA4B,WAAa,GAC/D3O,GAAG,WACHgI,QAASjB,KAAK2H,gBAHf,YAKA/G,EAAAtF,EAAAuF,cAAA,QACCC,UAAsC,iBAA3Bd,KAAK7E,MAAMyM,YAAgC,WAAa,GACnE3O,GAAG,eACHgI,QAASjB,KAAK2H,gBAHf,mDAUF,IAAIkB,EAQJ,MAN+B,aAA3B7I,KAAK7E,MAAMyM,YACdiB,EAAY7I,KAAK8I,gBACoB,iBAA3B9I,KAAK7E,MAAMyM,cACrBiB,EAAY7I,KAAK+I,qBAGd/I,KAAKH,MAAM7E,UAEb4F,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,iBAAf,cAMDF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,KACCtE,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,CAAK4B,GAAG,KACPrG,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,qBACdF,EAAAtF,EAAAuF,cAAA,SAAOC,UAAU,eAChB4E,SAAU1F,KAAKyH,SACf7T,KAAK,OACL8N,YAAY,cAEZ1B,KAAKH,MAAMjG,eACXgH,EAAAtF,EAAAuF,cAAA,UACCC,UAAU,kBACVG,QAASjB,KAAK0H,WAFf,kBASJ1H,KAAKH,MAAMpJ,KAAKkD,iBAAmBiH,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,QACjDd,KAAKgJ,aACNpI,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cAEhBF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,SACb+H,WA7JkBlH,cAoKTE,gBAAW2F,ICzKX,SAASyB,GAATvT,GAAkD,IAA1BiC,EAA0BjC,EAA1BiC,QAAS/D,EAAiB8B,EAAjB9B,KAAMqN,EAAWvL,EAAXuL,QACrD,OACCL,EAAAtF,EAAAuF,cAAA,OAAKC,UAAS,eAAAxK,OAAiB1C,IAC9BgN,EAAAtF,EAAAuF,cAAA,YAAOlJ,GACPiJ,EAAAtF,EAAAuF,cAAA,UAAQjN,KAAK,SAASkN,UAAU,QAAQW,aAAW,QAAQR,QAASA,GAClEL,EAAAtF,EAAAuF,cAAA,QAAMqI,cAAY,QAAlB,cCOCC,8MAYL1B,SAAW,SAAAvJ,GACV4B,EAAKD,MAAMxH,Sf8FN,SAAqB6F,GAC3B,MAAO,CACNtK,KAAQkI,GACRjI,QAAW,CAAEqK,eejGOF,CAAkBE,OAGvCkJ,iBAAmB,SAAA1R,GAAuB,IAApBuD,EAAoBvD,EAApBuD,GAAIyE,EAAgBhI,EAAhBgI,UACzBoC,EAAKD,MAAMxH,SAAS2F,GAAsB,CAAE/E,KAAIyE,kBAGjD2J,aAAe,SAAA5J,GAAkB,IAAfxE,EAAewE,EAAfxE,GAAInE,EAAW2I,EAAX3I,KACjBsU,QAAO,4CAAA9S,OAA6CxB,KAEtDgL,EAAKD,MAAMxH,SAAS2F,GAAiB/E,OAIxCoQ,oBAAsB,WACrBvJ,EAAKD,MAAMxH,SAASvE,yFA1BpBkM,KAAKH,MAAMxH,SAAS2F,iDAGFkK,GAEfA,EAAUzR,KAAKC,KAAKC,QAAUqJ,KAAKH,MAAMpJ,KAAKC,KAAKC,OACrDqJ,KAAKH,MAAMxH,SAAS2F,uCAwBrB,OACC4C,EAAAtF,EAAAuF,cAAA,YACG7I,EAAQgI,KAAKH,MAAM1L,SAAYyM,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,KAChCtE,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAACoI,GAAD,CACCtR,QAASzD,EAAoB8L,KAAKH,MAAM1L,QACxCP,KAAK,QACLqN,QAASjB,KAAKqJ,yBAKlBzI,EAAAtF,EAAAuF,cAACyI,GAAD,CACC7S,KAAMuJ,KAAKH,MAAMpJ,KACjB+R,QAASxI,KAAKH,MAAM2I,QACpBJ,YAAapI,KAAKH,MAAMuI,YACxBxO,cAAeoG,KAAKH,MAAMpJ,KAAKmD,cAC/B6N,SAAUzH,KAAKyH,SACf8B,aAAcvJ,KAAKuJ,aACnBnC,iBAAkBpH,KAAKoH,iBACvBC,aAAcrH,KAAKqH,aACnBrM,UAAWgF,KAAKH,MAAM7E,oBAtDR2G,aA6EJC,eARS,SAACzG,GAAD,MAAY,CACnC1E,KAAQ0E,EAAM1E,KACdtC,OAAUgH,EAAMhH,OAChB6G,UAAaG,EAAM6C,MAAMhD,UACzBoN,YAAe9J,GAAuBnD,GACtCqN,QAAWhK,GAA6BrD,KAG1ByG,CAAyBuH,IC9ElCK,eACL,SAAAA,IAAc,IAAA1J,EAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAAwJ,IACb1J,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAAmV,GAAArJ,KAAAH,QAgDDuJ,aAAe,SAACE,GACf3J,EAAKD,MAAMxH,SAAS0E,GAAW0M,EAAS3J,EAAKD,MAAMnH,WAlDtCoH,EAiEduJ,oBAAsB,WACrBvJ,EAAKD,MAAMxH,SAASvE,MAhEpBgM,EAAK3E,MAAQ,CACZrG,KAAQ,GACRqS,YAAe,IAEhB,IAAK,IAAI/R,EAAE,EAAGA,GAAG6E,EAAmB7E,IACnC0K,EAAK3E,MAAL,OAAA7E,OAAkBlB,EAAlB,UAA8B,GAC9B0K,EAAK3E,MAAL,OAAA7E,OAAkBlB,EAAlB,iBAAqC,GARzB,OAUb0K,EAAK8E,kBAAoB9E,EAAK8E,kBAAkBzD,KAAvB9M,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KACzBA,EAAKwD,aAAexD,EAAKwD,aAAanC,KAAlB9M,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KACpBA,EAAK4J,OAAS5J,EAAK4J,OAAOvI,KAAZ9M,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KAZDA,iFAeIO,GACjBL,KAAKO,SAALlM,OAAAsG,EAAA,EAAAtG,CAAA,GACEgM,EAAEwE,OAAO/P,KAAOuL,EAAEwE,OAAO5M,uCAIrBoI,GACNL,KAAKH,MAAMnH,QAAQjE,KAAK,0CAGZ4L,GACZA,EAAEC,iBASF,IAPA,IAAImJ,EAAU,CACb3U,KAAQkL,KAAK7E,MAAMrG,KACnBqS,YAAenH,KAAK7E,MAAMgM,YAC1B/L,MAAS,IAIDhG,EAAE,EAAGA,GAAG6E,EAAmB7E,IACnC,GAA+B,KAA3B4K,KAAK7E,MAAL,OAAA7E,OAAkBlB,IAAa,CAClC,IAAMuU,EAAU,CACf7U,KAAQkL,KAAK7E,MAAL,OAAA7E,OAAkBlB,EAAlB,UACR+R,YAAenH,KAAK7E,MAAL,OAAA7E,OAAkBlB,EAAlB,iBACfoG,MAASpG,GAEVqU,EAAQrO,MAAM3G,KAAKkV,GAIrB3J,KAAKuJ,aAAaE,2FAYAvB,GAEdlI,KAAKH,MAAMpJ,KAAKmD,eACnBoG,KAAKH,MAAMnH,QAAQjE,KAAK,gDAWzB,IAFA,IAAImV,EAAW,GAENxU,EAAE,EAAGA,GAAG6E,EAAmB7E,IACnCwU,EAASnV,KACRmM,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,aAAatM,IAAG,OAAA8B,OAASlB,IACvCwL,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,kBAAUzL,GACVwL,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAG,OAAAjP,OAASlB,EAAT,UAAV,QACAwL,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,OACLkB,KAAI,OAAAwB,OAASlB,EAAT,SACJ6D,GAAE,OAAA3C,OAASlB,EAAT,SACFsQ,SAAW1F,KAAK4E,kBAChB3M,MAAQ+H,KAAK7E,MAAL,OAAA7E,OAAkBlB,EAAlB,UACRsM,YAAY,SAEbd,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,uBAGjBF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAG,OAAAjP,OAASlB,EAAT,iBAAV,eACAwL,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,OACLkB,KAAI,OAAAwB,OAASlB,EAAT,gBACJ6D,GAAE,OAAA3C,OAASlB,EAAT,gBACFsQ,SAAW1F,KAAK4E,kBAChB3M,MAAQ+H,KAAK7E,MAAL,OAAA7E,OAAkBlB,EAAlB,iBACRsM,YAAY,gBAEbd,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,yBAKpB,OAAO8I,mCAMP,OACChJ,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,MACGlN,EAAQgI,KAAKH,MAAM1L,SAAYyM,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,KAChCtE,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAACoI,GAAD,CACCtR,QAASzD,EAAoB8L,KAAKH,MAAM1L,QACxCP,KAAK,QACLqN,QAASjB,KAAKqJ,yBAKlBzI,EAAAtF,EAAAuF,cAAA,+BACAD,EAAAtF,EAAAuF,cAACsE,GAAD,CAAe5B,SAAWvD,KAAKsD,cAC9B1C,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAI,QAAX,QACA3E,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,OACLkB,KAAK,OACL2Q,UAAU,EACVxM,GAAG,OACHyM,SAAW1F,KAAK4E,kBAChB3M,MAAQ+H,KAAK7E,MAAMrG,KACnB4M,YAAY,wBAEbd,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,qBACfF,EAAAtF,EAAAuF,cAAA,SAAOC,UAAU,wBAChBF,EAAAtF,EAAAuF,cAAA,iCAKJD,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAI,YAAX,eACA3E,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,OACLkB,KAAK,cACLmE,GAAG,cACHyM,SAAW1F,KAAK4E,kBAChB3M,MAAQ+H,KAAK7E,MAAMgM,YACnBzF,YAAY,+BAEbd,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,wBAIjBd,KAAK6J,mBACNjJ,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,UAAQjN,KAAK,SAASkN,UAAU,oBAAmBG,QAASjB,KAAK0J,QAAjE,UAGA9I,EAAAtF,EAAAuF,cAAA,UAAQjN,KAAK,SAASkN,UAAU,mBAAhC,eAKEF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACHxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACErF,KAAKH,MAAM1L,OAAO6J,OAAS4C,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,oBAAoBgF,MAAO,CAAEC,QAAW,UAAY/F,KAAKH,MAAM1L,OAAO6J,kBAjL/F2D,aAqMVC,eALS,SAAAzG,GAAK,MAAK,CACjC1E,KAAQ0E,EAAM1E,KACdtC,OAAUgH,EAAMhH,SAGFyN,CAAyBC,aAAW2H,KCjBpCM,uBAvLd,SAAAA,EAAYjK,GAAO,IAAAC,EAAA,OAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAA8J,IAClBhK,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAAyV,GAAA3J,KAAAH,QA2CD0J,OAAS,WAER,IAAMK,EAAY,CACjBlF,OAAU,CACTmF,QAAW,CAAE7O,MAAS2E,EAAKD,MAAM,eACjC5H,MAAS6H,EAAK3E,MAAM8O,eAGtBnK,EAAKD,MAAM+E,kBAAkBmF,GAC7BjK,EAAKoK,eArDapK,EAwDnB0C,SAAW,WAEV,IACMN,EADSQ,IAASC,YAATtO,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KACKmD,cAAcnD,EAAK3E,MAAMvH,MACvCmP,EAAab,EAAKc,WAAWC,cAAc,qBAEjD,GAAKf,EAAKC,SAASiB,MAQlB,OAFAL,EAAWM,YAAc,IAElB,EAPP,IAAI1L,EAAUuK,EAAKG,kBAGnB,OAFAU,EAAWM,YAAc1L,GAElB,GAhERmI,EAAK3E,MAAQ,CACZgP,WAAa,EACbpI,aAAe,EACfkI,aAAgB,GAChBrW,KAAQiM,EAAMuK,SAAW,WAAa,SANrBtK,uEAYXO,GAEK,MADDA,EAAEgK,SAAWhK,EAAEiK,QAGzBtK,KAAKmK,UAAU9J,qCAIPA,GACaA,EAAEwE,OAAO0F,UAAUC,SAAS,gBAGjDxK,KAAKO,SAAS,CACb0J,aAAgB5J,EAAEwE,OAAOxB,cAG3BrD,KAAKkK,oDAIL,IAAMO,GAAqBzK,KAAK7E,MAAMgP,UAGF,oBAAzBnK,KAAKH,MAAM6K,WACrB1K,KAAKH,MAAM6K,UAAUD,GAGtBzK,KAAKO,SAAS,CACb4J,UAAaM,yCAkCFpK,GACZA,EAAEC,iBAGF,IAAMqK,EAAetK,EAAEwE,OAAO5B,cAAcjD,KAAK7E,MAAMvH,MAEnDoM,KAAKwC,aACRxC,KAAKH,MAAM+K,eAAeD,GAC1B3K,KAAKkK,eAGNlK,KAAKO,SAAS,CAAEwB,aAAe,qCAI/B,IAAInO,EAAO,OACPoM,KAAKH,MAAMuK,WACdxW,EAAO,YAGR,IAAIyQ,EAAa,GACbrE,KAAKH,MAAMiB,YACduD,EAAUhQ,OAAAwK,EAAA,EAAAxK,CAAO2L,KAAKH,MAAMiB,kBACrBd,KAAKH,MAAMiB,WAGfd,KAAK7E,MAAM4G,aACdsC,EAAW5P,KAAK,iBAGjB,IACIE,EADEwV,EAAYnK,KAAK7E,MAAMgP,UAuE7B,OApEGnK,KAAKH,MAAMkH,QAEZpS,EADGwV,EAEFvJ,EAAAtF,EAAAuF,cAAA,QACC0D,YAAU,EACVhB,SAAUvD,KAAKsD,aAAanC,KAAKnB,MACjCc,UAAWuD,GAEXzD,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAKvF,KAAKH,MAAM5G,IAAK+G,KAAKH,MAAMgL,OACvCjK,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CAAOsF,WAAS,EACflX,KAAMA,EACNkB,KAAMkL,KAAKH,MAAM5G,GACjB6H,UAAU,eACV2E,SAAUzF,KAAKH,MAAM4F,SACrBsF,aAAY/K,KAAKH,MAAM,cACvBmL,gBAAehL,KAAKH,MAAM,iBAC1B5G,GAAI+G,KAAKH,MAAM5G,GACfyM,SAAU1F,KAAKH,MAAM+E,kBACrB3M,MAAO+H,KAAKH,MAAM5H,MAClByJ,YAAa1B,KAAKH,MAAM6B,cAEzBd,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,wBAIlBF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,UAAQjN,KAAK,SAASkN,UAAU,oBAAmBG,QAASjB,KAAK0J,QAAjE,UAGA9I,EAAAtF,EAAAuF,cAAA,UAAQjN,KAAK,SAASkN,UAAU,mBAAhC,WAOqB,KAArBd,KAAKH,MAAM5H,MAEb2I,EAAAtF,EAAAuF,cAAA,QACCI,QAASjB,KAAKmK,UAAUhJ,KAAKnB,MAC5BiL,QAASjL,KAAKiL,QAAQ9J,KAAKnB,MAC5BkL,SAAS,KACRlL,KAAKH,MAAM5H,OAIb2I,EAAAtF,EAAAuF,cAAA,QACCC,UAAU,cACVoK,SAAS,IACTjK,QAASjB,KAAKmK,UAAUhJ,KAAKnB,MAC7BiL,QAASjL,KAAKiL,QAAQ9J,KAAKnB,OAC1BA,KAAKH,MAAM6B,aAKS,KAArB1B,KAAKH,MAAM5H,QACdtD,EACCiM,EAAAtF,EAAAuF,cAAA,YAAOb,KAAKH,MAAM5H,QAOpB2I,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,uBACZnM,UAlL0BgN,cC6DjBwJ,uBA7Dd,SAAAA,EAAYtL,GAAO,IAAAC,EAAA,OAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAAmL,IAClBrL,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAA8W,GAAAhL,KAAAH,QAEK7E,MAAQ,CACZiQ,eAAiB,GAJAtL,gFAQFqK,GAChBnK,KAAKO,SAAS,CACb6K,cAAiBjB,qCAKlB,IAAIkB,GAAkB,EAOtB,MAN6B,KAAzBrL,KAAKH,MAAMlL,KAAKG,KACnBuW,GAAkB,EACRrL,KAAK7E,MAAMiQ,eAAiB7U,GAAMC,WAAW4E,MAAML,OAAOiF,KAAKH,MAAMlL,KAAKsE,KAAkE,KAA3D1C,GAAMC,WAAW4E,MAAML,OAAOiF,KAAKH,MAAMlL,KAAKsE,IAAInE,OAC7IuW,GAAkB,GAIlBzK,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,CAAKvE,UAAU,kBACdF,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,eACdF,EAAAtF,EAAAuF,cAAA,QAAMC,UAAU,SAASd,KAAKH,MAAMlL,KAAK6G,MAAzC,KAAuDoF,EAAAtF,EAAAuF,cAACyK,GAAD,CACtDvE,QAAS/G,KAAKH,MAAMkH,QACpBjS,KAAI,GAAAwB,OAAK0J,KAAKH,MAAMlL,KAAK6G,MAArB,SACJqP,MAAM,YACNnJ,YAAY,4BACZqJ,aAAA,GAAAzU,OAAe0J,KAAKH,MAAMlL,KAAK6G,MAA/B,SACAwP,gBAAehL,KAAKH,MAAMlL,KAAKsE,GAC/BA,GAAE,GAAA3C,OAAK0J,KAAKH,MAAMlL,KAAK6G,MAArB,SACFoJ,kBAAmB5E,KAAKH,MAAM+E,kBAC9BgG,eAAgB5K,KAAKH,MAAM+K,eAC3BF,UAAW1K,KAAKuL,iBAAiBpK,KAAKnB,MACtC/H,MAAO+H,KAAKH,MAAMlL,KAAKG,QAGxBuW,GACAzK,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,aACdF,EAAAtF,EAAAuF,cAACyK,GAAD,CACClB,UAAU,EACVrD,QAAS/G,KAAKH,MAAMkH,QACpBjS,KAAI,GAAAwB,OAAK0J,KAAKH,MAAMlL,KAAK6G,MAArB,gBACJkG,YAAY,kCACZmJ,MAAM,mBACNE,aAAA,GAAAzU,OAAe0J,KAAKH,MAAMlL,KAAK6G,MAA/B,gBACAwP,gBAAehL,KAAKH,MAAMlL,KAAKsE,GAC/BA,GAAE,GAAA3C,OAAK0J,KAAKH,MAAMlL,KAAK6G,MAArB,gBACFoJ,kBAAmB5E,KAAKH,MAAM+E,kBAC9BgG,eAAgB5K,KAAKH,MAAM+K,eAC3B3S,MAAO+H,KAAKH,MAAMlL,KAAKwS,uBArDXxF,cCAb6J,eACL,SAAAA,EAAY3L,GAAO,IAAAC,EAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAAwL,IAClB1L,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAAmX,GAAArL,KAAAH,KAAMH,KA0BP+E,kBAAoB,SAACvE,GACpBP,EAAKS,SAALlM,OAAAsG,EAAA,EAAAtG,CAAA,GACEgM,EAAEwE,OAAOmF,QAAQ7O,MAAQkF,EAAEwE,OAAO5M,SA7BlB6H,EAiCnB8K,eAAiB,SAACa,GACjB,IAAMnR,EAASmR,EAAQzB,QAAQ0B,SAIzBnR,EADckR,EAAQzB,QAAQ7O,MAAMhG,MAAM,KACf,GAC3B8C,EAAQwT,EAAQxT,MAEtB6H,EAAKD,MAAMxH,SAASsT,EAAwBrR,EAAQC,EAActC,KAzChD6H,EA4CnB8L,WAAa,WACZ9L,EAAKS,SAAS,CAAEsL,iBAAoB/L,EAAK3E,MAAM0Q,mBA1C/C/L,EAAK3E,MAAQ,GAKb,IAAK,IAAI/F,EAAE,EAAGA,GAAI6E,EAAmB7E,IACpC0K,EAAK3E,MAAL,GAAA7E,OAAclB,EAAd,UAA0B,GAC1B0K,EAAK3E,MAAL,GAAA7E,OAAclB,EAAd,iBAAiC,GAIlC,IAAMgG,EAAQ0E,EAAKD,MAAMzE,MAdP,OAgBlB/G,OAAOC,KAAK8G,GAAO7G,QAAQ,SAACC,GAC3B,GAAI4G,EAAM5G,GAAKgH,OAASJ,EAAM5G,GAAKgH,OAASvB,EAAmB,CAC9D,IAAMuB,EAAQJ,EAAM5G,GAAKgH,MAEzBsE,EAAK3E,MAAL,GAAA7E,OAAckF,EAAd,QAA4BJ,EAAM5G,GAAKyE,GACvC6G,EAAK3E,MAAL,GAAA7E,OAAckF,EAAd,UAA8BJ,EAAM5G,GAAKM,KACzCgL,EAAK3E,MAAL,GAAA7E,OAAckF,EAAd,iBAAqCJ,EAAM5G,GAAK2S,eAtBhCrH,iFAkDlB,IADA,IAAI8J,EAAW,GACNxU,EAAE,EAAGA,GAAG6E,EAAmB7E,IAAK,CACxC,IAAMN,EAAOkL,KAAK7E,MAAL,GAAA7E,OAAclB,EAAd,UACP2R,EAAU/G,KAAKH,MAAMkH,SACvBjS,GAAQiS,IACX6C,EAASnV,KACRmM,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,CAAK5Q,IAAG,OAAA8B,OAASlB,IAChBwL,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAACiL,GAAD,CACCtX,IAAG,OAAA8B,OAASlB,GACZT,KAAM,CACLsE,GAAM+G,KAAK7E,MAAL,GAAA7E,OAAclB,EAAd,QACNoG,MAASpG,EACTN,KAAQA,EACRqS,YAAenH,KAAK7E,MAAL,GAAA7E,OAAclB,EAAd,kBAEhBwP,kBAAmB5E,KAAK4E,kBACxBgG,eAAgB5K,KAAK4K,eACrB5N,KAAMgD,KAAKH,MAAM7C,KACjB+J,QAASA,OAOf,OAAO6C,mCAIP,OACChJ,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACbd,KAAK+L,0BAlFcpK,aAwFTC,iBAAU4J,IC/EnBQ,uBACL,SAAAA,EAAYnM,GAAO,IAAAC,EAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAAgM,IAClBlM,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAA2X,GAAA7L,KAAAH,QAaD4E,kBAAoB,SAACvE,GACpBP,EAAKS,SAALlM,OAAAsG,EAAA,EAAAtG,CAAA,GACEgM,EAAEwE,OAAOmF,QAAQ7O,MAAQkF,EAAEwE,OAAO5M,SAhBlB6H,EAoBnB8K,eAAiB,SAACa,GACjB,IAAMtO,EAASsO,EAAQzB,QAAQ0B,SAKzBnR,EADckR,EAAQzB,QAAQ7O,MAAMhG,MAAM,KACf,GAC3B8C,EAAQwT,EAAQxT,MAEtB6H,EAAKD,MAAMxH,SAAS2F,GAAiBb,EAAQ5C,EAActC,KA7BzC6H,EAgCnBuJ,oBAAsB,WACrBvJ,EAAKD,MAAMxH,SAASvE,MA7BpB,IAAMoF,EAAO2G,EAAMzB,MAAM6N,OAAO/S,KAJd,OAMlB4G,EAAK3E,MAAQ,CAEZjC,QAGD2G,EAAMxH,SAAS2F,GAAsB9E,IAXnB4G,kFAoCAoI,GACdA,EAAUlN,YAAcgF,KAAKH,MAAM7E,WAEtCgF,KAAKO,SAAS,CACb2L,QAAWlF,GAAwB,CAAE9N,KAAQ8G,KAAK7E,MAAMjC,OACxD6N,QAAWC,GAAwB,CAAE9N,KAAQ8G,KAAK7E,MAAMjC,OACxDiT,UAAanM,KAAKH,MAAM7C,KAAKlI,KAC7BsX,iBAAoBpM,KAAKH,MAAM7C,KAAKmK,wDAMtC,OAAOvG,EAAAtF,EAAAuF,cAAA,YACJ7I,EAAQgI,KAAKH,MAAM1L,SAAYyM,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,KAChCtE,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAACoI,GAAD,CACCtR,QAASzD,EAAoB8L,KAAKH,MAAM1L,QACxCP,KAAK,QACLqN,QAASjB,KAAKqJ,yBAKjBrJ,KAAKH,MAAM7C,MACX4D,EAAAtF,EAAAuF,cAAA,WACCD,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,KACCtE,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,CAAKvE,UAAU,aACdF,EAAAtF,EAAAuF,cAACyK,GAAD,CACCvE,QAAS/G,KAAK7E,MAAM4L,QACpBtB,UAAU,EACV3Q,KAAM,YACN4M,YAAY,wCACZmJ,MAAM,YACNE,aAAY,YACZC,gBAAehL,KAAKH,MAAM7C,KAAK/D,GAC/BA,GAAG,YACH2L,kBAAmB5E,KAAK4E,kBACxBgG,eAAgB5K,KAAK4K,eACrB3S,MAAO+H,KAAK7E,MAAMgR,cAIrBvL,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,CAAKvE,UAAU,oBACdF,EAAAtF,EAAAuF,cAACyK,GAAD,CACCvE,QAAS/G,KAAK7E,MAAM4L,QACpBjS,KAAM,mBACN4M,YAAY,+CACZmJ,MAAM,mBACNE,aAAY,mBACZC,gBAAehL,KAAKH,MAAM7C,KAAK/D,GAC/BA,GAAG,mBACH2L,kBAAmB5E,KAAK4E,kBACxBgG,eAAgB5K,KAAK4K,eACrB3S,MAAO+H,KAAK7E,MAAMiR,sBAKtBxL,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,KACElF,KAAKH,MAAMzE,OACXwF,EAAAtF,EAAAuF,cAACwL,GAAD,CACCjR,MAAO4E,KAAKH,MAAMzE,MAClB4B,KAAMgD,KAAKH,MAAM7C,KAAK/D,GACtB8N,QAAS/G,KAAK7E,MAAM4L,8CAY1B,IAAIuF,EAOJ,OAJCA,EADGtM,KAAK7E,MAAM+Q,QACJlM,KAAKuM,kBAEL3L,EAAAtF,EAAAuF,cAAA,qFAGVD,EAAAtF,EAAAuF,cAAA,WACGyL,UA7HoB3K,cAyJXC,eAdS,SAACzG,EAAOqR,GAC/B,IAAMxO,EAAQ7C,EAAM6C,MAAMjD,OACpBiC,EAAOgB,EAAM3J,OAAOC,KAAK0J,GAAO,IAEtC,MAAQ,CACPvH,KAAQ0E,EAAM1E,KACdtC,OAAUgH,EAAMhH,OAChB6G,UAAaG,EAAM6C,MAAMhD,UACzBgD,MAASA,EACThB,KAAQA,EACR5B,MAASH,EAAYE,KAIRyG,CAAyBC,aAAWmK,KClK7CS,eACL,SAAAA,IAAc,IAAA3M,EAAA,OAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAAyM,IACb3M,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAAoY,GAAAtM,KAAAH,QACK7E,MAAQ,CACZhH,OAAU,IAHE2L,yFAOYmF,GACrBA,EAAUxO,KAAKkD,iBAClBqG,KAAKH,MAAMnH,QAAQjE,KAAK,iDAKrBuL,KAAKH,MAAMpJ,KAAKkD,iBACnBqG,KAAKH,MAAMnH,QAAQjE,KAAK,qDAKzBiY,QAAQC,IAAI,UACZ3M,KAAKH,MAAM+M,0DAGF9X,GACT,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE/B,IADA,IAAIC,EAAUF,SAASC,OAAOE,MAAM,KAC3BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACxC,IAAIH,EAASC,EAAQE,GAAGE,OAGxB,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CAC1DC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIH,OAAON,mCAIP,OACC6L,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,KACCtE,EAAAtF,EAAAuF,cAAA,gCACAD,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAACE,GAAA,EAAD,CAAMC,GAAG,kBAAkBF,UAAU,YAArC,qBAGFF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,4BACAD,EAAAtF,EAAAuF,cAAA,uBACAD,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CAAO5R,KAAK,SAASkB,KAAK,sBAAuBmD,MAAO+H,KAAKnL,UAAU,eACvE+L,EAAAtF,EAAAuF,cAAA,UAAQjN,KAAK,SAASkN,UAAU,kBAAiBG,QAASjB,KAAK4M,sBAAsBzL,KAAKnB,OAA1F,6BAIAY,EAAAtF,EAAAuF,cAAA,QAAMjC,OAAO,+BAA+B9I,OAAO,QAClD8K,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CAAO5R,KAAK,SAASkB,KAAK,sBAAuBmD,MAAO+H,KAAKnL,UAAU,eACvE+L,EAAAtF,EAAAuF,cAAA,UAAQjN,KAAK,UAAb,mBA9De+N,aAkFNC,eALQ,SAACzG,GAAD,MAAY,CACnC1E,KAAQ0E,EAAM1E,KACdtC,OAAUgH,EAAMhH,SAGwB,CAAEyY,sBxBiJN,kBAAM,SAACvU,GAM3C,OALAqU,QAAQC,IAAI,eAGZtU,EAASvE,KAEF2B,EAAS,CACfE,IAAO,iCAEPG,OAAU,MACVE,SAAW,IAETgB,KAAK,SAAAC,GAEP,OADAyV,QAAQC,IAAI,YAAa1V,GAClBA,IACLM,MAAM,SAAA5D,GACR,OAAO0E,EAAS3E,EAAU,CAAEkZ,sBAAyBjZ,EAAMgE,gBwBjK7CiK,CAAoD6K,IC9E9DI,eACL,SAAAA,IAAc,IAAA/M,EAAA,OAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAA6M,IACb/M,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAAwY,GAAA1M,KAAAH,QA4BDqJ,oBAAsB,WACrBvJ,EAAKD,MAAMxH,SAASvE,MA5BpBgM,EAAK3E,MAAQ,CACZnC,MAAS,GACT7E,OAAU,IAEX2L,EAAK8E,kBAAoB9E,EAAK8E,kBAAkBzD,KAAvB9M,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KACzBA,EAAKwD,aAAexD,EAAKwD,aAAanC,KAAlB9M,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KAPPA,yFAUYmF,GACtBA,EAAUxO,KAAKkD,iBACjBqG,KAAKH,MAAMnH,QAAQjE,KAAK,iDAKtBuL,KAAKH,MAAMpJ,KAAKkD,iBAClBqG,KAAKH,MAAMnH,QAAQjE,KAAK,KAEzBuL,KAAKH,MAAMxH,SzByHL,CACNzE,KA1I4C,6EyBmB3ByM,GACjBL,KAAKO,SAALlM,OAAAsG,EAAA,EAAAtG,CAAA,GACEgM,EAAEwE,OAAO/P,KAAOuL,EAAEwE,OAAO5M,6CAQfoI,GACZA,EAAEC,iBACF,IAAM5J,EAAO,CACZsC,MAASgH,KAAK7E,MAAMnC,OAErBgH,KAAKH,MAAMxH,SAAS5B,EAAoBC,qCAIxC,OACCkK,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,MACGlN,EAAQgI,KAAKH,MAAM1L,SACrByM,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAACoI,GAAD,CACCtR,QAASzD,EAAoB8L,KAAKH,MAAM1L,QACxCP,KAAK,QACLqN,QAASjB,KAAKqJ,wBAIjBzI,EAAAtF,EAAAuF,cAAA,mCACAD,EAAAtF,EAAAuF,cAAA,oFACAD,EAAAtF,EAAAuF,cAACsE,GAAD,CAAe5B,SAAWvD,KAAKsD,cAC9B1C,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAI,SAAX,iBACA3E,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,QACLkB,KAAK,QACL2Q,UAAU,EACVxM,GAAG,QACHyM,SAAW1F,KAAK4E,kBAChB3M,MAAQ+H,KAAK7E,MAAMnC,MACnB0I,YAAY,6BAEbd,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,wBAIlBF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,UAAQjN,KAAK,SAASkN,UAAU,mBAAhC,oCAKFF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACErF,KAAKH,MAAM1L,OAAO6E,OAAS4H,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,mBAAmBgF,MAAO,CAAEC,QAAW,UAAY/F,KAAKH,MAAM1L,OAAO6E,UAIlHgH,KAAKH,MAAMpJ,KAAKoD,yBAA4B+G,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,kBAAf,kBAAgDd,KAAK7E,MAAMnC,MAA3D,iJAxFpB2I,aA4GdC,eAPS,SAACzG,GAAD,MAAY,CACnC1E,KAAQ0E,EAAM1E,KACdtC,OAAUgH,EAAMhH,OAChBmF,eAAkB7C,EAClB4C,2BAA8B5C,IAGhBmL,CAAyBiL,IClHlCC,eACL,SAAAA,IAAc,IAAAhN,EAAA,OAAAzL,OAAA0L,EAAA,EAAA1L,CAAA2L,KAAA8M,IACbhN,EAAAzL,OAAA4L,EAAA,EAAA5L,CAAA2L,KAAA3L,OAAA6L,EAAA,EAAA7L,CAAAyY,GAAA3M,KAAAH,QACK7E,MAAQ,CACZ4R,aAAgB,GAChBC,aAAgB,GAChBC,qBAAwB,IAEzBnN,EAAK8E,kBAAoB9E,EAAK8E,kBAAkBzD,KAAvB9M,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KACzBA,EAAKwD,aAAexD,EAAKwD,aAAanC,KAAlB9M,OAAAuO,GAAA,EAAAvO,QAAAuO,GAAA,EAAAvO,CAAAyL,KARPA,iFAWIO,GACjBL,KAAKO,SAALlM,OAAAsG,EAAA,EAAAtG,CAAA,GACEgM,EAAEwE,OAAO/P,KAAOuL,EAAEwE,OAAO5M,6CAIfoI,GACZA,EAAEC,iBACFoM,QAAQC,IAAI,yBACZ,IAAM/W,EAAO,CACZmX,aAAgB/M,KAAK7E,MAAM4R,aAC3BG,cAAiBlN,KAAK7E,MAAM6R,aAC5BG,cAAiBnN,KAAK7E,MAAM8R,sBAG7BjN,KAAKH,MAAMuN,eAAexX,EAAMoK,KAAKH,MAAMnH,2DAGlBuM,GACrBA,EAAUxO,KAAKkD,iBAClBqG,KAAKH,MAAMnH,QAAQjE,KAAK,iDAUrBuL,KAAKH,MAAMpJ,KAAKkD,iBACnBqG,KAAKH,MAAMnH,QAAQjE,KAAK,sCAOzB,OACCmM,EAAAtF,EAAAuF,cAACqE,GAAA,EAAD,KACCtE,EAAAtF,EAAAuF,cAAA,kCACAD,EAAAtF,EAAAuF,cAACsE,GAAD,CAAe5B,SAAWvD,KAAKsD,aAAeG,gBAAkB,CAC/DE,OAAU,eACVE,OAAU,uBACVlM,QAAW,6BAEXiJ,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAI,gBAAX,gBACA3E,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,WACLkB,KAAK,eACLmE,GAAG,eACHwM,UAAU,EACVE,UAAW,EACXC,QAAQ,aACR3N,MAAQ+H,KAAK7E,MAAM4R,aACnBrL,YAAY,0BACZgE,SAAW1F,KAAK4E,oBAEjBhE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,wBAIlBF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAI,gBAAX,gBACA3E,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,WACLkB,KAAK,eACLmE,GAAG,eACHwM,UAAU,EACVE,UAAW,EACXC,QAAQ,aACR3N,MAAQ+H,KAAK7E,MAAM6R,aACnBtL,YAAY,sBACZgE,SAAW1F,KAAK4E,oBAEjBhE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,wBAIlBF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,cACdF,EAAAtF,EAAAuF,cAACyE,GAAA,EAAD,CAAOC,IAAI,wBAAX,6BACA3E,EAAAtF,EAAAuF,cAAC2E,GAAA,EAAD,CACC5R,KAAK,WACLkB,KAAK,uBACLmE,GAAG,uBACHwM,UAAU,EACVE,UAAW,EACXC,QAAQ,aACR3N,MAAQ+H,KAAK7E,MAAM8R,qBACnBvL,YAAY,wBACZgE,SAAW1F,KAAK4E,oBAEjBhE,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,qBACfF,EAAAtF,EAAAuF,cAAA,SAAOC,UAAU,wBAAuBF,EAAAtF,EAAAuF,cAAA,UACvCD,EAAAtF,EAAAuF,cAAA,oFACAD,EAAAtF,EAAAuF,cAAA,+DACAD,EAAAtF,EAAAuF,cAAA,8DACAD,EAAAtF,EAAAuF,cAAA,2DAKJD,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACCxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACCzE,EAAAtF,EAAAuF,cAAA,UAAQjN,KAAK,SAASkN,UAAU,mBAAhC,yBAKEF,EAAAtF,EAAAuF,cAACuE,GAAA,EAAD,KACHxE,EAAAtF,EAAAuF,cAACwE,GAAA,EAAD,KACErF,KAAKH,MAAM1L,OAAOiZ,gBAAkBxM,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,mBAAmBgF,MAAO,CAAEC,QAAW,UAAY/F,KAAKH,MAAM1L,OAAOiZ,mBAIxHpN,KAAKH,MAAMpJ,KAAKiD,wBAA2BkH,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,kBAAf,4CAtItBa,aAwJdC,eALS,SAAAzG,GAAK,MAAK,CACjC1E,KAAQ0E,EAAM1E,KACdtC,OAAUgH,EAAMhH,SAGsB,CAAEiZ,e1BuCX,SAACxX,GAAD,OAAU,SAACyC,GACxCA,EAASvE,KACTuE,EAASoB,KAET,IAAIF,EAAY,IAAI3C,SAGpB,IAAI,IAAI9B,KAAQc,EACf2D,EAAS1C,OAAO/B,EAAMc,EAAKd,IAG5B,OAAOW,EAAS,CACfE,IAAO,qCACPC,KAAQ2D,EACRzD,OAAU,OACVE,SAAW,IACTgB,KAAK,SAAAC,GAEP,OADAoB,EAASqB,KACFzC,IACLM,MAAM,SAAA5D,GACR,OAAO0E,EAAS3E,EAAU,CAAE0Z,eAAkBzZ,EAAMgE,e0B3DG8B,sBAA1CmI,CAAgEC,aAAWiL,mBCxI1F,G3BDQxU,aAAa+U,QAAQ,Y2BCV,CAClB9W,GAAM8B,SAASD,EAAeE,aAAagV,WAC3C/W,GAAM8B,SAASQ,KAEf,IAAM0U,GAAcC,KAAKC,MAAQ,IAC9BnV,aAAagV,SAASI,IAAMH,IAC9BhX,GAAM8B,SAASI,SA6BFkV,oLAvBb,OACC/M,EAAAtF,EAAAuF,cAAC+M,EAAA,EAAD,CAAUrX,MAAUA,IACnBqK,EAAAtF,EAAAuF,cAACgN,EAAA,EAAD,KACCjN,EAAAtF,EAAAuF,cAAA,WACCD,EAAAtF,EAAAuF,cAACiN,GAAD,MACAlN,EAAAtF,EAAAuF,cAAA,OAAKC,UAAU,aACdF,EAAAtF,EAAAuF,cAACkN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY/E,KAClCvI,EAAAtF,EAAAuF,cAACkN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAY1E,KACzC5I,EAAAtF,EAAAuF,cAACkN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAYlC,KAC5CpL,EAAAtF,EAAAuF,cAACkN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAYzJ,KAC1C7D,EAAAtF,EAAAuF,cAACkN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAYlI,KACzCpF,EAAAtF,EAAAuF,cAACkN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAYjI,KACvCrF,EAAAtF,EAAAuF,cAACkN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAYrB,KAChDjM,EAAAtF,EAAAuF,cAACkN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAYzB,KACzC7L,EAAAtF,EAAAuF,cAACkN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAYpB,gBAhBrCnL,aCtBEwM,QACW,cAA7BzO,OAAOsI,SAASoG,UAEe,UAA7B1O,OAAOsI,SAASoG,UAEhB1O,OAAOsI,SAASoG,SAAShQ,MACvB,2DA+GA,kBAAmBiQ,WACrBA,UAAUC,cAAcC,MAAMvX,KAAK,SAAA6O,GACjCA,EAAa2I,eCrHlB9L,IAAS+L,OACR7N,EAAAtF,EAAAuF,cAAC6N,GAAD,MAAS1Z,SAAS2Z,eAAe","file":"static/js/main.b33fae4f.chunk.js","sourcesContent":["// errorReducer.js\n\nconst GET_ERRORS = 'GET_ERRORS';\nconst CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const getErrors = error => {\n\t// error is an object, e.g. { 'registration': error.message }\n\treturn {\n\t\t'type': GET_ERRORS,\n\t\t'payload': error,\n\t};\n};\n\nexport const clearErrors = () => {\n\treturn {\n\t\t'type': CLEAR_ERRORS,\n\t};\n};\n\nvar updeep = require('updeep');\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\t// ensure we have an array of strings to allow multiple errors to be displayed\n\t\t\tlet errors = {};\n\n\t\t\tObject.keys(action.payload).forEach((key) => {\n\t\t\t\tif (typeof action.payload[key] === 'string') {\n\t\t\t\t\t// a string is simply copied\n\t\t\t\t\terrors[key] = [action.payload[key]];\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = [...action.payload[key]];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn updeep(errors, {}); // clear any existing errors\n\t\t}\n\n\t\tcase CLEAR_ERRORS: {\n\t\t\treturn {};\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// join arrays of error messages from different errors, into a single string.\n// it is expected that there will only ever be one type of error, e.g. 'register', but the object is parsed to be on the safe side.\n/*\n{ {'register': [\n\t\t'email already in use',\n\t\t'username already in use'\n\t\t]},\n\t{'login': [\n\t\t'could not log in'\n\t]\n}\n*/\n\nexport default function (errors) {\n\tlet messageArray = [];\n\tObject.keys(errors).forEach((key) => {\n\t\tif (typeof errors[key] === 'string') {\n\t\t\tmessageArray.push(errors[key]); // plain string error\n\t\t} else { // arary of errors\n\t\t\terrors[key].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\tmessageArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst message = messageArray.join(' ');\n\n\treturn message;\n};\n","// uses fetch to get or post data.\n// passes up useful errors to the calling function.\n// set useAuth to true for validating logged-in user: token will be sent in header\nimport store from '../store';\nimport formatErrorMessages from '../modules/formatErrorMessages';\n\nfunction getCookie(name) {\n\tvar cookieValue = null;\n\tif (document.cookie && document.cookie !== '') {\n\t\tvar cookies = document.cookie.split(';');\n\t\tfor (var i = 0; i < cookies.length; i++) {\n\t\t\tvar cookie = cookies[i].trim();\n\t\t\t//var cookie = jQuery.trim(cookies[i]);\n\t\t\t// Does this cookie string begin with the name we want?\n\t\t\tif (cookie.substring(0, name.length + 1) === (name + '=')) {\n\t\t\t\tcookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn cookieValue;\n}\n\nexport default function fetchAPI({ url, data, method = 'GET', useAuth = false, useCSRF = false, headers = {} }) {\n\tif (useAuth) {\n\t\theaders.Authorization = `Token ${store.getState().auth.user.token}`;\n\t}\n\n\n\tif (useCSRF) {\n\t\theaders['X-CSRFToken'] = getCookie('csrftoken');\n\t\tdata = data || new FormData();\n\t\tdata.append('csrfmiddlewaretoken', getCookie('csrftoken'));\n\t}\n\n\treturn fetch(url, { headers, 'method': method, 'body': data })\n\t\t.then(response => {\n\t\t\t// fetch returns ok true / false in most situations\n\t\t\t// true is a successful response\n\t\t\tif (response.ok) {\n\t\t\t\tconst contentType = response.headers.get('Content-Type') || '';\n\n\t\t\t\tif (contentType.includes('application/json')) {\n\t\t\t\t\treturn response.json().catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('Invalid JSON: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (contentType.includes('text/html')) {\n\t\t\t\t\treturn response.text().then(html => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'page_type': 'generic',\n\t\t\t\t\t\t\t'html': html\n\t\t\t\t\t\t};\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('HTML error: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// ok == false means some problem to display\n\t\t\t\t// even though no error was returned\n\t\t\t\tif (response.status === 404) {\n\t\t\t\t\treturn Promise.reject(new Error('Page not found: ' + url));\n\t\t\t\t}\n\n\t\t\t\tif (response.status === 500) {\n\t\t\t\t\treturn Promise.reject(new Error('Internal server error: ' + url));\n\t\t\t\t}\n\n\t\t\t\treturn response.json().then(response => {\n\t\t\t\t\t// the server rejected the request, e.g. because of a wrong password, we want to display the reason\n\t\t\t\t\t// the information is contained in the json()\n\t\t\t\t\t// there may be more than one error, so join them into a single string.\n\t\t\t\t\t// multiline display would be more elegant but this will do for now and makes all errors consistent (one message string)\n\n\t\t\t\t\treturn Promise.reject(new Error(formatErrorMessages(response))\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\t// fetch returned an error\n\t\t\treturn Promise.reject(new Error(error.message));\n\t\t});\n};\n","// check for a null, empty, undefined object\n\nconst isEmpty = (value) => {\n\treturn (\n\t\tvalue === undefined ||\n\t\tvalue === null ||\n\t\t(typeof value === 'object' && Object.keys(value).length === 0) ||\n\t\t(typeof value === 'string' && value.trim().length === 0)\n\t);\n};\n\nexport default isEmpty;\n","// authReducer.js\n\nimport store from '../store';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors, clearErrors } from '../modules/errors';\nimport isEmpty from '../modules/isEmpty';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\nexport const PASSWORD_NOT_CHANGED = 'PASSWORD_NOT_CHANGED';\nexport const CHANGE_PASSWORD_COMPLETE = 'CHANGE_PASSWORD_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\n\n// Side effects Services\nexport const getAuthToken = () => {\n\treturn localStorage.getItem('jwtToken');\n};\n\nfunction setAuthToken(token) {\n\tlocalStorage.setItem('jwtToken', token);\n\treturn;\n}\n\nfunction removeAuthToken() {\n\tlocalStorage.removeItem('jwtToken');\n\treturn;\n}\n\nexport const registerUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/registration/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t}).then(response => {\n\t\t\thistory.push('/welcome');\n\t\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'registration': error.message }));\n\t});\n};\n\n// TODO rework auth as a saga with token refresh\n// https://github.com/redux-saga/redux-saga/issues/14\n// https://github.com/alvelig/redux-saga-auth\nexport const loginUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/login/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\t\treturn dispatch(setCurrentUser(response.key));\n\t}).then(() => {\n\t\thistory.push('/');\n\t\t// after store has been updated with token, we can query the server for current user info\n\t\treturn store.dispatch(getUserInfo());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'authentication': 'Unable to log in with the provided credentials, please try again.' }));\n\t});\n};\n\nexport const setCurrentUser = (token, dispatch) => {\n\tsetAuthToken(token);\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': { token },\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\tdispatch(clearErrors());\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/logout/',\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\tremoveAuthToken();\n\t\treturn dispatch(logoutUserComplete());\n\t\t}).then(() => {\n\t\t\t// ensure token is removed from localStorage and store before redirecting\n\t\t\thistory.push('/');\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'logout user': 'Unable to logout' }));\n\t});\n};\n\n///////////////////////////////\n// get user info\n// TODO rebuild as saga with login using state token\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\n// should get token from state. Currently it is passed in by referring function because state is not updated synchronously.\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = () => (dispatch) => {\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/user/',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t}).then(user => {\n\t\t\treturn dispatch(setUserInfo({\n\t\t\t'username': user.username,\n\t\t\t'email': user.email,\n\t\t\t'id': user.id,\n\t\t\t'slug': user.slug,\n\t\t\t'email_verified': user.email_verified,\n\t\t}));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'get user info': 'Unable to get user info' }));\n\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t//'url': '/api/v1/rest-auth/password/reset1/',\n\t\t'url': '/api/v1/rest-auth/password/reset/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\t return dispatch(forgotPasswordEmailSent());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'request password reset email': `Unable to send a password reset email. It is likely that the email address ${email} is not associated with a registered user` }));\n\t\t// return dispatch(getErrors(error.response.data));\n\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n//////////////////////////////////\n// change password\nexport const changePassword = (data) => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(passwordNotChanged());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in data) {\n\t\tformData.append(name, data[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/change/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tdispatch(changePasswordComplete());\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'changePassword': error.message }));\n\t});\n};\n\nexport const passwordNotChanged = token => {\n\treturn {\n\t\t'type': PASSWORD_NOT_CHANGED,\n\t};\n};\n\nexport const changePasswordComplete = (token) => {\n\treturn {\n\t\t'type': CHANGE_PASSWORD_COMPLETE,\n\t};\n};\n\n//////////////////////////////////\n// Email confirmation\nexport const sendConfirmationEmail = () => (dispatch) => {\n\tconsole.log('auth action');\n\t//var csrftoken = getCookie('csrftoken');\n\n\tdispatch(clearErrors());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/sendconfirmationemail/',\n\t\t//'url': '/api/v1/rest-auth/user/resend',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t\t//'useCSRF': true,\n\t}).then(response => {\n\t\tconsole.log('response ', response);\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'sendConfirmationEmail': error.message }));\n\t});\n};\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isAuthenticated': false,\n\t'canCreateList': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'changePasswordComplete': false,\n\t'user': {}\n};\n\nfunction canCreateList(token) {\n\t// for now, simply check whether the user is logged in\n\t// in future, further checks will be added e.g. email validated, number of lists exceeded?\n\treturn !isEmpty(token);\n}\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'canCreateList': canCreateList(action.payload.token),\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user info\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user info\n\t\t\treturn updeep({\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'slug': action.payload.slug,\n\t\t\t\t\t'id': action.payload.id,\n\t\t\t\t\t'email_verified': action.payload.email_verified,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'canCreateList': canCreateList(),\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase PASSWORD_NOT_CHANGED: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': false,\n\t\t\t\t'errors': {}\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CHANGE_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","export const LIST_IS_PUBLIC_VALUES = [false, true];\nexport const LIST_IS_PUBLIC_TEXTS = ['Private', 'Public'];\nexport const MAX_ITEMS_IN_LIST = 10;\n","import { createSelector } from 'reselect';\nimport { RECEIVE_ENTITIES } from '../modules/lists';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tFETCH_LIST_BY_SLUG_STARTED\n} from './lists';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const CREATE_ITEM_REQUESTED = 'CREATE_ITEM_REQUESTED';\nexport const CREATE_ITEM_SUCCEEDED = 'CREATE_ITEM_SUCCEEDED';\nexport const UPDATE_ITEM_SUCCEEDED = 'UPDATE_ITEM_SUCCEEDED';\nexport const DELETE_ITEM_SUCCEEDED = 'DELETE_ITEM_SUCCEEDED';\n\nexport const createItem = item => dispatch => {\n\tdispatch(createItemRequested());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/items/',\n\t\t'data': JSON.stringify(item),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\treturn dispatch(createItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create item': error.message }));\n\t});\n};\n\nexport function createItemRequested() {\n\treturn {\n\t\t'type': 'CREATE_ITEM_REQUESTED',\n\t};\n}\n\nexport function createItemSucceeded(item) {\n\treturn {\n\t\t'type': 'CREATE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titem\n\t\t}\n\t};\n}\n\nexport const updateItem = (itemId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateItemSucceeded({ id }) {\n\treturn {\n\t\t'type': UPDATE_ITEM_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t}\n\t};\n}\n\nexport const deleteItem = ({ itemId, listId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'method': 'DELETE',\n\t}).then(response => {\n\t\treturn dispatch(deleteItemSucceeded({ itemId, listId }));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete item': error.message }));\n\t});\n};\n\nexport function deleteItemSucceeded({ itemId, listId }) {\n\treturn {\n\t\t'type': 'DELETE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titemId,\n\t\t\tlistId\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialItemsState = {\n\t'things': {},\n\t'isLoading': false,\n\t'error': null,\n};\n\nexport default function items(state = initialItemsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialItemsState, {});\n\t\t}\n\t\t\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tif (entities && entities.items) {\n\t\t\t\treturn updeep({ 'things': entities.items, 'isLoading': false }, state);\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'things': updeep.constant({}), // remove all existing items\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\t\t\treturn updeep({ 'things': { [item.id]: item } }, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n// all items, for selector to use\nexport const getItems = state => state.items.things;\n\n// items belonging to the current list\nexport const sortedItems = createSelector(\n\t[getItems],\n\t(items) => {\n\t\tlet listItems = (Object.keys(items).map(id => {\n\t\t\treturn items[id];\n\t\t})).sort(function(a, b){\n\t\t\treturn a.order - b.order; // sort to index order\n\t\t});\n\n\t\treturn listItems;\n\t}\n);\n\n","import { createSelector } from 'reselect';\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport { normalize, schema } from 'normalizr';\nimport store from '../store';\n\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tCREATE_ITEM_SUCCEEDED,\n\tDELETE_ITEM_SUCCEEDED\n} from './items';\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const RECEIVE_ENTITIES = 'RECEIVE_ENTITIES';\nexport const FETCH_LISTS_STARTED = 'FETCH_LISTS_STARTED';\nexport const FETCH_LISTS_FAILED = 'FETCH_LISTS_FAILED';\nexport const FETCH_LIST_BY_SLUG_STARTED = 'FETCH_LIST_BY_SLUG_STARTED';\nexport const FETCH_LIST_BY_SLUG_FAILED = 'FETCH_LISTS_FAILED';\nexport const FILTER_LISTS = 'FILTER_LISTS';\nexport const CREATE_LIST_STARTED = 'CREATE_LIST_STARTED';\nexport const CREATE_LIST_SUCCEEDED = 'CREATE_LIST_SUCCEEDED';\nexport const DELETE_LIST_SUCCEEDED = 'DELETE_LIST_SUCCEEDED';\nexport const SET_LIST_IS_PUBLIC_SUCCEEDED = 'SET_LIST_IS_PUBLIC_SUCCEEDED';\nexport const UPDATE_LIST_SUCCEEDED = 'UPDATE_LIST_SUCCEEDED';\n\nconst itemSchema = new schema.Entity('items');\nconst listSchema = new schema.Entity('lists', {\n\t'items': [itemSchema],\n});\n\nfunction receiveEntities(entities) {\n\treturn {\n\t\t'type': RECEIVE_ENTITIES,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchListsStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_LISTS_STARTED,\n\t};\n}\n\nfunction fetchListsFailed() {\n\treturn {\n\t\t'type': FETCH_LISTS_FAILED\n\t};\n}\n\nexport function fetchLists() {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListsStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return only the lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': '/api/v1/content/lists/',\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\t\t\t\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListsFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////\n// fetch a single list by slug\nexport function fetchListBySlugStarted() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_STARTED,\n\t};\n}\n\nfunction fetchListBySlugFailed() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_FAILED\n\t};\n}\n\nexport function fetchListBySlug(slug) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListBySlugStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return the list if a non-authenticated user should see it.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/list/?slug=${slug}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListBySlugFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\nexport function filterLists(searchTerm) {\n\treturn { \n\t\t'type': FILTER_LISTS,\n\t\t'payload': { searchTerm },\n\t};\n}\n\n/////////////////////////////\n// create list\nexport const createList = (list, history) => dispatch => {\n\tdispatch(createListStarted());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/lists/',\n\t\t'data': JSON.stringify(list),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\tdispatch(createListSucceeded(response));\n\t\thistory.push(`/list/${response.slug}`);\n\t\treturn;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create list': error.message }));\n\t});\n};\n\nexport function createListStarted() {\n\treturn {\n\t\t'type': CREATE_LIST_STARTED,\n\t};\n}\n\nexport function createListSucceeded(list) {\n\treturn {\n\t\t'type': CREATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tlist\n\t\t}\n\t};\n}\n\n///////////////////////////\n// update list\nexport const updateList = (listId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${listId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateListSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateListSucceeded({ id }) {\n\treturn {\n\t\t'type': UPDATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t}\n\t};\n}\n\n///////////////////////////\n// delete list\nexport const deleteList = id => (dispatch, getState) => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'method': 'DELETE',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(deleteListSucceeded(id));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete list': error.message }));\n\t});\n};\n\nexport function deleteListSucceeded(id) {\n\treturn {\n\t\t'type': DELETE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport const setListIsPublic = ({ id, is_public }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ is_public }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(setListIsPublicSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'set list is public': error.message }));\n\t});\n};\n\nexport function setListIsPublicSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': SET_LIST_IS_PUBLIC_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\n// this is initial state of lists and the list loading states\nconst initialListsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'things': {},\n};\n\n// 'state' here is global state\nexport const getSearchTerm = state => {\n\treturn state.page.searchTerm;\n};\n\nexport const getLists = state => {\n\treturn Object.keys(state.lists.things).map(id => {\n\t\treturn state.lists.things[id];\n\t});\n};\n\nexport const getFilteredLists = createSelector(\n\t[getLists, getSearchTerm],\n\t(lists, searchTerm) => {\n\t\treturn lists.filter(list => {\n\t\t\t// if no search term, return every list\n\t\t\tif (searchTerm === '') {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\treturn list.name.match(new RegExp(searchTerm, 'i'));\n\t\t});\n\t}\n);\n\nexport const getGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => list.is_public === is_public);\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\nexport const getFilteredPublicLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\treturn lists.filter(list => {\n\t\t\treturn list.is_public;\n\t\t});\n\t}\n);\n\nexport const getMyGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => (list.created_by_id === store.getState().auth.user.id) && (list.is_public === is_public));\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\n// state here is the substate state.lists\n// the book uses 'items' for the list of things i.e. lists. items\n// as 'items' for us is a specific thing, we need another name for the set of entities to be displayed i.e. the lists themselves\n// so those are globalState.lists.things\n// i.e. state.things here\nexport default function lists(state = initialListsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialListsState, {});\n\t\t}\n\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tlet lists = {};\n\n\t\t\tif (entities && entities.lists) {\n\t\t\t\tlists = entities.lists; // there is at least one list\n\t\t\t}\n\n\t\t\treturn updeep({ 'things': lists, 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': true,\n\t\t\t\t'things': updeep.constant({}), // remove all existing lists\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase CREATE_LIST_STARTED: {\n\t\t\t// at present this does nothing, it's really just to track that the action happened\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase CREATE_LIST_SUCCEEDED: {\n\t\t\tconst list = action.payload.list;\n\t\t\treturn updeep({ 'things': { [list.id]: list } }, state);\n\t\t}\n\n\t\tcase DELETE_LIST_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tcase SET_LIST_IS_PUBLIC_SUCCEEDED: {\n\t\t\tconst listId = action.payload.id;\n\n\t\t\treturn updeep({ 'things': { [listId]: { 'is_public': action.payload.is_public } } }, state);\n\t\t\t// reminder of another way to update nested arrays\n\t\t\t/* const index = state.things.findIndex((list) => list.id === action.payload.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\treturn updeep.updateIn(`things.${index}.is_public`, action.payload.is_public, state);\n\t\t\t} \n\n\t\t\treturn state; // in case list was not found\n\t\t\t*/\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\n\t\t\tfunction addItem(items) {\n\t\t\t\treturn [].concat(items, item.id);\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${item.list}.items`, addItem, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\tfunction deleteItem(items) {\n\t\t\t\tconst itemIndex = items.findIndex((item) => item === action.payload.itemId); \n\t\t\t\tlet newItems = [].concat(items);\n\t\t\t\tnewItems.splice(itemIndex, 1);\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${action.payload.listId}.items`, deleteItem, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","import {\n\tFILTER_LISTS,\n} from './lists';\n\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'searchTerm': '',\n};\n\nexport default function page(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FILTER_LISTS: {\n\t\t\treturn updeep({ 'searchTerm': action.payload.searchTerm }, state);\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","// index.js\n\n// import the partial reducers\nimport { combineReducers } from 'redux';\nimport errors from './errors';\nimport auth from './auth';\nimport page from './page';\nimport lists from './lists';\nimport items from './items';\n// by importing the actual reducer as the default, the state of each is initialised\n\nexport default combineReducers({\n\t'errors': errors,\n\t'auth': auth,\n\t'page': page,\n\t'lists': lists,\n\t'items': items,\n});\n","// store.js\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules/rootReducer';\n\nconst store = createStore(\n\trootReducer, \n\t// inititalState, // by not supplying initial state, we tell the store to use the defaults specified in the reducer\n\tcompose(applyMiddleware(thunk), \n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./modules/rootReducer', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../modules/auth';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(e);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's handleSubmit\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email address to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.registration && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.registration}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Shown after successful registration of a new user\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Welcome extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Welcome to My Top Tens</h2>\n\t\t\t\t<p>Your account has been created. Click the link below to login.</p>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/login\" className=\"nav-link\">Login</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nWelcome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps)(Welcome);\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={this.handleSubmit.bind(this)}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange.bind(this) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.authentication && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.authentication}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","// List of all lists\n\nimport React from 'react';\nimport { Container, Row } from 'reactstrap';\n\nconst ListsList = ({ children, is_public, headerText }) => {\n\treturn (\n\t\t<Container className=\"lists-list\">\n\t\t\t{headerText && <Row>\n\t\t\t\t<h3 className=\"lists-list-name\">\n\t\t\t\t\t{headerText}\n\t\t\t\t</h3>\n\t\t\t</Row>}\n\t\t\t<Row>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default ListsList;\n","export default function findObjectByProperty({ parentObject, property, value }) {\n\t// e.g. find a list in the store based on its slug\n\t// it feels like there ought to be a smarter way to do this!\n\t// but this does work, and stops once the object is found\n\n\tconst keys = Object.keys(parentObject);\n\n\tfor (let i=0; i<keys.length; i++) {\n\t\tlet childObject = parentObject[keys[i]];\n\t\tif (childObject[property] === value) {\n\t\t\treturn childObject;\n\t\t}\n\t}\n\n\treturn;\n}\n","// check whether the user can perform actions on lists, items\n// items inherit permissions from their list\n\n// result depends on whether they are logged in:\n// whether they own the list:\n// whether the list is public\n\n// list may be identified by id (primary key) or by slug (provided by URL)\n// for viewing, we could trust the server that if a list is returned, it can be viewed.\n// but for editing, we need to check if the user created it\n\n// identifier should be like { 'slug': 'abc' } or { 'id': 'efg' } i.e. an object with one property\n\nimport store from '../store';\nimport findObjectByProperty from './findObjectByProperty';\n\nexport function canViewList(identifier) {\n\t// a list can be viewed if public or if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.lists.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canViewList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.is_public || (list.created_by_id === userId))) {\n\t\t\tcanViewList = true;\n\t\t}\n\t}\n\n\treturn canViewList;\n}\n\nexport function canEditList(identifier) {\n\t// a list can be edited if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.lists.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canEditList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.created_by_id === userId)) {\n\t\t\tcanEditList = true;\n\t\t}\n\t}\n\n\treturn canEditList;\n}\n","// An individual list\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nimport * as permissions from '../modules/permissions';\n\nconst ListSummary = props => {\n\tlet id=`select-${props.list.id}`;\n\tlet value = props.list.is_public ? 'Public' : 'Private';\n\tlet canEdit = permissions.canEditList({ 'id': props.list.id });\n\n\treturn (\n\t\t<Col sm=\"3\" md=\"4\" className=\"list-container\">\n\t\t\t<Link to={`/list/${props.list.slug}`}>\n\t\t\t\t<div className=\"list-header\">\n\t\t\t\t\t<div>{props.list.name}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"list-body\">{props.list.description}</div>\n\t\t\t</Link>\n\t\t\t<div className=\"list-status\">\n\t\t\t\t<label>Set list private/public status\n\t\t\t\t\t<select className=\"form-control\" value={value} onChange={onIsPublicChange} id={id}>\n\t\t\t\t\t\t{LIST_IS_PUBLIC_TEXTS.map(is_public => (\n\t\t\t\t\t\t\t<option key={is_public} value={is_public}>{is_public}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t{canEdit &&\n\t\t\t\t<button className=\"btn btn-danger\" onClick={onDeleteList}>Delete</button>\n\t\t\t}\n\t\t\t{props.showCreatedBy && \n\t\t\t\t<div className=\"list-created-by\">Created by: {props.list.created_by_username}</div>\n\n\t\t\t}\n\t\t\t\n\t\t</Col>\n\t);\n\n\tfunction onIsPublicChange(e) {\n\t\t// map from select options to true / false\n\t\tconst value = e.target.value === 'Public' ? true : false;\n\t\tprops.onIsPublicChange({ 'id': props.list.id, 'is_public': value });\n\t}\n\n\tfunction onDeleteList(e) {\n\t\tprops.onDeleteList({ 'id': props.list.id, 'name': props.list.name });\n\t}\n};\n\nexport default ListSummary;\n","// Page to display list of lists\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\nimport ListsList from '../components/ListsList';\nimport ListSummary from '../components/ListSummary';\nimport './ListsPage.scss';\n\nclass ListsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// which set of lists to view\n\t\t// if logged in, default my-lists\n\t\t// if not logged in, only show public-lists\n\t\tlet listset = 'public-lists';\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(this.props.location.search);\n\t\t\tlistset = urlParams.get('listset') || 'my-lists';\n\t\t}\n\n\t\tthis.setListSetURL(listset);\n\n\t\tthis.state = {\n\t\t\t'selectedTab': listset,\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// user has just logged out\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': 'public-lists',\n\t\t\t});\n\n\t\t\tthis.setListSetURL('public-lists');\n\t\t}\n\t}\n\n\tonSearch = e => {\n\t\tthis.props.onSearch(e.target.value);\n\t}\n\n\tonAddList = () => {\n\t\tthis.props.history.push('/newlist');\n\t}\n\n\trenderPublicLists() {\n\t\tconst { publicLists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\treturn (\n\t\t\t<ListsList headerText=\"All public lists\">\n\t\t\t\t{publicLists.map(list => \n\t\t\t\t\t<ListSummary\n\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\tshowCreatedBy={true}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ListsList>\n\t\t);\n\t}\n\n\trenderMyLists() {\n\t\tconst { myLists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\treturn Object.keys(myLists).map((is_public, index) => {\n\t\t\tconst listsByIsPublic = myLists[is_public];\n\t\t\tlet headerText = is_public === 'true' ? 'My public lists' : 'My private lists';\n\n\t\t\treturn (\n\t\t\t\t<div key={index}>\n\t\t\t\t\t{(listsByIsPublic.length > 0) && (\n\t\t\t\t\t\t<ListsList is_public={is_public} headerText={headerText}>\n\t\t\t\t\t\t\t{listsByIsPublic.map(list => \n\t\t\t\t\t\t\t\t<ListSummary\n\t\t\t\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ListsList>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\tsetListSetURL(listset) {\n\t\tlet URL = `${this.props.location.pathname}?listset=${listset}`;\n\t\tthis.props.history.push(URL);\n\t}\n\n\thandleTabClick = (e) => {\n\t\tif (this.state.selectedTab !== e.target.id) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': e.target.id,\n\t\t\t});\n\n\t\t\tthis.setListSetURL(e.target.id);\n\t\t}\n\t}\n\n\trenderTabs() {\n\t\treturn (\n\t\t\t<ul><li>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.state.selectedTab === 'my-lists'? 'selected' : ''}\n\t\t\t\t\tid='my-lists'\n\t\t\t\t\tonClick={this.handleTabClick}>My lists\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.state.selectedTab === 'public-lists'? 'selected' : ''}\n\t\t\t\t\tid='public-lists'\n\t\t\t\t\tonClick={this.handleTabClick}>Public lists\n\t\t\t\t</span>\n\t\t\t</li></ul>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet listsList;\n\n\t\tif (this.state.selectedTab === 'my-lists') {\n\t\t\tlistsList = this.renderMyLists();\n\t\t} else if (this.state.selectedTab === 'public-lists') {\n\t\t\tlistsList = this.renderPublicLists();\n\t\t}\n\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"lists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"lists-list\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col sm=\"6\">\n\t\t\t\t\t\t\t<div className=\"lists-list-header\">\n\t\t\t\t\t\t\t\t<input className=\"form-control\"\n\t\t\t\t\t\t\t\t\tonChange={this.onSearch}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{this.props.canCreateList && (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.onAddList}\n\t\t\t\t\t\t\t\t\t>+ New list</button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t{this.props.auth.isAuthenticated && <div className=\"tabs\">\n\t\t\t\t\t{this.renderTabs()}\n\t\t\t\t\t<div className=\"clearing\"></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"lists\">\n\t\t\t\t\t{listsList}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ListsPage);\n","import React from 'react';\n\n// onClick should dismiss the condition that caused the FlashMessage to be displayed\n// it is the responsibility of the component that triggers the FlashMessage, to also provide the way to dismiss it\nexport default function FlashMessage({ message, type, onClick }) {\n\treturn (\n\t\t<div className={`flash-error ${type}`}>\n\t\t\t<span>{message}</span>\n\t\t\t<button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={onClick}>\n\t\t\t  <span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","// Home.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport ListsPage from './ListsPage';\n\nimport * as lists from '../modules/lists';\nimport { getFilteredPublicLists, getMyGroupedAndFilteredLists } from '../modules/lists';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass Home extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(lists.fetchLists());\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user's status has changed, refresh Lists\n\t\tif(prevProps.auth.user.token !== this.props.auth.user.token){\n\t\t\tthis.props.dispatch(lists.fetchLists());\n\t\t}\n\t}\n\n\tonSearch = searchTerm => {\n\t\tthis.props.dispatch(lists.filterLists(searchTerm));\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(lists.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = ({ id, name }) => {\n\t\tif (confirm(`Are you sure you want to delete the list ${name}`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t  this.props.dispatch(lists.deleteList(id));\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<ListsPage\n\t\t\t\t\tauth={this.props.auth}\n\t\t\t\t\tmyLists={this.props.myLists}\n\t\t\t\t\tpublicLists={this.props.publicLists}\n\t\t\t\t\tcanCreateList={this.props.auth.canCreateList}\n\t\t\t\t\tonSearch={this.onSearch}\n\t\t\t\t\tonCreateList={this.onCreateList}\n\t\t\t\t\tonIsPublicChange={this.onIsPublicChange}\n\t\t\t\t\tonDeleteList={this.onDeleteList}\n\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'publicLists': PropTypes.array.isRequired,\n\t'myLists': PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.lists.isLoading,\n\t'publicLists': getFilteredPublicLists(state),\n\t'myLists': getMyGroupedAndFilteredLists(state),\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { createList } from '../modules/lists';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nimport ValidatedForm from '../components/ValidatedForm.js';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nclass CreateList extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'name': '',\n\t\t\t'description': '',\n\t\t};\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`item${i}_name`] = '';\n\t\t\tthis.state[`item${i}_description`] = '';\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tcancel(e) {\n\t\tthis.props.history.push('/');\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tlet newList = {\n\t\t\t'name': this.state.name,\n\t\t\t'description': this.state.description,\n\t\t\t'items': [],\n\t\t};\n\n\t\t\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tif (this.state[`item${i}`] !== '') {\n\t\t\t\tconst newItem = {\n\t\t\t\t\t'name': this.state[`item${i}_name`],\n\t\t\t\t\t'description': this.state[`item${i}_description`],\n\t\t\t\t\t'order': i,\n\t\t\t\t};\n\t\t\t\tnewList.items.push(newItem);\n\t\t\t}\n\t\t}\n\n\t\tthis.onCreateList(newList);\n\t}\n\n\tonCreateList = (newList) => {\n\t\tthis.props.dispatch(createList(newList, this.props.history));\n\t}\n\n\n\tcomponentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user cannot create a list, redirect to Home\n\t\tif(!this.props.auth.canCreateList){\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderItemInputs() {\n\t\tlet elements = [];\n\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\telements.push(\n\t\t\t\t<div className=\"form-group\" key={`item${i}`}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<h3>Item {i}</h3>\n\t\t\t\t\t\t\t<Label for={`item${i}_name`}>Name</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_name`}\n\t\t\t\t\t\t\t\tid={`item${i}_name`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_name`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Label for={`item${i}_description`}>Description</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_description`}\n\t\t\t\t\t\t\t\tid={`item${i}_description`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_description`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>);\n\t\t}\n\t\treturn elements;\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<h2>Create a new list</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"name\">Name</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.name }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Name is required</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Description</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.description }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t{this.renderItemInputs()}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSave list\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.lists && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.lists}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nCreateList.propTypes = {\n\t//'createList': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n});\n\nexport default connect(mapStateToProps)(withRouter(CreateList));\n","// An input or textarea that can be edited by clicking on it\n// It can be blank, or required\n// note custom property data-state which is the name of the property in this.state\n// Can be used with keyboard only\n// It is a regular form with cancel, submit. This allows keyboard navigation but the form stays open on blur - otherwise cancel would not be possible with keyboard.\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Row, Col, Label, Input } from 'reactstrap';\nimport './EditableTextField.scss';\n\nclass EditableTextField extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'showInput': false,\n\t\t\t'isValidated': false,\n\t\t\t'initialValue': '',\n\t\t\t'type': props.textarea ? 'textarea' : 'input',\n\t\t};\n\n\t\t//this.showInput = this.showInput.bind(this);\n\t}\n\n\tonKeyUp(e) {\n\t\tvar code = e.keyCode || e.which;\n\t\tif(code === 13) { //13 is the enter keycode\n\t\t\t//Do stuff in here\n\t\t\tthis.showInput(e);\n\t\t}\n\t}\n\n\tshowInput(e) {\n\t\tconst isPlaceholder = e.target.classList.contains('placeholder');\n\n\t\tif (!isPlaceholder) {\n\t\t\tthis.setState({\n\t\t\t\t'initialValue': e.target.textContent,\n\t\t\t});\n\t\t}\n\t\tthis.toggleInput();\n\t}\n\n\ttoggleInput() {\n\t\tconst newShowInputValue = !this.state.showInput;\n\n\t\t// optionally, tell the parent component whether the field is being edited\n\t\tif (typeof this.props.isEditing === 'function') {\n\t\t\tthis.props.isEditing(newShowInputValue);\n\t\t}\n\n\t\tthis.setState({\n\t\t\t'showInput': newShowInputValue,\n\t\t});\n\t}\n\n\tcancel = () => {\n\t\t// restore the initial value of the field as though the user had just entered it\n\t\tconst fakeEvent = {\n\t\t\t'target': {\n\t\t\t\t'dataset': { 'state': this.props['data-state'] },\n\t\t\t\t'value': this.state.initialValue,\n\t\t\t}\n\t\t};\n\t\tthis.props.handleInputChange(fakeEvent);\n\t\tthis.toggleInput();\n\t}\n\n\tvalidate = () => {\n\t\t// custom validation for consistency with other forms\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst elem = formEl.querySelector(this.state.type);\n\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\tif (!elem.validity.valid) {\n\t\t\tlet message = elem.validationMessage;\n\t\t\terrorLabel.textContent = message;\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\terrorLabel.textContent = '';\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\t// the user has typed a new value and the parent component should be notified\n\n\t\tconst inputElement = e.target.querySelector(this.state.type);\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.handleNewValue(inputElement);\n\t\t\tthis.toggleInput();\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t}\n\n\trender() {\n\t\tlet type = 'text';\n\t\tif (this.props.textarea) {\n\t\t\ttype = 'textarea';\n\t\t}\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (this.props.className) {\n\t\t\tclassNames = [...this.props.className];\n\t\t\tdelete this.props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\tconst showInput = this.state.showInput;\n\t\tlet item;\n\n\t\tif(this.props.canEdit) {\n\t\t\tif (showInput) {\t\t\t\n\t\t\t\titem = (\n\t\t\t\t\t<form\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tonSubmit={this.handleSubmit.bind(this)}\n\t\t\t\t\t\tclassName={classNames}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<Label for={this.props.id}>{this.props.label}</Label>\n\t\t\t\t\t\t\t\t\t<Input autoFocus\n\t\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\t\tname={this.props.id}\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\trequired={this.props.required}\n\t\t\t\t\t\t\t\t\t\tdata-state={this.props['data-state']}\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props['data-entityid']}\n\t\t\t\t\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\t\t\t\t\tonChange={this.props.handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tDone\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</form>);\n\t\t\t} else {\n\t\t\t\tif (this.props.value !== '') {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tonClick={this.showInput.bind(this)}\n\t\t\t\t\t\t\t onKeyUp={this.onKeyUp.bind(this)}\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t>{this.props.value}</span>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"placeholder\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\tonClick={this.showInput.bind(this)}\n\t\t\t\t\t\t\tonKeyUp={this.onKeyUp.bind(this)}\n\t\t\t\t\t\t>{this.props.placeholder}</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.props.value !== '') {\n\t\t\t\titem = (\n\t\t\t\t\t<span>{this.props.value}</span>\n\t\t\t\t);\n\t\t\t} else {\n\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"editable-text-field\">\n\t\t\t\t{ item }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditableTextField;\n","// An individual item\n// It is a stateful component so that the description field can be shown only if there is a name defined.\n\nimport store from '../store';\n\nimport React, { Component } from 'react';\nimport { Col } from 'reactstrap';\nimport EditableTextField from './EditableTextField.js';\nimport './Item.scss';\n\nclass Item extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\t'isEditingName': false,\n\t\t};\n\t}\n\n\tsetIsEditingName(showInput) {\n\t\tthis.setState({\n\t\t\t'isEditingName': showInput,\n\t\t});\n\t}\n\n\trender() {\n\t\tlet showDescription = true;\n\t\tif (this.props.item.name === '') {\n\t\t\tshowDescription = false;\n\t\t} else if (this.state.isEditingName && store.getState().items.things[this.props.item.id] && store.getState().items.things[this.props.item.id].name === '') {\n\t\t\tshowDescription = false;\n\t\t}\n\n\t\treturn (\n\t\t\t<Col className=\"item-container\">\n\t\t\t\t<div className=\"item-header\">\n\t\t\t\t\t<span className=\"order\">{this.props.item.order}:</span><EditableTextField\n\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\tname={`${this.props.item.order}_name`}\n\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\tplaceholder=\"Click here to add an item\"\n\t\t\t\t\t\tdata-state={`${this.props.item.order}_name`}\n\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\tid={`${this.props.item.order}_name`} // id of the html element\n\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\tisEditing={this.setIsEditingName.bind(this)}\n\t\t\t\t\t\tvalue={this.props.item.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{showDescription &&\n\t\t\t\t\t<div className=\"item-body\">\n\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\t\tname={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tplaceholder=\"Click here to add a description\"\n\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\tdata-state={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\t\tid={`${this.props.item.order}_description`} // id of the html element\n\t\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\t\tvalue={this.props.item.description}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Col>\n\t\t);\n\t}\n};\n\nexport default Item;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\n\nimport * as itemsReducer from '../modules/items';\n\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n//import './ItemsPage.scss';\nimport Item from './Item';\n\nclass ItemsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\n\t\t// set up the state to hold each item's name and description\n\t\t// coded by order\n\t\t// this is not elegant but keeps state flat\n\t\tfor (let i=1; i<= MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`${i}_name`] = '';\n\t\t\tthis.state[`${i}_description`] = '';\n\t\t}\n\n\t\t// fill in whatever items exist\n\t\tconst items = this.props.items;\n\n\t\tObject.keys(items).forEach((key) => {\n\t\t\tif (items[key].order && items[key].order <= MAX_ITEMS_IN_LIST) {\n\t\t\t\tconst order = items[key].order;\n\n\t\t\t\tthis.state[`${order}_id`] = items[key].id;\n\t\t\t\tthis.state[`${order}_name`] = items[key].name;\n\t\t\t\tthis.state[`${order}_description`] = items[key].description;\n\t\t\t}\n\t\t});\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst itemId = element.dataset.entityid;\n\n\t\t// the item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(itemsReducer.updateItem(itemId, propertyName, value));\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewItemForm': !this.state.showNewItemForm });\n\t}\n\n\trenderItemsList() {\n\t\tlet elements = [];\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tconst name = this.state[`${i}_name`];\n\t\t\tconst canEdit = this.props.canEdit;\n\t\t\tif (name || canEdit) {\n\t\t\t\telements.push(\n\t\t\t\t\t<Row key={`item${i}`}>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\tkey={`item${i}`}\n\t\t\t\t\t\t\t\titem={{\n\t\t\t\t\t\t\t\t\t'id': this.state[`${i}_id`],\n\t\t\t\t\t\t\t\t\t'order': i,\n\t\t\t\t\t\t\t\t\t'name': name,\n\t\t\t\t\t\t\t\t\t'description': this.state[`${i}_description`],\n\t\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\tcanEdit={canEdit}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"items-list\">\n\t\t\t\t{this.renderItemsList()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(ItemsPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport EditableTextField from '../components/EditableTextField.js';\nimport ItemsPage from '../components/ItemsPage';\n\nimport * as lists from '../modules/lists';\nimport * as permissions from '../modules/permissions';\nimport formatErrorMessages from '../modules/formatErrorMessages';import isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport { sortedItems } from '../modules/items';\n\nimport './ListDetails.scss';\n\n\nclass ListDetails extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\t// to start with all we know is the slug. We have to find the list id, and then the list details and items can be loaded\n\t\tconst slug = props.match.params.slug;\n\n\t\tthis.state = {\n\t\t\t// find the list slug from the url\n\t\t\tslug,\n\t\t};\n\n\t\tprops.dispatch(lists.fetchListBySlug(slug));\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst listId = element.dataset.entityid;\n\n\t\t// the list field to update is coded in the 'state' data e.g. 'list_name'\n\t\t// we want to keep item name and list name clearly separate\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(lists.updateList(listId, propertyName, value));\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.isLoading && !this.props.isLoading) {\n\t\t\t// just finished loading; need to check if user should view this list\n\t\t\tthis.setState({\n\t\t\t\t'canView': permissions.canViewList({ 'slug': this.state.slug }),\n\t\t\t\t'canEdit': permissions.canEditList({ 'slug': this.state.slug }),\n\t\t\t\t'list_name': this.props.list.name,\n\t\t\t\t'list_description': this.props.list.description,\n\t\t\t});\n\t\t}\n\t}\n\n\trenderItemsPage() {\n\t\treturn <div>\n\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>)}\n\t\t\t{this.props.list && (\n\t\t\t\t<div>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"list-name\">\n\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tname={'list_name'}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a name for the list\"\n\t\t\t\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\t\t\t\tdata-state={'list_name'} // this.state property\n\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\tid='list_name' // id of the html element\n\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\tvalue={this.state.list_name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"list-description\">\n\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\tname={'list_description'}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a description for the list\"\n\t\t\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\t\t\tdata-state={'list_description'} // this.state property\n\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\tid='list_description' // id of the html element\n\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\tvalue={this.state.list_description}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{this.props.items && (\n\t\t\t\t\t\t\t<ItemsPage\n\t\t\t\t\t\t\t\titems={this.props.items}\n\t\t\t\t\t\t\t\tlist={this.props.list.id}\n\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>;\n\t}\n\n\t///////////////\n\n\trender() {\n\t\tlet content;\n\n\t\tif (this.state.canView) {\n\t\t\tcontent = this.renderItemsPage();\n\t\t} else {\n\t\t\tcontent = <p>Either this list does not exist or you do not have permission to view it</p>;\n\t\t}\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{ content }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nListDetails.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'lists': PropTypes.object.isRequired,\n\t'items': PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst lists = state.lists.things;\n\tconst list = lists[Object.keys(lists)[0]];\n\n\treturn ({\n\t\t'auth': state.auth,\n\t\t'errors': state.errors,\n\t\t'isLoading': state.lists.isLoading,\n\t\t'lists': lists,\n\t\t'list': list,\n\t\t'items': sortedItems(state),\n\t});\n};\n\nexport default connect(mapStateToProps)(withRouter(ListDetails));\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Input } from 'reactstrap';\nimport { sendConfirmationEmail } from '../modules/auth';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tsendConfirmationEmail() {\n\t\tconsole.log('resend');\n\t\tthis.props.sendConfirmationEmail();\n\t}\n\n\tgetCookie(name) {\n\t\tvar cookieValue = null;\n\t\tif (document.cookie && document.cookie !== '') {\n\t\t\tvar cookies = document.cookie.split(';');\n\t\t\tfor (var i = 0; i < cookies.length; i++) {\n\t\t\t\tvar cookie = cookies[i].trim();\n\t\t\t\t//var cookie = jQuery.trim(cookies[i]);\n\t\t\t\t// Does this cookie string begin with the name we want?\n\t\t\t\tif (cookie.substring(0, name.length + 1) === (name + '=')) {\n\t\t\t\t\tcookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cookieValue;\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Account management</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/changepassword\" className=\"nav-link\">Change password</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div>Email address</div>\n\t\t\t\t\t\t<div>Status: </div>\n\t\t\t\t\t\t<Input type=\"hidden\" name=\"csrfmiddlewaretoken\"  value={this.getCookie('csrftoken')} />\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\"onClick={this.sendConfirmationEmail.bind(this)}>\n\t\t\t\t\t\t\t\tResend confirmation email\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<form action=\"api/v1/sendconfirmationemail\" method=\"POST\">\n\t\t\t\t\t\t\t<Input type=\"hidden\" name=\"csrfmiddlewaretoken\"  value={this.getCookie('csrftoken')} />\n\t\t\t\t\t\t\t<button type=\"submit\">Send</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'sendConfirmationEmail': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { sendConfirmationEmail })(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.forgotPasswordEmailNotSent());\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.dispatch(auth.forgotPassword(user));\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) &&\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>}\n\t\t\t\t<h2>Forgot your password?</h2>\n\t\t\t\t<p>Enter your email address. A reset password link will be emailed to you.</p>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.email && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.email}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"valid-feedback\">If the address {this.state.email} is associated with an account, an email has been sent. If you don't see it within a few minutes, please check your junk mail folder.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'forgotPassword': auth.forgotPassword,\n\t'forgotPasswordEmailNotSent': auth.forgotPasswordEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { changePassword, passwordNotChanged } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass ChangePassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'old_password': '',\n\t\t\t'new_password': '',\n\t\t\t'new_password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconsole.log('submit changePassword');\n\t\tconst data = {\n\t\t\t'old_password': this.state.old_password,\n\t\t\t'new_password1': this.state.new_password,\n\t\t\t'new_password2': this.state.new_password_confirm\n\t\t};\n\n\t\tthis.props.changePassword(data, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Change your password</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'new_password',\n\t\t\t\t\t'input2': 'new_password_confirm',\n\t\t\t\t\t'message': 'New passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"old_password\">Old password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"old_password\"\n\t\t\t\t\t\t\t\t\tid=\"old_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.old_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your old password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password\">New password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password_confirm\">Confirm your new password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tChange password now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.changePassword && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.changePassword}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t      {this.props.auth.changePasswordComplete && (<div className=\"valid-feedback\">Your new password has been saved</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nChangePassword.propTypes = {\n\t'changePassword': PropTypes.func.isRequired,\n\t'passwordNotChanged': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ changePassword, passwordNotChanged })(withRouter(ChangePassword));\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport { setCurrentUser, getUserInfo, logoutUser, getAuthToken } from '../modules/auth';\n\nimport Navbar from '../components/Navbar';\nimport Register from '../components/Register';\nimport Welcome from '../components/Welcome';\nimport Login from '../components/Login';\nimport Home from '../containers/Home';\nimport CreateList from '../containers/CreateList';\nimport ListDetails from '../containers/ListDetail';\nimport Account from '../components/Account';\nimport ForgotPassword from '../components/ForgotPassword';\nimport ChangePassword from '../components/ChangePassword';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password loads the bootstrap css from static/bootstrap\n\n// check if user is already logged in\nif(getAuthToken()) {\n\tstore.dispatch(setCurrentUser(localStorage.jwtToken));\n\tstore.dispatch(getUserInfo());\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.jwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\t\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t\t<Route exact path=\"/newlist\" component={ CreateList } />\n\t\t\t\t\t\t\t<Route exact path=\"/list/:slug\" component={ ListDetails } />\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/welcome\" component={ Welcome } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t<Route exact path=\"/changepassword\" component={ ChangePassword } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./containers/App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}
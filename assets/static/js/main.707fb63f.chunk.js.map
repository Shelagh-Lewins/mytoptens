{"version":3,"sources":["modules/errors.js","modules/formatErrorMessages.js","modules/fetchAPI.js","modules/isEmpty.js","modules/auth.js","constants/index.js","modules/items.js","modules/lists.js","modules/page.js","modules/rootReducer.js","store.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Welcome.js","components/Login.js","components/ListsList.js","modules/findObjectByProperty.js","modules/permissions.js","components/ListSummary.js","containers/ListsPage.js","components/FlashMessage.js","containers/Home.js","containers/CreateList.js","components/EditableTextField.js","components/Item.js","components/ItemsPage.js","containers/ListDetail.js","components/Account.js","components/ForgotPassword.js","components/ChangePassword.js","components/Verified.js","containers/App.js","serviceWorker.js","index.js"],"names":["getErrors","error","type","payload","clearErrors","updeep","require","initialState","formatErrorMessages","errors","messageArray","Object","keys","forEach","key","push","map","item","join","fetchAPI","_ref","url","data","_ref$method","method","_ref$useAuth","useAuth","_ref$headers","headers","Authorization","concat","store","getState","auth","user","token","fetch","body","then","response","ok","contentType","get","includes","json","catch","Promise","reject","Error","message","text","html","page_type","status","isEmpty","value","undefined","length","trim","LOGOUT_USER_COMPLETE","setCurrentUser","dispatch","localStorage","setItem","setAuthToken","logoutUser","history","removeItem","logout user","getUserInfo","setUserInfo","username","email","id","slug","emailVerified","email_verified","get user info","forgotPasswordEmailNotSent","forgotPassword","formData","FormData","name","append","request password reset email","passwordNotChanged","changePasswordComplete","confirmEmailNotSent","sendConfirmationEmail","isLoading","isAuthenticated","forgotPasswordEmailSent","resetPasswordComplete","confirmEmailSent","LIST_IS_PUBLIC_VALUES","LIST_IS_PUBLIC_TEXTS","MAX_ITEMS_IN_LIST","CREATE_ITEM_SUCCEEDED","UPDATE_ITEM_SUCCEEDED","DELETE_ITEM_SUCCEEDED","updateItem","itemId","propertyName","Content-Type","JSON","stringify","defineProperty","updateItemSucceeded","update item","initialItemsState","things","RECEIVE_ENTITIES","FETCH_LISTS_STARTED","FETCH_LISTS_FAILED","FETCH_LIST_BY_SLUG_STARTED","FETCH_LIST_BY_SLUG_FAILED","FILTER_LISTS","CREATE_LIST_STARTED","CREATE_LIST_SUCCEEDED","DELETE_LIST_SUCCEEDED","SET_LIST_IS_PUBLIC_SUCCEEDED","UPDATE_LIST_SUCCEEDED","itemSchema","schema","Entity","list","listSchema","items","receiveEntities","entities","fetchLists","normalizedData","normalize","fetch lists","fetchListBySlug","createList","create list","updateList","listId","updateListSucceeded","deleteList","deleteListSucceeded","delete list","setListIsPublic","_ref2","is_public","_ref3","setListIsPublicSucceeded","set list is public","initialListsState","getFilteredLists","createSelector","state","lists","page","searchTerm","filter","match","RegExp","getFilteredPublicLists","grouped","getMyGroupedAndFilteredLists","created_by_id","combineReducers","arguments","action","toConsumableArray","constant","confirmEmailAlreadyVerified","omit","updateIn","itemIndex","findIndex","newItems","splice","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","a","createElement","className","Link","to","onClick","onLogout","bind","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","Component","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","assertThisInitialized","formLength","checkValidity","i","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","handleSubmit","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","node","setCustomValidity","objectSpread","classNames","assign","noValidate","children","Register","password","password_confirm","handleInputChange","target","password1","password2","registerUser","nextProps","Container","ValidatedForm_ValidatedForm","Row","Col","md","lg","Label","for","Input","required","onChange","minLength","pattern","registration","style","display","Welcome","Login","loginUser","authentication","ListsList","headerText","findObjectByProperty","parentObject","property","childObject","canViewList","identifier","userId","canEditList","canCreateList","ListSummary","canEdit","permissions","sm","description","onIsPublicChange","onDeleteList","showCreatedBy","created_by_username","ListsPage","onSearch","onAddList","getListsToShow","listsList","ListsToShow","topLevelListsOnly","parent_item","handleTabClick","selectedTab","setListSetURL","listset","URLSearchParams","location","search","prevProps","_this$props","publicLists","listsToShow","components_ListsList","src_components_ListSummary","_this$props2","myLists","index","listsByIsPublic","URL","pathname","renderMyLists","renderPublicLists","check","defaultChecked","handleTopLevelListsChange","renderTabs","FlashMessage","aria-hidden","Home","confirm","onCloseFlashMessage","src_containers_ListsPage","onCreateList","CreateList","parentItem","newList","cancel","console","log","newItem","order","elements","renderItemInputs","EditableTextField","fakeEvent","dataset","initialValue","toggleInput","showInput","textarea","keyCode","which","classList","contains","newShowInputValue","isEditing","inputElement","handleNewValue","label","autoFocus","data-state","data-entityid","onKeyUp","tabIndex","Item","onCreateChildList","isEditingName","showDescription","canCreateChildList","childList","canViewChildList","src_components_EditableTextField","setIsEditingName","ItemsPage","element","entityid","split","itemsReducer","toggleForm","showNewItemForm","src_components_Item","renderItemsList","ListDetails","getListData","params","canView","list_name","list_description","parentList","components_ItemsPage","content","renderItemsPage","ownProps","targetListItems","testList","indexOf","Account","email_status","ForgotPassword","ChangePassword","old_password","new_password","new_password_confirm","new_password1","new_password2","changePassword","Verified","getItem","mytoptensJwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","hostname","navigator","serviceWorker","ready","unregister","render","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.707fb63f.chunk.js","sourcesContent":["// errorReducer.js\n\nconst GET_ERRORS = 'GET_ERRORS';\nconst CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const getErrors = error => {\n\t// error is an object, e.g. { 'registration': error.message }\n\treturn {\n\t\t'type': GET_ERRORS,\n\t\t'payload': error,\n\t};\n};\n\nexport const clearErrors = () => {\n\treturn {\n\t\t'type': CLEAR_ERRORS,\n\t};\n};\n\nvar updeep = require('updeep');\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\t// ensure we have an array of strings to allow multiple errors to be displayed\n\t\t\tlet errors = {};\n\n\t\t\tObject.keys(action.payload).forEach((key) => {\n\t\t\t\tif (typeof action.payload[key] === 'string') {\n\t\t\t\t\t// a string is simply copied\n\t\t\t\t\terrors[key] = [action.payload[key]];\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = [...action.payload[key]];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn updeep(errors, {}); // clear any existing errors\n\t\t}\n\n\t\tcase CLEAR_ERRORS: {\n\t\t\treturn {};\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// join arrays of error messages from different errors, into a single string.\n// it is expected that there will only ever be one type of error, e.g. 'register', but the object is parsed to be on the safe side.\n/*\n{ {'register': [\n\t\t'email already in use',\n\t\t'username already in use'\n\t\t]},\n\t{'login': [\n\t\t'could not log in'\n\t]\n}\n*/\n\nexport default function (errors) {\n\tlet messageArray = [];\n\tObject.keys(errors).forEach((key) => {\n\t\tif (typeof errors[key] === 'string') {\n\t\t\tmessageArray.push(errors[key]); // plain string error\n\t\t} else { // arary of errors\n\t\t\terrors[key].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\tmessageArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst message = messageArray.join(' ');\n\n\treturn message;\n};\n","// uses fetch to get or post data.\n// passes up useful errors to the calling function.\n// set useAuth to true for validating logged-in user: token will be sent in header\nimport store from '../store';\nimport formatErrorMessages from '../modules/formatErrorMessages';\n\nexport default function fetchAPI({ url, data, method = 'GET', useAuth = false, headers = {} }) {\n\tif (useAuth) {\n\t\theaders.Authorization = `Token ${store.getState().auth.user.token}`;\n\t}\n\n\treturn fetch(url, { headers, 'method': method, 'body': data })\n\t\t.then(response => {\n\t\t\t// fetch returns ok true / false in most situations\n\t\t\t// true is a successful response\n\t\t\tif (response.ok) {\n\t\t\t\tconst contentType = response.headers.get('Content-Type') || '';\n\n\t\t\t\tif (contentType.includes('application/json')) {\n\t\t\t\t\treturn response.json().catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('Invalid JSON: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (contentType.includes('text/html')) {\n\t\t\t\t\treturn response.text().then(html => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'page_type': 'generic',\n\t\t\t\t\t\t\t'html': html\n\t\t\t\t\t\t};\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('HTML error: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// ok == false means some problem to display\n\t\t\t\t// even though no error was returned\n\t\t\t\tif (response.status === 404) {\n\t\t\t\t\treturn Promise.reject(new Error('Page not found: ' + url));\n\t\t\t\t}\n\n\t\t\t\tif (response.status === 500) {\n\t\t\t\t\treturn Promise.reject(new Error('Internal server error: ' + url));\n\t\t\t\t}\n\n\t\t\t\treturn response.json().then(response => {\n\t\t\t\t\t// the server rejected the request, e.g. because of a wrong password, we want to display the reason\n\t\t\t\t\t// the information is contained in the json()\n\t\t\t\t\t// there may be more than one error, so join them into a single string.\n\t\t\t\t\t// multiline display would be more elegant but this will do for now and makes all errors consistent (one message string)\n\n\t\t\t\t\treturn Promise.reject(new Error(formatErrorMessages(response))\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\t// fetch returned an error\n\t\t\treturn Promise.reject(new Error(error.message));\n\t\t});\n};\n","// check for a null, empty, undefined object\n\nconst isEmpty = (value) => {\n\treturn (\n\t\tvalue === undefined ||\n\t\tvalue === null ||\n\t\t(typeof value === 'object' && Object.keys(value).length === 0) ||\n\t\t(typeof value === 'string' && value.trim().length === 0)\n\t);\n};\n\nexport default isEmpty;\n","// authReducer.js\n\nimport store from '../store';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors, clearErrors } from '../modules/errors';\nimport isEmpty from '../modules/isEmpty';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\nexport const PASSWORD_NOT_CHANGED = 'PASSWORD_NOT_CHANGED';\nexport const CHANGE_PASSWORD_COMPLETE = 'CHANGE_PASSWORD_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_NOT_SENT = 'CONFIRM_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_SENT = 'CONFIRM_EMAIL_SENT';\nexport const CONFIRM_EMAIL_ALREADY_VERIFIED = 'CONFIRM_EMAIL_ALREADY_VERIFIED';\n\n// Side effects Services\nexport const getAuthToken = () => {\n\treturn localStorage.getItem('mytoptensJwtToken');\n};\n\nfunction setAuthToken(token) {\n\tlocalStorage.setItem('mytoptensJwtToken', token);\n\treturn;\n}\n\nfunction removeAuthToken() {\n\tlocalStorage.removeItem('mytoptensJwtToken');\n\treturn;\n}\n\nexport const registerUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/registration/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t}).then(response => {\n\t\thistory.push('/welcome');\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'registration': error.message }));\n\t});\n};\n\nexport const loginUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/login/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\treturn dispatch(setCurrentUser(response.key));\n\t}).then(() => {\n\t\thistory.push('/');\n\t\t// after store has been updated with token, we can query the server for current user info\n\t\treturn store.dispatch(getUserInfo());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'authentication': 'Unable to log in with the provided credentials, please try again.' }));\n\t});\n};\n\nexport const setCurrentUser = (token, dispatch) => {\n\tsetAuthToken(token);\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': { token },\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\tdispatch(clearErrors());\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/logout/',\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\tremoveAuthToken();\n\t\treturn dispatch(logoutUserComplete());\n\t}).then(() => {\n\t\t// ensure token is removed from localStorage and store before redirecting\n\t\t// history.push('/');\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'logout user': 'Unable to logout' }));\n\t});\n};\n\n///////////////////////////////\n// get user info\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = () => (dispatch) => {\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/user/',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t}).then(user => {\n\t\treturn dispatch(setUserInfo({\n\t\t\t'username': user.username,\n\t\t\t'email': user.email,\n\t\t\t'id': user.id,\n\t\t\t'slug': user.slug,\n\t\t\t'emailVerified': user.email_verified,\n\t\t}));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'get user info': 'Unable to get user info' }));\n\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/reset/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\t return dispatch(forgotPasswordEmailSent());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'request password reset email': `Unable to send a password reset email. It is likely that the email address ${email} is not associated with a registered user` }));\n\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n//////////////////////////////////\n// change password\nexport const changePassword = (data) => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(passwordNotChanged());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in data) {\n\t\tformData.append(name, data[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/change/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tdispatch(changePasswordComplete());\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'changePassword': error.message }));\n\t});\n};\n\nexport const passwordNotChanged = token => {\n\treturn {\n\t\t'type': PASSWORD_NOT_CHANGED,\n\t};\n};\n\nexport const changePasswordComplete = (token) => {\n\treturn {\n\t\t'type': CHANGE_PASSWORD_COMPLETE,\n\t};\n};\n\n//////////////////////////////////\n// Email confirmation\nexport const confirmEmailNotSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_NOT_SENT\n\t};\n};\n\nexport const confirmEmailSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_SENT\n\t};\n};\n\nexport const confirmEmailAlreadyVerified = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_ALREADY_VERIFIED\n\t};\n};\n\n//////////////////////////////////\n\nexport const sendConfirmationEmail = () => (dispatch) => {\n\tdispatch(clearErrors());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/sendconfirmationemail/',\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tif (response.message === 'Email confirmation sent') {\n\t\t\treturn dispatch(confirmEmailSent());\n\t\t} else if (response.message === 'Email already verified') {\n\t\t\treturn dispatch(confirmEmailAlreadyVerified());\n\t\t}\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'sendConfirmationEmail': error.message }));\n\t});\n};\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isLoading': false,\n\t'isAuthenticated': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'changePasswordComplete': false,\n\t'confirmEmailSent': false,\n\t'user': {}\n};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'isLoading': true,\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user info\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user info\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': false,\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'slug': action.payload.slug,\n\t\t\t\t\t'id': action.payload.id,\n\t\t\t\t\t'emailVerified': action.payload.emailVerified,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// forgot password\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase PASSWORD_NOT_CHANGED: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': false,\n\t\t\t\t'errors': {}\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CHANGE_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// confirm email\n\t\tcase CONFIRM_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': false,\n\t\t\t\t'confirmEmailAlreadyVerified': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_ALREADY_VERIFIED: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailAlreadyVerified': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","export const LIST_IS_PUBLIC_VALUES = [false, true];\nexport const LIST_IS_PUBLIC_TEXTS = ['Private', 'Public'];\nexport const MAX_ITEMS_IN_LIST = 10;\n","// import { createSelector } from 'reselect';\nimport { RECEIVE_ENTITIES } from '../modules/lists';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tFETCH_LIST_BY_SLUG_STARTED\n} from './lists';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const CREATE_ITEM_REQUESTED = 'CREATE_ITEM_REQUESTED';\nexport const CREATE_ITEM_SUCCEEDED = 'CREATE_ITEM_SUCCEEDED';\nexport const UPDATE_ITEM_SUCCEEDED = 'UPDATE_ITEM_SUCCEEDED';\nexport const DELETE_ITEM_SUCCEEDED = 'DELETE_ITEM_SUCCEEDED';\n\nexport const createItem = item => dispatch => {\n\tdispatch(createItemRequested());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/items/',\n\t\t'data': JSON.stringify(item),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\treturn dispatch(createItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create item': error.message }));\n\t});\n};\n\nexport function createItemRequested() {\n\treturn {\n\t\t'type': 'CREATE_ITEM_REQUESTED',\n\t};\n}\n\nexport function createItemSucceeded(item) {\n\treturn {\n\t\t'type': 'CREATE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titem\n\t\t}\n\t};\n}\n\nexport const updateItem = (itemId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateItemSucceeded({ id }) {\n\treturn {\n\t\t'type': UPDATE_ITEM_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t}\n\t};\n}\n\nexport const deleteItem = ({ itemId, listId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'method': 'DELETE',\n\t}).then(response => {\n\t\treturn dispatch(deleteItemSucceeded({ itemId, listId }));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete item': error.message }));\n\t});\n};\n\nexport function deleteItemSucceeded({ itemId, listId }) {\n\treturn {\n\t\t'type': 'DELETE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titemId,\n\t\t\tlistId\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialItemsState = {\n\t'things': {},\n\t'isLoading': false,\n\t'error': null,\n};\n\nexport default function items(state = initialItemsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialItemsState, {});\n\t\t}\n\t\t\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tif (entities && entities.items) {\n\t\t\t\treturn updeep({ 'things': entities.items, 'isLoading': false }, state);\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'things': updeep.constant({}), // remove all existing items\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\t\t\treturn updeep({ 'things': { [item.id]: item } }, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n// all items, for selector to use\nexport const getItems = state => state.items.things;\n\n//// not currently used but left in as an example of sorting list items by order\n// items belonging to the current list\n/* export const sortedItems = createSelector(\n\t[getItems],\n\t(items) => {\n\t\tlet listItems = (Object.keys(items).map(id => {\n\t\t\treturn items[id];\n\t\t})).sort(function(a, b){\n\t\t\treturn a.order - b.order; // sort to index order\n\t\t});\n\n\t\treturn listItems;\n\t}\n); */\n\n","import { createSelector } from 'reselect';\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport { normalize, schema } from 'normalizr';\nimport store from '../store';\n\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tCREATE_ITEM_SUCCEEDED,\n\tDELETE_ITEM_SUCCEEDED\n} from './items';\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const RECEIVE_ENTITIES = 'RECEIVE_ENTITIES';\nexport const FETCH_LISTS_STARTED = 'FETCH_LISTS_STARTED';\nexport const FETCH_LISTS_FAILED = 'FETCH_LISTS_FAILED';\nexport const FETCH_LIST_BY_SLUG_STARTED = 'FETCH_LIST_BY_SLUG_STARTED';\nexport const FETCH_LIST_BY_SLUG_FAILED = 'FETCH_LISTS_FAILED';\nexport const FILTER_LISTS = 'FILTER_LISTS';\nexport const CREATE_LIST_STARTED = 'CREATE_LIST_STARTED';\nexport const CREATE_LIST_SUCCEEDED = 'CREATE_LIST_SUCCEEDED';\nexport const DELETE_LIST_SUCCEEDED = 'DELETE_LIST_SUCCEEDED';\nexport const SET_LIST_IS_PUBLIC_SUCCEEDED = 'SET_LIST_IS_PUBLIC_SUCCEEDED';\nexport const UPDATE_LIST_SUCCEEDED = 'UPDATE_LIST_SUCCEEDED';\n\nconst itemSchema = new schema.Entity('items', {\n\t'list': ['listSchema'],\n});\nconst listSchema = new schema.Entity('lists', {\n\t'items': [itemSchema],\n});\n\nfunction receiveEntities(entities) {\n\treturn {\n\t\t'type': RECEIVE_ENTITIES,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchListsStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_LISTS_STARTED,\n\t};\n}\n\nfunction fetchListsFailed() {\n\treturn {\n\t\t'type': FETCH_LISTS_FAILED\n\t};\n}\n\nexport function fetchLists() {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListsStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return only the lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': '/api/v1/content/lists/',\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\t\t\t\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListsFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////\n// fetch a single list by slug\nexport function fetchListBySlugStarted() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_STARTED,\n\t};\n}\n\nfunction fetchListBySlugFailed() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_FAILED\n\t};\n}\n\nexport function fetchListBySlug(slug) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListBySlugStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return the list if a non-authenticated user should see it.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/list/?slug=${slug}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListBySlugFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\nexport function filterLists(searchTerm) {\n\treturn { \n\t\t'type': FILTER_LISTS,\n\t\t'payload': { searchTerm },\n\t};\n}\n\n/////////////////////////////\n// create list\nexport const createList = (list, history) => dispatch => {\n\tdispatch(createListStarted());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/lists/',\n\t\t'data': JSON.stringify(list),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\tdispatch(createListSucceeded(response));\n\t\thistory.push(`/list/${response.slug}`);\n\t\treturn;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create list': error.message }));\n\t});\n};\n\nexport function createListStarted() {\n\treturn {\n\t\t'type': CREATE_LIST_STARTED,\n\t};\n}\n\nexport function createListSucceeded(list) {\n\treturn {\n\t\t'type': CREATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tlist\n\t\t}\n\t};\n}\n\n///////////////////////////\n// update list\nexport const updateList = (listId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${listId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateListSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateListSucceeded({ id }) {\n\treturn {\n\t\t'type': UPDATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t}\n\t};\n}\n\n///////////////////////////\n// delete list\nexport const deleteList = id => (dispatch, getState) => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'method': 'DELETE',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(deleteListSucceeded(id));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete list': error.message }));\n\t});\n};\n\nexport function deleteListSucceeded(id) {\n\treturn {\n\t\t'type': DELETE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport const setListIsPublic = ({ id, is_public }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ is_public }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(setListIsPublicSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'set list is public': error.message }));\n\t});\n};\n\nexport function setListIsPublicSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': SET_LIST_IS_PUBLIC_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\n// this is initial state of lists and the list loading states\nconst initialListsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'things': {},\n};\n\n// 'state' here is global state\nexport const getSearchTerm = state => {\n\treturn state.page.searchTerm;\n};\n\nexport const getLists = state => {\n\treturn Object.keys(state.lists.things).map(id => {\n\t\treturn state.lists.things[id];\n\t});\n};\n\nexport const getFilteredLists = createSelector(\n\t[getLists, getSearchTerm],\n\t(lists, searchTerm) => {\n\t\treturn lists.filter(list => {\n\t\t\t// if no search term, return every list\n\t\t\tif (searchTerm === '') {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\treturn list.name.match(new RegExp(searchTerm, 'i'));\n\t\t});\n\t}\n);\n\nexport const getGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => list.is_public === is_public);\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\nexport const getFilteredPublicLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\treturn lists.filter(list => {\n\t\t\treturn list.is_public;\n\t\t});\n\t}\n);\n\nexport const getMyGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => (list.created_by_id === store.getState().auth.user.id) && (list.is_public === is_public));\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\n// state here is the substate state.lists\n// the book uses 'items' for the list of things i.e. lists. items\n// as 'items' for us is a specific thing, we need another name for the set of entities to be displayed i.e. the lists themselves\n// so those are globalState.lists.things\n// i.e. state.things here\nexport default function lists(state = initialListsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialListsState, {});\n\t\t}\n\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tlet lists = {};\n\n\t\t\tif (entities && entities.lists) {\n\t\t\t\tlists = entities.lists; // there is at least one list\n\t\t\t}\n\n\t\t\treturn updeep({ 'things': lists, 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': true,\n\t\t\t\t'things': updeep.constant({}), // remove all existing lists\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase CREATE_LIST_STARTED: {\n\t\t\t// at present this does nothing, it's really just to track that the action happened\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase CREATE_LIST_SUCCEEDED: {\n\t\t\tconst list = action.payload.list;\n\t\t\treturn updeep({ 'things': { [list.id]: list } }, state);\n\t\t}\n\n\t\tcase DELETE_LIST_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tcase SET_LIST_IS_PUBLIC_SUCCEEDED: {\n\t\t\tconst listId = action.payload.id;\n\n\t\t\treturn updeep({ 'things': { [listId]: { 'is_public': action.payload.is_public } } }, state);\n\t\t\t// reminder of another way to update nested arrays\n\t\t\t/* const index = state.things.findIndex((list) => list.id === action.payload.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\treturn updeep.updateIn(`things.${index}.is_public`, action.payload.is_public, state);\n\t\t\t} \n\n\t\t\treturn state; // in case list was not found\n\t\t\t*/\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\n\t\t\tfunction addItem(items) {\n\t\t\t\treturn [].concat(items, item.id);\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${item.list}.items`, addItem, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\tfunction deleteItem(items) {\n\t\t\t\tconst itemIndex = items.findIndex((item) => item === action.payload.itemId); \n\t\t\t\tlet newItems = [].concat(items);\n\t\t\t\tnewItems.splice(itemIndex, 1);\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${action.payload.listId}.items`, deleteItem, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","import {\n\tFILTER_LISTS,\n} from './lists';\n\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'searchTerm': '',\n};\n\nexport default function page(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FILTER_LISTS: {\n\t\t\treturn updeep({ 'searchTerm': action.payload.searchTerm }, state);\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","// index.js\n\n// import the partial reducers\nimport { combineReducers } from 'redux';\nimport errors from './errors';\nimport auth from './auth';\nimport page from './page';\nimport lists from './lists';\nimport items from './items';\n// by importing the actual reducer as the default, the state of each is initialised\n\nexport default combineReducers({\n\t'errors': errors,\n\t'auth': auth,\n\t'page': page,\n\t'lists': lists,\n\t'items': items,\n});\n","// store.js\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules/rootReducer';\n\nconst store = createStore(\n\trootReducer, \n\t// inititalState, // by not supplying initial state, we tell the store to use the defaults specified in the reducer\n\tcompose(applyMiddleware(thunk), \n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./modules/rootReducer', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../modules/auth';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(e);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's handleSubmit\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email address to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row md=\"9\" lg=\"6\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.registration && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.registration}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Shown after successful registration of a new user\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Welcome extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Welcome to My Top Tens</h2>\n\t\t\t\t<p>Your account has been created.</p>\n\t\t\t\t<p>To create lists, you will need to verify your email address. An email containing a verification link has been sent to the email address with which you registered. Please click the link to verify your email address.</p>\n\t\t\t\t<p>If you do not receive the email within a few minutes, please check your Junk or Spam folder.</p>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<p>You can request a new registration email by <Link to=\"/login\">Logging in</Link> and going to your user account (click your username in the header bar).</p>\n\t\t\t\t\t\t\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nWelcome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps)(Welcome);\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={this.handleSubmit.bind(this)}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange.bind(this) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.authentication && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.authentication}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","// List of all lists\n\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst ListsList = ({ children, is_public, headerText }) => {\n\treturn (\n\t\t<Container className=\"lists-list\">\n\t\t\t{headerText &&\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h3 className=\"lists-list-name\">\n\t\t\t\t\t\t{headerText}\n\t\t\t\t\t</h3>\n\t\t\t\t</Col>\n\t\t\t</Row>}\n\t\t\t<Row>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default ListsList;\n","export default function findObjectByProperty({ parentObject, property, value }) {\n\t// e.g. find a list in the store based on its slug\n\t// it feels like there ought to be a smarter way to do this!\n\t// but this does work, and stops once the object is found\n\tconst keys = Object.keys(parentObject);\n\n\tfor (let i=0; i<keys.length; i++) {\n\t\tlet childObject = parentObject[keys[i]];\n\t\tif (childObject[property] === value) {\n\t\t\treturn childObject;\n\t\t}\n\t}\n\n\treturn;\n}\n","// check whether the user can perform actions on lists, items\n// items inherit permissions from their list\n\n// result depends on whether they are logged in:\n// whether they own the list:\n// whether the list is public\n\n// list may be identified by id (primary key) or by slug (provided by URL)\n// for viewing, we could trust the server that if a list is returned, it can be viewed.\n// but for editing, we need to check if the user created it\n\n// identifier should be like { 'slug': 'abc' } or { 'id': 'efg' } i.e. an object with one property\n\nimport store from '../store';\nimport findObjectByProperty from './findObjectByProperty';\n\nexport function canViewList(identifier) {\n\t// a list can be viewed if public or if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.lists.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canViewList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.is_public || (list.created_by_id === userId))) {\n\t\t\tcanViewList = true;\n\t\t}\n\t}\n\n\treturn canViewList;\n}\n\nexport function canEditList(identifier) {\n\t// a list can be edited if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.lists.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canEditList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.created_by_id === userId)) {\n\t\t\tcanEditList = true;\n\t\t}\n\t}\n\n\treturn canEditList;\n}\n\nexport function canCreateList() {\n\t// the user can create a list if they are logged in\n\t// and have verified their email address\n\tconst state = store.getState();\n\n\tif (state.auth.isAuthenticated && state.auth.user.emailVerified) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n","// An individual list\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nimport * as permissions from '../modules/permissions';\n\nimport './ListSummary.scss';\n\nconst ListSummary = props => {\n\tlet id=`select-${props.list.id}`;\n\tlet value = props.list.is_public ? 'Public' : 'Private';\n\tlet canEdit = permissions.canEditList({ 'id': props.list.id });\n\n\treturn (\n\t\t<Col sm=\"12\" md=\"6\">\n\t\t\t<div className=\"list-container\">\n\t\t\t\t<Link to={`/list/${props.list.slug}`}>\n\t\t\t\t\t<div className=\"list-header\">\n\t\t\t\t\t\t<div>{props.list.name}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"list-body\">{props.list.description}</div>\n\t\t\t\t</Link>\n\t\t\t\t<div className=\"list-status\">\n\t\t\t\t\t<label>Set list private/public status\n\t\t\t\t\t\t<select className=\"form-control\" value={value} onChange={onIsPublicChange} id={id}>\n\t\t\t\t\t\t\t{LIST_IS_PUBLIC_TEXTS.map(is_public => (\n\t\t\t\t\t\t\t\t<option key={is_public} value={is_public}>{is_public}</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t{canEdit &&\n\t\t\t\t\t<button className=\"btn btn-danger\" onClick={onDeleteList}>Delete</button>\n\t\t\t\t}\n\t\t\t\t{props.showCreatedBy && \n\t\t\t\t\t<div className=\"list-created-by\">Created by: {props.list.created_by_username}</div>\n\n\t\t\t\t}\n\t\t\t</div>\n\t\t</Col>\n\t);\n\n\tfunction onIsPublicChange(e) {\n\t\t// map from select options to true / false\n\t\tconst value = e.target.value === 'Public' ? true : false;\n\t\tprops.onIsPublicChange({ 'id': props.list.id, 'is_public': value });\n\t}\n\n\tfunction onDeleteList(e) {\n\t\tprops.onDeleteList({ 'id': props.list.id, 'name': props.list.name });\n\t}\n};\n\nexport default ListSummary;\n","// Page to display list of lists\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ListsList from '../components/ListsList';\nimport ListSummary from '../components/ListSummary';\nimport './ListsPage.scss';\n\nclass ListsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// which set of lists to view\n\t\t// if logged in, default my-lists\n\t\t// if not logged in, only show public-lists\n\t\tlet listset = 'public-lists';\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(this.props.location.search);\n\t\t\tlistset = urlParams.get('listset') || 'my-lists';\n\t\t}\n\n\t\tthis.setListSetURL(listset);\n\n\t\tthis.state = {\n\t\t\t'selectedTab': listset,\n\t\t\t'topLevelListsOnly': true,\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// user has just logged out\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': 'public-lists',\n\t\t\t});\n\n\t\t\tthis.setListSetURL('public-lists');\n\t\t}\n\t}\n\n\tonSearch = e => {\n\t\tthis.props.onSearch(e.target.value);\n\t}\n\n\tonAddList = () => {\n\t\tthis.props.history.push('/newlist');\n\t}\n\n\tgetListsToShow = (listsList) => {\n\t\tlet ListsToShow = [];\n\n\t\t// filter out lists that are not top level\n\t\tif (this.state.topLevelListsOnly) {\n\t\t\tlistsList.map(list => {\n\t\t\t\tif (!list.parent_item) {\n\t\t\t\t\tListsToShow.push(list);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ListsToShow;\n\t\t}\n\n\t\treturn listsList;\n\t}\n\n\trenderPublicLists() {\n\t\tconst { publicLists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\tconst listsToShow = this.getListsToShow(publicLists);\n\n\t\treturn (\n\t\t\t<ListsList headerText=\"All public lists\">\n\t\t\t\t{listsToShow.map(list => \n\t\t\t\t\t<ListSummary\n\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\tshowCreatedBy={true}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ListsList>\n\t\t);\n\t}\n\n\trenderMyLists() {\n\t\tconst { myLists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\treturn Object.keys(myLists).map((is_public, index) => {\n\t\t\tconst listsByIsPublic = myLists[is_public];\n\t\t\tlet headerText = is_public === 'true' ? 'My public lists' : 'My private lists';\n\n\t\t\tconst listsToShow = this.getListsToShow(listsByIsPublic);\n\n\t\t\treturn (\n\t\t\t\t<div key={index}>\n\t\t\t\t\t{(listsToShow.length > 0) && (\n\t\t\t\t\t\t<ListsList is_public={is_public} headerText={headerText}>\n\t\t\t\t\t\t\t{listsToShow.map(list => \n\t\t\t\t\t\t\t\t<ListSummary\n\t\t\t\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ListsList>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\tsetListSetURL(listset) {\n\t\tlet URL = `${this.props.location.pathname}?listset=${listset}`;\n\t\tthis.props.history.push(URL);\n\t}\n\n\thandleTopLevelListsChange() {\n\t\tthis.setState({\n\t\t\t'topLevelListsOnly': !this.state.topLevelListsOnly,\n\t\t});\n\t}\n\n\thandleTabClick = (e) => {\n\t\tif (this.state.selectedTab !== e.target.id) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': e.target.id,\n\t\t\t});\n\n\t\t\tthis.setListSetURL(e.target.id);\n\t\t}\n\t}\n\n\trenderTabs() {\n\t\treturn (\n\t\t\t<ul><li>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.state.selectedTab === 'my-lists'? 'selected' : ''}\n\t\t\t\t\tid='my-lists'\n\t\t\t\t\tonClick={this.handleTabClick}>My lists\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.state.selectedTab === 'public-lists'? 'selected' : ''}\n\t\t\t\t\tid='public-lists'\n\t\t\t\t\tonClick={this.handleTabClick}>Public lists\n\t\t\t\t</span>\n\t\t\t</li></ul>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet listsList;\n\n\t\tif (this.state.selectedTab === 'my-lists') {\n\t\t\tlistsList = this.renderMyLists();\n\t\t} else if (this.state.selectedTab === 'public-lists') {\n\t\t\tlistsList = this.renderPublicLists();\n\t\t}\n\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"lists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet createList;\n\t\tif (this.props.canCreateList()) {\n\t\t\tcreateList = (<button\n\t\t\t\tclassName=\"btn btn-primary create-list\"\n\t\t\t\tonClick={this.onAddList}\n\t\t\t>+ New list</button>);\n\t\t} else if (this.props.auth.isAuthenticated) {\n\t\t\tcreateList = (<div>In order to create new lists, please verify your email address by clicking the link in the email you were sent when you registered. You can request a new verification email from your <Link to=\"/account\">Account</Link> page.</div>);\n\t\t} else {\n\t\t\tcreateList = (<div>In order to create new lists, please <Link to=\"/login\">log in</Link> or <Link to=\"/register\">register a My Top Tens account</Link>.</div>);\n\t\t}\n\n\n\t\treturn (\n\t\t\t<div className=\"lists-list\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col  className=\"top-level-lists-control\">\n\t\t\t\t\t\t\t<Label check>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tdefaultChecked={this.state.topLevelListsOnly}\n\t\t\t\t\t\t\t\t\tonChange={this.handleTopLevelListsChange.bind(this)}/>{' '}\n\t\t\t\t\t\t\t\tShow top level lists only\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col sm=\"12\" md=\"9\">\n\t\t\t\t\t\t\t<div className=\"search\">\n\t\t\t\t\t\t\t\t<Input className=\"form-control\"\n\t\t\t\t\t\t\t\t\tonChange={this.onSearch}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{createList}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t{this.props.auth.isAuthenticated && <div className=\"tabs\">\n\t\t\t\t\t{this.renderTabs()}\n\t\t\t\t\t<div className=\"clearing\"></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"lists\">\n\t\t\t\t\t{listsList}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ListsPage);\n","import React from 'react';\n\n// onClick should dismiss the condition that caused the FlashMessage to be displayed\n// it is the responsibility of the component that triggers the FlashMessage, to also provide the way to dismiss it\nexport default function FlashMessage({ message, type, onClick }) {\n\treturn (\n\t\t<div className={`flash-error ${type}`}>\n\t\t\t<span>{message}</span>\n\t\t\t<button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={onClick}>\n\t\t\t  <span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","// Home.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport ListsPage from './ListsPage';\n\nimport * as lists from '../modules/lists';\nimport { getFilteredPublicLists, getMyGroupedAndFilteredLists } from '../modules/lists';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\t\n\t\tprops.dispatch(clearErrors());\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(lists.fetchLists());\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user's status has changed, refresh Lists\n\t\tif(prevProps.auth.user.token !== this.props.auth.user.token){\n\t\t\tthis.props.dispatch(lists.fetchLists());\n\t\t}\n\t}\n\n\tonSearch = searchTerm => {\n\t\tthis.props.dispatch(lists.filterLists(searchTerm));\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(lists.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = ({ id, name }) => {\n\t\tif (confirm(`Are you sure you want to delete the list ${name}`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t  this.props.dispatch(lists.deleteList(id));\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<ListsPage\n\t\t\t\t\tauth={this.props.auth}\n\t\t\t\t\tmyLists={this.props.myLists}\n\t\t\t\t\tpublicLists={this.props.publicLists}\n\t\t\t\t\tcanCreateList={permissions.canCreateList}\n\t\t\t\t\tonSearch={this.onSearch}\n\t\t\t\t\tonCreateList={this.onCreateList}\n\t\t\t\t\tonIsPublicChange={this.onIsPublicChange}\n\t\t\t\t\tonDeleteList={this.onDeleteList}\n\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'publicLists': PropTypes.array.isRequired,\n\t'myLists': PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.lists.isLoading,\n\t'publicLists': getFilteredPublicLists(state),\n\t'myLists': getMyGroupedAndFilteredLists(state),\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { createList } from '../modules/lists';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\n\nimport ValidatedForm from '../components/ValidatedForm.js';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nimport './CreateList.scss';\n\nclass CreateList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'name': '',\n\t\t\t'description': '',\n\t\t};\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`item${i}_name`] = '';\n\t\t\tthis.state[`item${i}_description`] = '';\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\n\t\tprops.dispatch(clearErrors());\n\n\t\tlet parentItem;\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(props.location.search);\n\t\t\tparentItem = urlParams.get('parent-item');\n\t\t}\n\t\tconsole.log('parent-item ', parentItem);\n\n\t\tif (typeof parentItem === 'string') {\n\t\t\tthis.state.parentItem = parentItem;\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tcancel(e) {\n\t\tthis.props.history.push('/');\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tlet newList = {\n\t\t\t'name': this.state.name,\n\t\t\t'description': this.state.description,\n\t\t\t'items': [],\n\t\t};\n\t\t\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tif (this.state[`item${i}`] !== '') {\n\t\t\t\tconst newItem = {\n\t\t\t\t\t'name': this.state[`item${i}_name`],\n\t\t\t\t\t'description': this.state[`item${i}_description`],\n\t\t\t\t\t'order': i,\n\t\t\t\t};\n\t\t\t\tnewList.items.push(newItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.state.parentItem) {\n\t\t\tnewList.parent_item = this.state.parentItem;\n\t\t}\n\n\t\tthis.onCreateList(newList);\n\t}\n\n\tonCreateList = (newList) => {\n\t\tthis.props.dispatch(createList(newList, this.props.history));\n\t}\n\n\n\tcomponentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user cannot create a list, redirect to Home\n\t\tif(!permissions.canCreateList() && !this.props.auth.isLoading){\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderItemInputs() {\n\t\tlet elements = [];\n\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\telements.push(\n\t\t\t\t<div className=\"form-group\" key={`item${i}`}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<h3>Item {i}</h3>\n\t\t\t\t\t\t\t<Label for={`item${i}_name`}>Name</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_name`}\n\t\t\t\t\t\t\t\tid={`item${i}_name`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_name`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<Label for={`item${i}_description`}>Description</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tname={`item${i}_description`}\n\t\t\t\t\t\t\t\tid={`item${i}_description`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_description`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>);\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<h2>Create a new list</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t\t<Label for=\"name\">Name</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.name }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Name is required</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Description</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.description }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.renderItemInputs()}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSave list\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t{this.props.errors.lists && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.lists}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nCreateList.propTypes = {\n\t//'createList': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n});\n\nexport default connect(mapStateToProps)(withRouter(CreateList));\n","// An input or textarea that can be edited by clicking on it\n// It can be blank, or required\n// note custom property data-state which is the name of the property in this.state\n// Can be used with keyboard only\n// It is a regular form with cancel, submit. This allows keyboard navigation but the form stays open on blur - otherwise cancel would not be possible with keyboard.\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Row, Col, Label, Input } from 'reactstrap';\nimport './EditableTextField.scss';\n\nclass EditableTextField extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'showInput': false,\n\t\t\t'isValidated': false,\n\t\t\t'initialValue': '',\n\t\t\t'type': props.textarea ? 'textarea' : 'input',\n\t\t};\n\t}\n\n\tonKeyUp(e) {\n\t\tvar code = e.keyCode || e.which;\n\t\tif(code === 13) { //13 is the enter keycode\n\t\t\tthis.showInput(e);\n\t\t}\n\t}\n\n\tshowInput(e) {\n\t\tconst isPlaceholder = e.target.classList.contains('placeholder');\n\n\t\tif (!isPlaceholder) {\n\t\t\tthis.setState({\n\t\t\t\t'initialValue': e.target.textContent,\n\t\t\t});\n\t\t}\n\t\tthis.toggleInput();\n\t}\n\n\ttoggleInput() {\n\t\tconst newShowInputValue = !this.state.showInput;\n\n\t\t// optionally, tell the parent component whether the field is being edited\n\t\tif (typeof this.props.isEditing === 'function') {\n\t\t\tthis.props.isEditing(newShowInputValue);\n\t\t}\n\n\t\tthis.setState({\n\t\t\t'showInput': newShowInputValue,\n\t\t});\n\t}\n\n\tcancel = () => {\n\t\t// restore the initial value of the field as though the user had just entered it\n\t\tconst fakeEvent = {\n\t\t\t'target': {\n\t\t\t\t'dataset': { 'state': this.props['data-state'] },\n\t\t\t\t'value': this.state.initialValue,\n\t\t\t}\n\t\t};\n\t\tthis.props.handleInputChange(fakeEvent);\n\t\tthis.toggleInput();\n\t}\n\n\tvalidate = () => {\n\t\t// custom validation for consistency with other forms\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst elem = formEl.querySelector(this.state.type);\n\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\tif (!elem.validity.valid) {\n\t\t\tlet message = elem.validationMessage;\n\t\t\terrorLabel.textContent = message;\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\terrorLabel.textContent = '';\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\t// the user has typed a new value and the parent component should be notified\n\n\t\tconst inputElement = e.target.querySelector(this.state.type);\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.handleNewValue(inputElement);\n\t\t\tthis.toggleInput();\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t}\n\n\trender() {\n\t\tlet type = 'text';\n\t\tif (this.props.textarea) {\n\t\t\ttype = 'textarea';\n\t\t}\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (this.props.className) {\n\t\t\tclassNames = [...this.props.className];\n\t\t\tdelete this.props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\tconst showInput = this.state.showInput;\n\t\tlet item;\n\n\t\tif(this.props.canEdit) {\n\t\t\tif (showInput) {\t\t\t\n\t\t\t\titem = (\n\t\t\t\t\t<form\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tonSubmit={this.handleSubmit.bind(this)}\n\t\t\t\t\t\tclassName={classNames}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<Label for={this.props.id}>{this.props.label}</Label>\n\t\t\t\t\t\t\t\t\t<Input autoFocus\n\t\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\t\tname={this.props.id}\n\t\t\t\t\t\t\t\t\t\trequired={this.props.required}\n\t\t\t\t\t\t\t\t\t\tdata-state={this.props['data-state']}\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props['data-entityid']}\n\t\t\t\t\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\t\t\t\t\tonChange={this.props.handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tDone\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</form>);\n\t\t\t} else {\n\t\t\t\tif (this.props.value !== '') {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tonClick={this.showInput.bind(this)}\n\t\t\t\t\t\t\t onKeyUp={this.onKeyUp.bind(this)}\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t>{this.props.value}</span>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"placeholder\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\tonClick={this.showInput.bind(this)}\n\t\t\t\t\t\t\tonKeyUp={this.onKeyUp.bind(this)}\n\t\t\t\t\t\t>{this.props.placeholder}</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.props.value !== '') {\n\t\t\t\titem = (\n\t\t\t\t\t<span>{this.props.value}</span>\n\t\t\t\t);\n\t\t\t} else {\n\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className={`editable-text-field ${showInput && 'editing'}`}>\n\t\t\t\t{ item }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditableTextField;\n","// An individual item\n// It is a stateful component so that the description field can be shown only if there is a name defined.\n\nimport store from '../store';\n\nimport React, { Component } from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport EditableTextField from './EditableTextField.js';\nimport * as permissions from '../modules/permissions';\nimport './Item.scss';\n\nclass Item extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\t'isEditingName': false,\n\t\t};\n\t}\n\n\tsetIsEditingName(showInput) {\n\t\tthis.setState({\n\t\t\t'isEditingName': showInput,\n\t\t});\n\t}\n\n\tonCreateChildList = () => {\n\t\tthis.props.onCreateChildList(this.props.item.id);\n\t}\n\n\trender() {\n\t\tlet showDescription = true;\n\t\tif (this.props.item.name === '') {\n\t\t\tshowDescription = false;\n\t\t} else if (this.state.isEditingName && store.getState().items.things[this.props.item.id] && store.getState().items.things[this.props.item.id].name === '') {\n\t\t\tshowDescription = false;\n\t\t}\n\n\t\tlet canCreateChildList = true; // should the \"create child list\" button be visible?\n\n\t\tif (this.props.item.childList || // there is already a child list\n\t\t\tthis.props.item.name === '' || // there is no item\n\t\t\tthis.state.isEditingName || // the item name is being edited\n\t\t\t!this.props.canEdit) { // the user can't edit this list\n\t\t\tcanCreateChildList = false;\n\t\t}\n\n\t\tlet canViewChildList = false;\n\n\t\t// child list exists and user can view it\n\t\tif (this.props.item.childList && permissions.canViewList({ 'slug': this.props.item.childList.slug })) {\n\t\t\tcanViewChildList = true;\n\t\t}\n\n\t\tlet childList;\n\n\t\tif (canCreateChildList) {\n\t\t\tchildList = (<button className=\"btn btn-primary create-childlist\" onClick={this.onCreateChildList.bind(this)}>Create child list</button>);\t\n\t\t} else if (canViewChildList) {\n\t\t\tchildList = (\n\t\t\t\t<div className=\"child-list\">\t\n\t\t\t\t\t<Link to={`/list/${this.props.item.childList.slug}`}>{this.props.item.childList.name} ></Link>\n\t\t\t\t</div>);\n\t\t}\n\n\t\treturn (\n\t\t\t<Col className=\"item-container\">\n\t\t\t\t<div className=\"item-header\">\n\t\t\t\t\t<span className=\"order\">{this.props.item.order}:</span><EditableTextField\n\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\tname={`${this.props.item.order}_name`}\n\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\tplaceholder=\"Click here to add an item\"\n\t\t\t\t\t\tdata-state={`${this.props.item.order}_name`}\n\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\tid={`${this.props.item.order}_name`} // id of the html element\n\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\tisEditing={this.setIsEditingName.bind(this)}\n\t\t\t\t\t\tvalue={this.props.item.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{childList}\n\t\t\t\t{showDescription &&\n\t\t\t\t\t<div className=\"item-body\">\n\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\t\tname={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tplaceholder=\"Click here to add a description\"\n\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\tdata-state={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\t\tid={`${this.props.item.order}_description`} // id of the html element\n\t\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\t\tvalue={this.props.item.description}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Col>\n\t\t);\n\t}\n};\n\nexport default Item;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\n\nimport * as itemsReducer from '../modules/items';\n\nimport { MAX_ITEMS_IN_LIST } from '../constants';\nimport Item from './Item';\n\nclass ItemsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\n\t\t// set up the state to hold each item's name and description\n\t\t// coded by order\n\t\t// this is not elegant but keeps state flat\n\t\tfor (let i=1; i<= MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`${i}_name`] = '';\n\t\t\tthis.state[`${i}_description`] = '';\n\t\t}\n\n\t\t// fill in whatever items exist\n\t\tconst items = this.props.items;\n\n\t\tObject.keys(items).forEach((key) => {\n\t\t\tif (items[key].order && items[key].order <= MAX_ITEMS_IN_LIST) {\n\t\t\t\tconst order = items[key].order;\n\n\t\t\t\tthis.state[`${order}_id`] = items[key].id;\n\t\t\t\tthis.state[`${order}_name`] = items[key].name;\n\t\t\t\tthis.state[`${order}_description`] = items[key].description;\n\n\t\t\t\t// child lists\n\t\t\t\tif (items[key].childList) {\n\t\t\t\t\tthis.state[`${order}_childList`] = items[key].childList;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst itemId = element.dataset.entityid;\n\n\t\t// the item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(itemsReducer.updateItem(itemId, propertyName, value));\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewItemForm': !this.state.showNewItemForm });\n\t}\n\n\trenderItemsList() {\n\t\tlet elements = [];\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tconst name = this.state[`${i}_name`];\n\t\t\tconst canEdit = this.props.canEdit;\n\t\t\tif (name || canEdit) {\n\t\t\t\telements.push(\n\t\t\t\t\t<Row key={`item${i}`}>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\tkey={`item${i}`}\n\t\t\t\t\t\t\t\titem={{\n\t\t\t\t\t\t\t\t\t'id': this.state[`${i}_id`],\n\t\t\t\t\t\t\t\t\t'order': i,\n\t\t\t\t\t\t\t\t\t'name': name,\n\t\t\t\t\t\t\t\t\t'description': this.state[`${i}_description`],\n\t\t\t\t\t\t\t\t\t'childList': this.state[`${i}_childList`],\n\t\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\tcanEdit={canEdit}\n\t\t\t\t\t\t\t\tonCreateChildList={this.props.onCreateChildList}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"items-list\">\n\t\t\t\t{this.renderItemsList()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(ItemsPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport EditableTextField from '../components/EditableTextField.js';\nimport ItemsPage from '../components/ItemsPage';\n\nimport * as lists from '../modules/lists';\nimport * as permissions from '../modules/permissions';\nimport findObjectByProperty from '../modules/findObjectByProperty';\nimport formatErrorMessages from '../modules/formatErrorMessages';import isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n// import { sortedItems } from '../modules/items';\n\nimport './ListDetail.scss';\n\n\nclass ListDetails extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\t// to start with all we know is the slug. We have to find the list id, and then the list details and items can be loaded\n\t\tthis.state = {};\n\t\tthis.getListData = this.getListData.bind(this);\n\t\tconst slug = this.getListData(props);\n\n\t\tthis.state = {\n\t\t\tslug,\n\t\t};\n\t}\n\n\tgetListData = (props) => {\n\t\tconst slug = props.match.params.slug;\n\n\t\tprops.dispatch(lists.fetchListBySlug(slug));\n\t\tprops.dispatch(clearErrors());\n\t\treturn slug;\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst listId = element.dataset.entityid;\n\n\t\t// the list field to update is coded in the 'state' data e.g. 'list_name'\n\t\t// we want to keep item name and list name clearly separate\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(lists.updateList(listId, propertyName, value));\n\t}\n\n\tonCreateChildList = (itemId) => {\n\t\tthis.props.history.push(`/newlist?parent-item=${itemId}`);\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.isLoading && !this.props.isLoading) {\n\t\t\t// just finished loading; need to check if user should view this list\n\t\t\tconst canEditList = permissions.canEditList({ 'slug': this.state.slug });\n\t\t\tconst canViewList = permissions.canViewList({ 'slug': this.state.slug });\n\n\t\t\tthis.setState({\n\t\t\t\t'canView': canViewList,\n\t\t\t\t'canEdit': canEditList,\n\t\t\t});\n\n\t\t\tif(canViewList) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t'list_name': this.props.list.name,\n\t\t\t\t\t'list_description': this.props.list.description,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// user has navigated to a different list\n\t\tif (prevProps.match.params.slug !== this.props.match.params.slug) {\n\t\t\tconst slug = this.getListData(this.props);\n\t\t\tthis.setState({\n\t\t\t\tslug,\n\t\t\t});\n\t\t}\n\n\t\t// user has just logged out\n\t\t// store needs to be repopulated\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.props.dispatch(lists.fetchListBySlug(this.state.slug));\n\t\t\tthis.props.dispatch(clearErrors());\n\t\t}\n\t}\n\n\trenderItemsPage() {\n\t\treturn <div>\n\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>)}\n\t\t\t{this.props.list && (\n\t\t\t\t<div>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{this.props.parentList && (\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<div className=\"breadcrumbs\"><Link to={`/list/${this.props.parentList.slug}`}>{this.props.parentList.name}</Link> > {this.props.parentItem.name}</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"list-name\">\n\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tname={'list_name'}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a name for the list\"\n\t\t\t\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\t\t\t\tdata-state={'list_name'} // this.state property\n\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\tid='list_name' // id of the html element\n\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\tvalue={this.state.list_name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"list-description\">\n\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\tname={'list_description'}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a description for the list\"\n\t\t\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\t\t\tdata-state={'list_description'} // this.state property\n\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\tid='list_description' // id of the html element\n\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\tvalue={this.state.list_description}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{this.props.items && (\n\t\t\t\t\t\t\t<ItemsPage\n\t\t\t\t\t\t\t\titems={this.props.items}\n\t\t\t\t\t\t\t\tlist={this.props.list.id}\n\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\tonCreateChildList={this.onCreateChildList}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>;\n\t}\n\n\t///////////////\n\n\trender() {\n\t\tlet content;\n\n\t\tif (this.state.canView) {\n\t\t\tcontent = this.renderItemsPage();\n\t\t} else {\n\t\t\tcontent = <p>Either this list does not exist or you do not have permission to view it</p>;\n\t\t}\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{ content }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nListDetails.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'lists': PropTypes.object.isRequired,\n\t'items': PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\t// the store should contain our target list, identified by slug\n\t// It may also contain the parent list, and / or any child lists\n\t// plus the items for all these lists\n\tconst lists = state.lists.things;\n\tconst items = state.items.things;\n\n\t// first find the target list\n\tconst list = findObjectByProperty({ 'parentObject': lists, 'property': 'slug', 'value': ownProps.match.params.slug });\n\n\tlet parentList; // list object\n\tlet parentItem; // item object\n\tlet targetListItems = []; // items for just the target list\n\n\t// find the parent item and its list\n\tif (list) { // avoid error while loading or if list not visible\n\t\t// find the items for the target list\n\t\ttargetListItems = list.items.map((itemId) => {\n\t\t\treturn { ...items[itemId] }; // shallow copy so item is extensible\n\t\t});\n\n\t\tparentItem = findObjectByProperty({ 'parentObject': items, 'property': 'id', 'value': list.parent_item });\n\n\t\tconst keys = Object.keys(lists);\n\n\t\tfor (let i=0; i<keys.length; i++) {\n\t\t\t// search lists to find the one which contains the parent item\n\t\t\t// item ids are an array property of the list\n\t\t\tconst testList = lists[keys[i]];\n\n\t\t\tif (list.parent_item) {\n\t\t\t\tif (testList.items.indexOf(list.parent_item) !== -1) {\n\t\t\t\t\tparentList = testList;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// find any list that is a child of an item in the target list\n\t\t\tconst index = list.items.indexOf(testList.parent_item);\n\n\t\t\tif (index !== -1) {\n\t\t\t\ttargetListItems[index].childList = { ...testList };\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ({\n\t\t'auth': state.auth,\n\t\t'errors': state.errors,\n\t\t'isLoading': state.lists.isLoading,\n\t\t'lists': lists,\n\t\t'list': list,\n\t\t'parentList': parentList,\n\t\t'items': targetListItems,\n\t\t'parentItem': parentItem,\n\t});\n};\n\nexport default connect(mapStateToProps)(withRouter(ListDetails));\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.confirmEmailNotSent());\n\t}\n\n\tsendConfirmationEmail() {\n\t\tthis.props.dispatch(auth.sendConfirmationEmail());\n\t}\n\n\trender() {\n\t\tconst emailVerified = this.props.auth.user.emailVerified;\n\t\tconst email_status = emailVerified ? 'verified': 'unverified';\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>My account</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div>Username: {this.props.auth.user.username}</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/changepassword\">Change password</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div>Email address: {this.props.auth.user.email}</div>\n\t\t\t\t\t\t<div>Status: {email_status}</div>\n\t\t\t\t\t\t{!emailVerified &&\t<button type=\"button\" className=\"btn btn-primary\"onClick={this.sendConfirmationEmail.bind(this)}>\n\t\t\t\t\t\t\t\tResend confirmation email\n\t\t\t\t\t\t</button>}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{this.props.auth.confirmEmailSent && (<div className=\"valid-feedback\">A verification email has been sent to {this.props.auth.user.email}. If you do not receive the email within a few minutes, please check your Junk or Spam folder.</div>)}\n\t\t\t\t{this.props.auth.confirmEmailAlreadyVerified && (<div className=\"valid-feedback\">The email address {this.props.auth.user.email} has already been verified.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'sendConfirmationEmail': PropTypes.func.isRequired,\n\t'confirmEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'sendConfirmationEmail': auth.sendConfirmationEmail,\n\t'confirmEmailNotSent': auth.confirmEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.forgotPasswordEmailNotSent());\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.dispatch(auth.forgotPassword(user));\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) &&\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>}\n\t\t\t\t<h2>Forgot your password?</h2>\n\t\t\t\t<p>Enter your email address. A reset password link will be emailed to you.</p>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.email && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.email}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"valid-feedback\">If the address {this.state.email} is associated with an account, an email has been sent. If you don't see it within a few minutes, please check your junk mail folder.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'forgotPassword': auth.forgotPassword,\n\t'forgotPasswordEmailNotSent': auth.forgotPasswordEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { changePassword, passwordNotChanged } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass ChangePassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'old_password': '',\n\t\t\t'new_password': '',\n\t\t\t'new_password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconsole.log('submit changePassword');\n\t\tconst data = {\n\t\t\t'old_password': this.state.old_password,\n\t\t\t'new_password1': this.state.new_password,\n\t\t\t'new_password2': this.state.new_password_confirm\n\t\t};\n\n\t\tthis.props.changePassword(data, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Change your password</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'new_password',\n\t\t\t\t\t'input2': 'new_password_confirm',\n\t\t\t\t\t'message': 'New passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"old_password\">Old password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"old_password\"\n\t\t\t\t\t\t\t\t\tid=\"old_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.old_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your old password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password\">New password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password_confirm\">Confirm your new password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tChange password now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.changePassword && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.changePassword}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t      {this.props.auth.changePasswordComplete && (<div className=\"valid-feedback\">Your new password has been saved</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nChangePassword.propTypes = {\n\t'changePassword': PropTypes.func.isRequired,\n\t'passwordNotChanged': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ changePassword, passwordNotChanged })(withRouter(ChangePassword));\n","// Shown after user successfully verifies email address\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { logoutUser } from '../modules/auth';\n\nclass Verified extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onLogout();\n\t}\n\n\tonLogout(e) {\n\t\t// just in case a different user is logged in\n\t\t// to avoid confusion and force new login\n\t\tif (this.props.auth.isAuthenticated) {\n\t\t\tthis.props.logoutUser(this.props.history);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Your email address has been verified</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/login\" className=\"nav-link\">Login</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nVerified.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Verified));\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport { setCurrentUser, getUserInfo, logoutUser, getAuthToken } from '../modules/auth';\n\nimport Navbar from '../components/Navbar';\nimport Register from '../components/Register';\nimport Welcome from '../components/Welcome';\nimport Login from '../components/Login';\nimport Home from '../containers/Home';\nimport CreateList from '../containers/CreateList';\nimport ListDetails from '../containers/ListDetail';\nimport Account from '../components/Account';\nimport ForgotPassword from '../components/ForgotPassword';\nimport ChangePassword from '../components/ChangePassword';\nimport Verified from '../components/Verified';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password loads the bootstrap css from static/bootstrap\n\n// check if user is already logged in\nif(getAuthToken()) {\n\tstore.dispatch(setCurrentUser(localStorage.mytoptensJwtToken));\n\tstore.dispatch(getUserInfo());\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.mytoptensJwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\t\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t\t<Route exact path=\"/newlist\" component={ CreateList } />\n\t\t\t\t\t\t\t<Route exact path=\"/list/:slug\" component={ ListDetails } />\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/welcome\" component={ Welcome } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t<Route exact path=\"/changepassword\" component={ ChangePassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/verified\" component={ Verified } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./containers/App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}
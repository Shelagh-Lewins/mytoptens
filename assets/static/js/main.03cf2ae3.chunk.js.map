{"version":3,"sources":["modules/errors.js","modules/formatErrorMessages.js","modules/fetchAPI.js","modules/isEmpty.js","modules/auth.js","constants/index.js","modules/items.js","modules/lists.js","modules/page.js","modules/rootReducer.js","store.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Welcome.js","components/Login.js","components/ListsList.js","modules/findObjectByProperty.js","modules/permissions.js","components/ListSummary.js","containers/ListsPage.js","components/FlashMessage.js","containers/Home.js","containers/CreateList.js","components/EditableTextField.js","components/Item.js","components/ItemsPage.js","containers/ListDetail.js","components/Account.js","components/ForgotPassword.js","components/ChangePassword.js","containers/App.js","serviceWorker.js","index.js"],"names":["getErrors","error","type","payload","clearErrors","updeep","require","initialState","formatErrorMessages","errors","messageArray","Object","keys","forEach","key","push","map","item","join","fetchAPI","_ref","url","data","_ref$method","method","_ref$useAuth","useAuth","_ref$headers","headers","Authorization","concat","store","getState","auth","user","token","fetch","body","then","response","ok","contentType","get","includes","json","catch","Promise","reject","Error","message","text","html","page_type","status","isEmpty","value","undefined","length","trim","LOGOUT_USER_COMPLETE","setCurrentUser","dispatch","localStorage","setItem","setAuthToken","logoutUser","history","removeItem","logout user","getUserInfo","setUserInfo","username","email","id","slug","get user info","forgotPasswordEmailNotSent","forgotPassword","formData","FormData","name","append","request password reset email","passwordNotChanged","changePasswordComplete","isAuthenticated","canCreateList","forgotPasswordEmailSent","resetPasswordComplete","LIST_IS_PUBLIC_VALUES","LIST_IS_PUBLIC_TEXTS","MAX_ITEMS_IN_LIST","CREATE_ITEM_SUCCEEDED","UPDATE_ITEM_SUCCEEDED","DELETE_ITEM_SUCCEEDED","updateItem","itemId","propertyName","Content-Type","JSON","stringify","defineProperty","updateItemSucceeded","update item","initialItemsState","things","isLoading","sortedItems","createSelector","state","items","sort","a","b","order","RECEIVE_ENTITIES","FETCH_LISTS_STARTED","FETCH_LISTS_FAILED","FETCH_LIST_BY_SLUG_STARTED","FETCH_LIST_BY_SLUG_FAILED","FILTER_LISTS","CREATE_LIST_STARTED","CREATE_LIST_SUCCEEDED","DELETE_LIST_SUCCEEDED","SET_LIST_IS_PUBLIC_SUCCEEDED","UPDATE_LIST_SUCCEEDED","itemSchema","schema","Entity","listSchema","receiveEntities","entities","fetchLists","normalizedData","normalize","fetch lists","fetchListBySlug","createList","list","create list","updateList","listId","updateListSucceeded","deleteList","deleteListSucceeded","delete list","setListIsPublic","_ref2","is_public","_ref3","setListIsPublicSucceeded","set list is public","initialListsState","getFilteredLists","lists","page","searchTerm","filter","match","RegExp","getFilteredPublicLists","grouped","getMyGroupedAndFilteredLists","created_by_id","combineReducers","arguments","action","toConsumableArray","constant","omit","updateIn","itemIndex","findIndex","newItems","splice","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDropdown","e","preventDefault","setState","prevState","_this2","_this$props$auth","authLinks","react_default","createElement","className","Link","to","onClick","onLogout","bind","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","Component","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","assertThisInitialized","formLength","checkValidity","i","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","handleSubmit","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","node","setCustomValidity","objectSpread","classNames","assign","noValidate","children","Register","password","password_confirm","handleInputChange","target","password1","password2","registerUser","nextProps","Container","ValidatedForm_ValidatedForm","Row","Col","Label","for","Input","required","onChange","minLength","pattern","registration","style","display","Welcome","Login","loginUser","authentication","ListsList","headerText","findObjectByProperty","parentObject","property","childObject","canViewList","identifier","userId","canEditList","ListSummary","canEdit","permissions","sm","md","description","onIsPublicChange","onDeleteList","showCreatedBy","created_by_username","ListsPage","onSearch","onAddList","handleTabClick","selectedTab","setListSetURL","listset","URLSearchParams","location","search","prevProps","_this$props","publicLists","components_ListsList","components_ListSummary","_this$props2","myLists","index","listsByIsPublic","URL","pathname","listsList","renderMyLists","renderPublicLists","renderTabs","FlashMessage","aria-hidden","Home","confirm","onCloseFlashMessage","src_containers_ListsPage","onCreateList","CreateList","newList","cancel","newItem","elements","renderItemInputs","EditableTextField","fakeEvent","dataset","initialValue","toggleInput","showInput","textarea","keyCode","which","classList","contains","newShowInputValue","isEditing","inputElement","handleNewValue","label","autoFocus","data-state","data-entityid","onKeyUp","tabIndex","Item","isEditingName","showDescription","src_components_EditableTextField","setIsEditingName","ItemsPage","element","entityid","split","itemsReducer","toggleForm","showNewItemForm","src_components_Item","renderItemsList","ListDetails","params","canView","list_name","list_description","components_ItemsPage","content","renderItemsPage","ownProps","Account","ForgotPassword","ChangePassword","old_password","new_password","new_password_confirm","console","log","new_password1","new_password2","changePassword","getItem","jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","hostname","navigator","serviceWorker","ready","unregister","render","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.03cf2ae3.chunk.js","sourcesContent":["// errorReducer.js\n\nconst GET_ERRORS = 'GET_ERRORS';\nconst CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const getErrors = error => {\n\t// error is an object, e.g. { 'registration': error.message }\n\treturn {\n\t\t'type': GET_ERRORS,\n\t\t'payload': error,\n\t};\n};\n\nexport const clearErrors = () => {\n\treturn {\n\t\t'type': CLEAR_ERRORS,\n\t};\n};\n\nvar updeep = require('updeep');\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\t// ensure we have an array of strings to allow multiple errors to be displayed\n\t\t\tlet errors = {};\n\n\t\t\tObject.keys(action.payload).forEach((key) => {\n\t\t\t\tif (typeof action.payload[key] === 'string') {\n\t\t\t\t\t// a string is simply copied\n\t\t\t\t\terrors[key] = [action.payload[key]];\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = [...action.payload[key]];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn updeep(errors, {}); // clear any existing errors\n\t\t}\n\n\t\tcase CLEAR_ERRORS: {\n\t\t\treturn {};\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// join arrays of error messages from different errors, into a single string.\n// it is expected that there will only ever be one type of error, e.g. 'register', but the object is parsed to be on the safe side.\n/*\n{ {'register': [\n\t\t'email already in use',\n\t\t'username already in use'\n\t\t]},\n\t{'login': [\n\t\t'could not log in'\n\t]\n}\n*/\n\nexport default function (errors) {\n\tlet messageArray = [];\n\tObject.keys(errors).forEach((key) => {\n\t\tif (typeof errors[key] === 'string') {\n\t\t\tmessageArray.push(errors[key]); // plain string error\n\t\t} else { // arary of errors\n\t\t\terrors[key].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\tmessageArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst message = messageArray.join(' ');\n\n\treturn message;\n};\n","// uses fetch to get or post data.\n// passes up useful errors to the calling function.\n// set useAuth to true for validating logged-in user: token will be sent in header\nimport store from '../store';\nimport formatErrorMessages from '../modules/formatErrorMessages';\n\nexport default function fetchAPI({ url, data, method = 'GET', useAuth = false, headers = {} }) {\n\tif (useAuth) {\n\t\theaders.Authorization = `Token ${store.getState().auth.user.token}`;\n\t}\n\n\treturn fetch(url, { headers, 'method': method, 'body': data })\n\t\t.then(response => {\n\t\t\t// fetch returns ok true / false in most situations\n\t\t\t// true is a successful response\n\t\t\tif (response.ok) {\n\t\t\t\tconst contentType = response.headers.get('Content-Type') || '';\n\n\t\t\t\tif (contentType.includes('application/json')) {\n\t\t\t\t\treturn response.json().catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('Invalid JSON: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (contentType.includes('text/html')) {\n\t\t\t\t\treturn response.text().then(html => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'page_type': 'generic',\n\t\t\t\t\t\t\t'html': html\n\t\t\t\t\t\t};\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('HTML error: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// ok == false means some problem to display\n\t\t\t\t// even though no error was returned\n\t\t\t\tif (response.status === 404) {\n\t\t\t\t\treturn Promise.reject(new Error('Page not found: ' + url));\n\t\t\t\t}\n\n\t\t\t\tif (response.status === 500) {\n\t\t\t\t\treturn Promise.reject(new Error('Internal server error: ' + url));\n\t\t\t\t}\n\n\t\t\t\treturn response.json().then(response => {\n\t\t\t\t\t// the server rejected the request, e.g. because of a wrong password, we want to display the reason\n\t\t\t\t\t// the information is contained in the json()\n\t\t\t\t\t// there may be more than one error, so join them into a single string.\n\t\t\t\t\t// multiline display would be more elegant but this will do for now and makes all errors consistent (one message string)\n\n\t\t\t\t\treturn Promise.reject(new Error(formatErrorMessages(response))\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\t// fetch returned an error\n\t\t\treturn Promise.reject(new Error(error.message));\n\t\t});\n};\n","// check for a null, empty, undefined object\n\nconst isEmpty = (value) => {\n\treturn (\n\t\tvalue === undefined ||\n\t\tvalue === null ||\n\t\t(typeof value === 'object' && Object.keys(value).length === 0) ||\n\t\t(typeof value === 'string' && value.trim().length === 0)\n\t);\n};\n\nexport default isEmpty;\n","// authReducer.js\n\nimport store from '../store';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors, clearErrors } from '../modules/errors';\nimport isEmpty from '../modules/isEmpty';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\nexport const PASSWORD_NOT_CHANGED = 'PASSWORD_NOT_CHANGED';\nexport const CHANGE_PASSWORD_COMPLETE = 'CHANGE_PASSWORD_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\n\n// Side effects Services\nexport const getAuthToken = () => {\n\treturn localStorage.getItem('jwtToken');\n};\n\nfunction setAuthToken(token) {\n\tlocalStorage.setItem('jwtToken', token);\n\treturn;\n}\n\nfunction removeAuthToken() {\n\tlocalStorage.removeItem('jwtToken');\n\treturn;\n}\n\nexport const registerUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/registration/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t}).then(response => {\n\t  \thistory.push('/welcome');\n\t    return response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'registration': error.message }));\n\t});\n};\n\n// TODO rework auth as a saga with token refresh\n// https://github.com/redux-saga/redux-saga/issues/14\n// https://github.com/alvelig/redux-saga-auth\nexport const loginUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/login/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t  \t// history.push('/');\n\t    return dispatch(setCurrentUser(response.key));\n\t}).then(() => {\n\t\thistory.push('/');\n\t\t// after store has been updated with token, we can query the server for current user info\n\t\treturn store.dispatch(getUserInfo());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'authentication': 'Unable to log in with the provided credentials, please try again.' }));\n\t});\n};\n\nexport const setCurrentUser = (token, dispatch) => {\n\tsetAuthToken(token);\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': { token },\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\tdispatch(clearErrors());\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/logout/',\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\tremoveAuthToken();\n\t  return dispatch(logoutUserComplete());\n\t  }).then(() => {\n\t  \t// ensure token is removed from localStorage and store before redirecting\n\t  \thistory.push('/');\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'logout user': 'Unable to logout' }));\n\t});\n};\n\n///////////////////////////////\n// get user info\n// TODO rebuild as saga with login using state token\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\n// should get token from state. Currently it is passed in by referring function because state is not updated synchronously.\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = () => (dispatch) => {\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/user/',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t}).then(user => {\n\t  \treturn dispatch(setUserInfo({\n\t\t\t'username': user.username,\n\t\t\t'email': user.email,\n\t\t\t'id': user.id,\n\t\t\t'slug': user.slug,\n\t\t}));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'get user info': 'Unable to get user info' }));\n\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t//'url': '/api/v1/rest-auth/password/reset1/',\n\t\t'url': '/api/v1/rest-auth/password/reset/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t   return dispatch(forgotPasswordEmailSent());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'request password reset email': `Unable to send a password reset email. It is likely that the email address ${email} is not associated with a registered user` }));\n\t\t// return dispatch(getErrors(error.response.data));\n\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n//////////////////////////////////\n// change password\nexport const changePassword = (data) => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(passwordNotChanged());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in data) {\n\t\tformData.append(name, data[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/change/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t  dispatch(changePasswordComplete());\n\t    return response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'changePassword': error.message }));\n\t});\n};\n\nexport const passwordNotChanged = token => {\n\treturn {\n\t\t'type': PASSWORD_NOT_CHANGED,\n\t};\n};\n\nexport const changePasswordComplete = (token) => {\n\treturn {\n\t\t'type': CHANGE_PASSWORD_COMPLETE,\n\t};\n};\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isAuthenticated': false,\n\t'canCreateList': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'changePasswordComplete': false,\n\t'user': {}\n};\n\nfunction canCreateList(token) {\n\t// for now, simply check whether the user is logged in\n\t// in future, further checks will be added e.g. email validated, number of lists exceeded?\n\treturn !isEmpty(token);\n}\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'canCreateList': canCreateList(action.payload.token),\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user info\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user info\n\t\t\treturn updeep({\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'slug': action.payload.slug,\n\t\t\t\t\t'id': action.payload.id,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'canCreateList': canCreateList(),\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase PASSWORD_NOT_CHANGED: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': false,\n\t\t\t\t'errors': {}\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CHANGE_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","export const LIST_IS_PUBLIC_VALUES = [false, true];\nexport const LIST_IS_PUBLIC_TEXTS = ['Private', 'Public'];\nexport const MAX_ITEMS_IN_LIST = 10;\n","import { createSelector } from 'reselect';\nimport { RECEIVE_ENTITIES } from '../modules/lists';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tFETCH_LIST_BY_SLUG_STARTED\n} from './lists';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const CREATE_ITEM_REQUESTED = 'CREATE_ITEM_REQUESTED';\nexport const CREATE_ITEM_SUCCEEDED = 'CREATE_ITEM_SUCCEEDED';\nexport const UPDATE_ITEM_SUCCEEDED = 'UPDATE_ITEM_SUCCEEDED';\nexport const DELETE_ITEM_SUCCEEDED = 'DELETE_ITEM_SUCCEEDED';\n\nexport const createItem = item => dispatch => {\n\tdispatch(createItemRequested());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/items/',\n\t\t'data': JSON.stringify(item),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\treturn dispatch(createItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create item': error.message }));\n\t});\n};\n\nexport function createItemRequested() {\n\treturn {\n\t\t'type': 'CREATE_ITEM_REQUESTED',\n\t};\n}\n\nexport function createItemSucceeded(item) {\n\treturn {\n\t\t'type': 'CREATE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titem\n\t\t}\n\t};\n}\n\nexport const updateItem = (itemId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateItemSucceeded({ id }) {\n\treturn {\n\t\t'type': UPDATE_ITEM_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t}\n\t};\n}\n\nexport const deleteItem = ({ itemId, listId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/items/${itemId}/`,\n\t\t'method': 'DELETE',\n\t}).then(response => {\n\t\treturn dispatch(deleteItemSucceeded({ itemId, listId }));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete item': error.message }));\n\t});\n};\n\nexport function deleteItemSucceeded({ itemId, listId }) {\n\treturn {\n\t\t'type': 'DELETE_ITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\titemId,\n\t\t\tlistId\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialItemsState = {\n\t'things': {},\n\t'isLoading': false,\n\t'error': null,\n};\n\nexport default function items(state = initialItemsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialItemsState, {});\n\t\t}\n\t\t\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tif (entities && entities.items) {\n\t\t\t\treturn updeep({ 'things': entities.items, 'isLoading': false }, state);\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'things': updeep.constant({}), // remove all existing items\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\t\t\treturn updeep({ 'things': { [item.id]: item } }, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n// all items, for selector to use\nexport const getItems = state => state.items.things;\n\n// items belonging to the current list\nexport const sortedItems = createSelector(\n\t[getItems],\n\t(items) => {\n\t\tlet listItems = (Object.keys(items).map(id => {\n\t\t\treturn items[id];\n\t\t})).sort(function(a, b){\n\t\t\treturn a.order - b.order; // sort to index order\n\t\t});\n\n\t\treturn listItems;\n\t}\n);\n\n","import { createSelector } from 'reselect';\nimport { LIST_IS_PUBLIC_VALUES } from '../constants';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport { normalize, schema } from 'normalizr';\nimport store from '../store';\n\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tCREATE_ITEM_SUCCEEDED,\n\tDELETE_ITEM_SUCCEEDED\n} from './items';\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const RECEIVE_ENTITIES = 'RECEIVE_ENTITIES';\nexport const FETCH_LISTS_STARTED = 'FETCH_LISTS_STARTED';\nexport const FETCH_LISTS_FAILED = 'FETCH_LISTS_FAILED';\nexport const FETCH_LIST_BY_SLUG_STARTED = 'FETCH_LIST_BY_SLUG_STARTED';\nexport const FETCH_LIST_BY_SLUG_FAILED = 'FETCH_LISTS_FAILED';\nexport const FILTER_LISTS = 'FILTER_LISTS';\nexport const CREATE_LIST_STARTED = 'CREATE_LIST_STARTED';\nexport const CREATE_LIST_SUCCEEDED = 'CREATE_LIST_SUCCEEDED';\nexport const DELETE_LIST_SUCCEEDED = 'DELETE_LIST_SUCCEEDED';\nexport const SET_LIST_IS_PUBLIC_SUCCEEDED = 'SET_LIST_IS_PUBLIC_SUCCEEDED';\nexport const UPDATE_LIST_SUCCEEDED = 'UPDATE_LIST_SUCCEEDED';\n\nconst itemSchema = new schema.Entity('items');\nconst listSchema = new schema.Entity('lists', {\n\t'items': [itemSchema],\n});\n\nfunction receiveEntities(entities) {\n\treturn {\n\t\t'type': RECEIVE_ENTITIES,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchListsStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_LISTS_STARTED,\n\t};\n}\n\nfunction fetchListsFailed() {\n\treturn {\n\t\t'type': FETCH_LISTS_FAILED\n\t};\n}\n\nexport function fetchLists() {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListsStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return only the lists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': '/api/v1/content/lists/',\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\t\t\t\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListsFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////\n// fetch a single list by slug\nexport function fetchListBySlugStarted() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_STARTED,\n\t};\n}\n\nfunction fetchListBySlugFailed() {\n\treturn {\n\t\t'type': FETCH_LIST_BY_SLUG_FAILED\n\t};\n}\n\nexport function fetchListBySlug(slug) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchListBySlugStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return the list if a non-authenticated user should see it.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/list/?slug=${slug}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [listSchema]);\n\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchListBySlugFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch lists': error.message }));\n\t\t});\n\t};\n}\n\nexport function filterLists(searchTerm) {\n\treturn { \n\t\t'type': FILTER_LISTS,\n\t\t'payload': { searchTerm },\n\t};\n}\n\n/////////////////////////////\n// create list\nexport const createList = (list, history) => dispatch => {\n\tdispatch(createListStarted());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/lists/',\n\t\t'data': JSON.stringify(list),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\tdispatch(createListSucceeded(response));\n\t\thistory.push(`/list/${response.slug}`);\n\t\treturn;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create list': error.message }));\n\t});\n};\n\nexport function createListStarted() {\n\treturn {\n\t\t'type': CREATE_LIST_STARTED,\n\t};\n}\n\nexport function createListSucceeded(list) {\n\treturn {\n\t\t'type': CREATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tlist\n\t\t}\n\t};\n}\n\n///////////////////////////\n// update list\nexport const updateList = (listId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${listId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateListSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update item': error.message }));\n\t});\n};\n\nexport function updateListSucceeded({ id }) {\n\treturn {\n\t\t'type': UPDATE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t}\n\t};\n}\n\n///////////////////////////\n// delete list\nexport const deleteList = id => (dispatch, getState) => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'method': 'DELETE',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(deleteListSucceeded(id));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete list': error.message }));\n\t});\n};\n\nexport function deleteListSucceeded(id) {\n\treturn {\n\t\t'type': DELETE_LIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport const setListIsPublic = ({ id, is_public }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/lists/${id}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ is_public }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(setListIsPublicSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'set list is public': error.message }));\n\t});\n};\n\nexport function setListIsPublicSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': SET_LIST_IS_PUBLIC_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\n// this is initial state of lists and the list loading states\nconst initialListsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'things': {},\n};\n\n// 'state' here is global state\nexport const getSearchTerm = state => {\n\treturn state.page.searchTerm;\n};\n\nexport const getLists = state => {\n\treturn Object.keys(state.lists.things).map(id => {\n\t\treturn state.lists.things[id];\n\t});\n};\n\nexport const getFilteredLists = createSelector(\n\t[getLists, getSearchTerm],\n\t(lists, searchTerm) => {\n\t\treturn lists.filter(list => {\n\t\t\t// if no search term, return every list\n\t\t\tif (searchTerm === '') {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\treturn list.name.match(new RegExp(searchTerm, 'i'));\n\t\t});\n\t}\n);\n\nexport const getGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => list.is_public === is_public);\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\nexport const getFilteredPublicLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\treturn lists.filter(list => {\n\t\t\treturn list.is_public;\n\t\t});\n\t}\n);\n\nexport const getMyGroupedAndFilteredLists = createSelector(\n\t[getFilteredLists],\n\tlists => {\n\t\tconst grouped = {};\n\n\t\tLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = lists.filter(list => (list.created_by_id === store.getState().auth.user.id) && (list.is_public === is_public));\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\n// state here is the substate state.lists\n// the book uses 'items' for the list of things i.e. lists. items\n// as 'items' for us is a specific thing, we need another name for the set of entities to be displayed i.e. the lists themselves\n// so those are globalState.lists.things\n// i.e. state.things here\nexport default function lists(state = initialListsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialListsState, {});\n\t\t}\n\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\t\t\tlet lists = {};\n\n\t\t\tif (entities && entities.lists) {\n\t\t\t\tlists = entities.lists; // there is at least one list\n\t\t\t}\n\n\t\t\treturn updeep({ 'things': lists, 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase FETCH_LISTS_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_STARTED: {\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': true,\n\t\t\t\t'things': updeep.constant({}), // remove all existing lists\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FETCH_LIST_BY_SLUG_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase CREATE_LIST_STARTED: {\n\t\t\t// at present this does nothing, it's really just to track that the action happened\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase CREATE_LIST_SUCCEEDED: {\n\t\t\tconst list = action.payload.list;\n\t\t\treturn updeep({ 'things': { [list.id]: list } }, state);\n\t\t}\n\n\t\tcase DELETE_LIST_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tcase SET_LIST_IS_PUBLIC_SUCCEEDED: {\n\t\t\tconst listId = action.payload.id;\n\n\t\t\treturn updeep({ 'things': { [listId]: { 'is_public': action.payload.is_public } } }, state);\n\t\t\t// reminder of another way to update nested arrays\n\t\t\t/* const index = state.things.findIndex((list) => list.id === action.payload.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\treturn updeep.updateIn(`things.${index}.is_public`, action.payload.is_public, state);\n\t\t\t} \n\n\t\t\treturn state; // in case list was not found\n\t\t\t*/\n\t\t}\n\n\t\tcase CREATE_ITEM_SUCCEEDED: {\n\t\t\tconst item = action.payload.item;\n\n\t\t\tfunction addItem(items) {\n\t\t\t\treturn [].concat(items, item.id);\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${item.list}.items`, addItem, state);\n\t\t}\n\n\t\tcase DELETE_ITEM_SUCCEEDED: {\n\t\t\tfunction deleteItem(items) {\n\t\t\t\tconst itemIndex = items.findIndex((item) => item === action.payload.itemId); \n\t\t\t\tlet newItems = [].concat(items);\n\t\t\t\tnewItems.splice(itemIndex, 1);\n\t\t\t\treturn newItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${action.payload.listId}.items`, deleteItem, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","import {\n\tFILTER_LISTS,\n} from './lists';\n\n\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'searchTerm': '',\n};\n\nexport default function page(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FILTER_LISTS: {\n\t\t\treturn updeep({ 'searchTerm': action.payload.searchTerm }, state);\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","// index.js\n\n// import the partial reducers\nimport { combineReducers } from 'redux';\nimport errors from './errors';\nimport auth from './auth';\nimport page from './page';\nimport lists from './lists';\nimport items from './items';\n// by importing the actual reducer as the default, the state of each is initialised\n\nexport default combineReducers({\n\t'errors': errors,\n\t'auth': auth,\n\t'page': page,\n\t'lists': lists,\n\t'items': items,\n});\n","// store.js\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules/rootReducer';\n\nconst store = createStore(\n\trootReducer, \n\t// inititalState, // by not supplying initial state, we tell the store to use the defaults specified in the reducer\n\tcompose(applyMiddleware(thunk), \n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./modules/rootReducer', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../modules/auth';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser(this.props.history);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<form className=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\t\t<input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n\t\t\t\t\t\t<button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(e);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's handleSubmit\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email address to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.registration && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.registration}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Shown after successful registration of a new user\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Welcome extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Welcome to My Top Tens</h2>\n\t\t\t\t<p>Your account has been created. Click the link below to login.</p>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/login\" className=\"nav-link\">Login</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nWelcome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps)(Welcome);\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={this.handleSubmit.bind(this)}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange.bind(this) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.authentication && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.authentication}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","// List of all lists\n\nimport React from 'react';\nimport { Container, Row } from 'reactstrap';\n\nconst ListsList = ({ children, is_public, headerText }) => {\n\treturn (\n\t\t<Container className=\"lists-list\">\n\t\t\t{headerText && <Row>\n\t\t\t\t<h3 className=\"lists-list-name\">\n\t\t\t\t\t{headerText}\n\t\t\t\t</h3>\n\t\t\t</Row>}\n\t\t\t<Row>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default ListsList;\n","export default function findObjectByProperty({ parentObject, property, value }) {\n\t// e.g. find a list in the store based on its slug\n\t// it feels like there ought to be a smarter way to do this!\n\t// but this does work, and stops once the object is found\n\n\tconst keys = Object.keys(parentObject);\n\n\tfor (let i=0; i<keys.length; i++) {\n\t\tlet childObject = parentObject[keys[i]];\n\t\tif (childObject[property] === value) {\n\t\t\treturn childObject;\n\t\t}\n\t}\n\n\treturn;\n}\n","// check whether the user can perform actions on lists, items\n// items inherit permissions from their list\n\n// result depends on whether they are logged in:\n// whether they own the list:\n// whether the list is public\n\n// list may be identified by id (primary key) or by slug (provided by URL)\n// for viewing, we could trust the server that if a list is returned, it can be viewed.\n// but for editing, we need to check if the user created it\n\n// identifier should be like { 'slug': 'abc' } or { 'id': 'efg' } i.e. an object with one property\n\nimport store from '../store';\nimport findObjectByProperty from './findObjectByProperty';\n\nexport function canViewList(identifier) {\n\t// a list can be viewed if public or if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.lists.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canViewList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.is_public || (list.created_by_id === userId))) {\n\t\t\tcanViewList = true;\n\t\t}\n\t}\n\n\treturn canViewList;\n}\n\nexport function canEditList(identifier) {\n\t// a list can be edited if created by user\n\tconst property = Object.keys(identifier)[0];\n\tconst value = identifier[property];\n\tconst state = store.getState();\n\tconst lists = state.lists.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canEditList = false;\n\n\tif (Object.keys(lists).length > 0) {\n\t\tlet list = findObjectByProperty({ 'parentObject': lists, property, value });\n\n\t\tif (list && (list.created_by_id === userId)) {\n\t\t\tcanEditList = true;\n\t\t}\n\t}\n\n\treturn canEditList;\n}\n","// An individual list\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport { LIST_IS_PUBLIC_TEXTS } from '../constants';\n\nimport * as permissions from '../modules/permissions';\n\nconst ListSummary = props => {\n\tlet id=`select-${props.list.id}`;\n\tlet value = props.list.is_public ? 'Public' : 'Private';\n\tlet canEdit = permissions.canEditList({ 'id': props.list.id });\n\n\treturn (\n\t\t<Col sm=\"3\" md=\"4\" className=\"list-container\">\n\t\t\t<Link to={`/list/${props.list.slug}`}>\n\t\t\t\t<div className=\"list-header\">\n\t\t\t\t\t<div>{props.list.name}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"list-body\">{props.list.description}</div>\n\t\t\t</Link>\n\t\t\t<div className=\"list-status\">\n\t\t\t\t<label>Set list private/public status\n\t\t\t\t\t<select className=\"form-control\" value={value} onChange={onIsPublicChange} id={id}>\n\t\t\t\t\t\t{LIST_IS_PUBLIC_TEXTS.map(is_public => (\n\t\t\t\t\t\t\t<option key={is_public} value={is_public}>{is_public}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t{canEdit &&\n\t\t\t\t<button className=\"btn btn-danger\" onClick={onDeleteList}>Delete</button>\n\t\t\t}\n\t\t\t{props.showCreatedBy && \n\t\t\t\t<div className=\"list-created-by\">Created by: {props.list.created_by_username}</div>\n\n\t\t\t}\n\t\t\t\n\t\t</Col>\n\t);\n\n\tfunction onIsPublicChange(e) {\n\t\t// map from select options to true / false\n\t\tconst value = e.target.value === 'Public' ? true : false;\n\t\tprops.onIsPublicChange({ 'id': props.list.id, 'is_public': value });\n\t}\n\n\tfunction onDeleteList(e) {\n\t\tprops.onDeleteList({ 'id': props.list.id, 'name': props.list.name });\n\t}\n};\n\nexport default ListSummary;\n","// Page to display list of lists\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\nimport ListsList from '../components/ListsList';\nimport ListSummary from '../components/ListSummary';\nimport './ListsPage.scss';\n\nclass ListsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// which set of lists to view\n\t\t// if logged in, default my-lists\n\t\t// if not logged in, only show public-lists\n\t\tlet listset = 'public-lists';\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(this.props.location.search);\n\t\t\tlistset = urlParams.get('listset') || 'my-lists';\n\t\t}\n\n\t\tthis.setListSetURL(listset);\n\n\t\tthis.state = {\n\t\t\t'selectedTab': listset,\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// user has just logged out\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': 'public-lists',\n\t\t\t});\n\n\t\t\tthis.setListSetURL('public-lists');\n\t\t}\n\t}\n\n\tonSearch = e => {\n\t\tthis.props.onSearch(e.target.value);\n\t}\n\n\tonAddList = () => {\n\t\tthis.props.history.push('/newlist');\n\t}\n\n\trenderPublicLists() {\n\t\tconst { publicLists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\treturn (\n\t\t\t<ListsList headerText=\"All public lists\">\n\t\t\t\t{publicLists.map(list => \n\t\t\t\t\t<ListSummary\n\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\tshowCreatedBy={true}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ListsList>\n\t\t);\n\t}\n\n\trenderMyLists() {\n\t\tconst { myLists, onIsPublicChange, onDeleteList } = this.props;\n\n\t\treturn Object.keys(myLists).map((is_public, index) => {\n\t\t\tconst listsByIsPublic = myLists[is_public];\n\t\t\tlet headerText = is_public === 'true' ? 'My public lists' : 'My private lists';\n\n\t\t\treturn (\n\t\t\t\t<div key={index}>\n\t\t\t\t\t{(listsByIsPublic.length > 0) && (\n\t\t\t\t\t\t<ListsList is_public={is_public} headerText={headerText}>\n\t\t\t\t\t\t\t{listsByIsPublic.map(list => \n\t\t\t\t\t\t\t\t<ListSummary\n\t\t\t\t\t\t\t\t\tkey={list.id}\n\t\t\t\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\t\t\t\tonIsPublicChange={onIsPublicChange}\n\t\t\t\t\t\t\t\t\tonDeleteList={onDeleteList}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ListsList>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\tsetListSetURL(listset) {\n\t\tlet URL = `${this.props.location.pathname}?listset=${listset}`;\n\t\tthis.props.history.push(URL);\n\t}\n\n\thandleTabClick = (e) => {\n\t\tif (this.state.selectedTab !== e.target.id) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': e.target.id,\n\t\t\t});\n\n\t\t\tthis.setListSetURL(e.target.id);\n\t\t}\n\t}\n\n\trenderTabs() {\n\t\treturn (\n\t\t\t<ul><li>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.state.selectedTab === 'my-lists'? 'selected' : ''}\n\t\t\t\t\tid='my-lists'\n\t\t\t\t\tonClick={this.handleTabClick}>My lists\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.state.selectedTab === 'public-lists'? 'selected' : ''}\n\t\t\t\t\tid='public-lists'\n\t\t\t\t\tonClick={this.handleTabClick}>Public lists\n\t\t\t\t</span>\n\t\t\t</li></ul>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet listsList;\n\n\t\tif (this.state.selectedTab === 'my-lists') {\n\t\t\tlistsList = this.renderMyLists();\n\t\t} else if (this.state.selectedTab === 'public-lists') {\n\t\t\tlistsList = this.renderPublicLists();\n\t\t}\n\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"lists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"lists-list\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col sm=\"6\">\n\t\t\t\t\t\t\t<div className=\"lists-list-header\">\n\t\t\t\t\t\t\t\t<input className=\"form-control\"\n\t\t\t\t\t\t\t\t\tonChange={this.onSearch}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{this.props.canCreateList && (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.onAddList}\n\t\t\t\t\t\t\t\t\t>+ New list</button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t{this.props.auth.isAuthenticated && <div className=\"tabs\">\n\t\t\t\t\t{this.renderTabs()}\n\t\t\t\t\t<div className=\"clearing\"></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"lists\">\n\t\t\t\t\t{listsList}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ListsPage);\n","import React from 'react';\n\n// onClick should dismiss the condition that caused the FlashMessage to be displayed\n// it is the responsibility of the component that triggers the FlashMessage, to also provide the way to dismiss it\nexport default function FlashMessage({ message, type, onClick }) {\n\treturn (\n\t\t<div className={`flash-error ${type}`}>\n\t\t\t<span>{message}</span>\n\t\t\t<button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={onClick}>\n\t\t\t  <span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","// Home.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport ListsPage from './ListsPage';\n\nimport * as lists from '../modules/lists';\nimport { getFilteredPublicLists, getMyGroupedAndFilteredLists } from '../modules/lists';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass Home extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(lists.fetchLists());\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user's status has changed, refresh Lists\n\t\tif(prevProps.auth.user.token !== this.props.auth.user.token){\n\t\t\tthis.props.dispatch(lists.fetchLists());\n\t\t}\n\t}\n\n\tonSearch = searchTerm => {\n\t\tthis.props.dispatch(lists.filterLists(searchTerm));\n\t}\n\n\tonIsPublicChange = ({ id, is_public }) => {\n\t\tthis.props.dispatch(lists.setListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteList = ({ id, name }) => {\n\t\tif (confirm(`Are you sure you want to delete the list ${name}`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t  this.props.dispatch(lists.deleteList(id));\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<ListsPage\n\t\t\t\t\tauth={this.props.auth}\n\t\t\t\t\tmyLists={this.props.myLists}\n\t\t\t\t\tpublicLists={this.props.publicLists}\n\t\t\t\t\tcanCreateList={this.props.auth.canCreateList}\n\t\t\t\t\tonSearch={this.onSearch}\n\t\t\t\t\tonCreateList={this.onCreateList}\n\t\t\t\t\tonIsPublicChange={this.onIsPublicChange}\n\t\t\t\t\tonDeleteList={this.onDeleteList}\n\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'publicLists': PropTypes.array.isRequired,\n\t'myLists': PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.lists.isLoading,\n\t'publicLists': getFilteredPublicLists(state),\n\t'myLists': getMyGroupedAndFilteredLists(state),\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { createList } from '../modules/lists';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nimport ValidatedForm from '../components/ValidatedForm.js';\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n\nclass CreateList extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'name': '',\n\t\t\t'description': '',\n\t\t};\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`item${i}_name`] = '';\n\t\t\tthis.state[`item${i}_description`] = '';\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tcancel(e) {\n\t\tthis.props.history.push('/');\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tlet newList = {\n\t\t\t'name': this.state.name,\n\t\t\t'description': this.state.description,\n\t\t\t'items': [],\n\t\t};\n\n\t\t\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tif (this.state[`item${i}`] !== '') {\n\t\t\t\tconst newItem = {\n\t\t\t\t\t'name': this.state[`item${i}_name`],\n\t\t\t\t\t'description': this.state[`item${i}_description`],\n\t\t\t\t\t'order': i,\n\t\t\t\t};\n\t\t\t\tnewList.items.push(newItem);\n\t\t\t}\n\t\t}\n\n\t\tthis.onCreateList(newList);\n\t}\n\n\tonCreateList = (newList) => {\n\t\tthis.props.dispatch(createList(newList, this.props.history));\n\t}\n\n\n\tcomponentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user cannot create a list, redirect to Home\n\t\tif(!this.props.auth.canCreateList){\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderItemInputs() {\n\t\tlet elements = [];\n\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\telements.push(\n\t\t\t\t<div className=\"form-group\" key={`item${i}`}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<h3>Item {i}</h3>\n\t\t\t\t\t\t\t<Label for={`item${i}_name`}>Name</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_name`}\n\t\t\t\t\t\t\t\tid={`item${i}_name`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_name`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Label for={`item${i}_description`}>Description</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`item${i}_description`}\n\t\t\t\t\t\t\t\tid={`item${i}_description`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`item${i}_description`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>);\n\t\t}\n\t\treturn elements;\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<h2>Create a new list</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"name\">Name</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.name }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Name is required</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Description</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.description }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the list description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t{this.renderItemInputs()}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSave list\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.lists && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.lists}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nCreateList.propTypes = {\n\t//'createList': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n});\n\nexport default connect(mapStateToProps)(withRouter(CreateList));\n","// An input or textarea that can be edited by clicking on it\n// It can be blank, or required\n// note custom property data-state which is the name of the property in this.state\n// Can be used with keyboard only\n// It is a regular form with cancel, submit. This allows keyboard navigation but the form stays open on blur - otherwise cancel would not be possible with keyboard.\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Row, Col, Label, Input } from 'reactstrap';\nimport './EditableTextField.scss';\n\nclass EditableTextField extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'showInput': false,\n\t\t\t'isValidated': false,\n\t\t\t'initialValue': '',\n\t\t\t'type': props.textarea ? 'textarea' : 'input',\n\t\t};\n\n\t\t//this.showInput = this.showInput.bind(this);\n\t}\n\n\tonKeyUp(e) {\n\t\tvar code = e.keyCode || e.which;\n\t\tif(code === 13) { //13 is the enter keycode\n\t\t\t//Do stuff in here\n\t\t\tthis.showInput(e);\n\t\t}\n\t}\n\n\tshowInput(e) {\n\t\tconst isPlaceholder = e.target.classList.contains('placeholder');\n\n\t\tif (!isPlaceholder) {\n\t\t\tthis.setState({\n\t\t\t\t'initialValue': e.target.textContent,\n\t\t\t});\n\t\t}\n\t\tthis.toggleInput();\n\t}\n\n\ttoggleInput() {\n\t\tconst newShowInputValue = !this.state.showInput;\n\n\t\t// optionally, tell the parent component whether the field is being edited\n\t\tif (typeof this.props.isEditing === 'function') {\n\t\t\tthis.props.isEditing(newShowInputValue);\n\t\t}\n\n\t\tthis.setState({\n\t\t\t'showInput': newShowInputValue,\n\t\t});\n\t}\n\n\tcancel = () => {\n\t\t// restore the initial value of the field as though the user had just entered it\n\t\tconst fakeEvent = {\n\t\t\t'target': {\n\t\t\t\t'dataset': { 'state': this.props['data-state'] },\n\t\t\t\t'value': this.state.initialValue,\n\t\t\t}\n\t\t};\n\t\tthis.props.handleInputChange(fakeEvent);\n\t\tthis.toggleInput();\n\t}\n\n\tvalidate = () => {\n\t\t// custom validation for consistency with other forms\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst elem = formEl.querySelector(this.state.type);\n\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\tif (!elem.validity.valid) {\n\t\t\tlet message = elem.validationMessage;\n\t\t\terrorLabel.textContent = message;\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\terrorLabel.textContent = '';\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\t// the user has typed a new value and the parent component should be notified\n\n\t\tconst inputElement = e.target.querySelector(this.state.type);\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.handleNewValue(inputElement);\n\t\t\tthis.toggleInput();\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t}\n\n\trender() {\n\t\tlet type = 'text';\n\t\tif (this.props.textarea) {\n\t\t\ttype = 'textarea';\n\t\t}\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (this.props.className) {\n\t\t\tclassNames = [...this.props.className];\n\t\t\tdelete this.props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\tconst showInput = this.state.showInput;\n\t\tlet item;\n\n\t\tif(this.props.canEdit) {\n\t\t\tif (showInput) {\t\t\t\n\t\t\t\titem = (\n\t\t\t\t\t<form\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tonSubmit={this.handleSubmit.bind(this)}\n\t\t\t\t\t\tclassName={classNames}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<Label for={this.props.id}>{this.props.label}</Label>\n\t\t\t\t\t\t\t\t\t<Input autoFocus\n\t\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\t\tname={this.props.id}\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\trequired={this.props.required}\n\t\t\t\t\t\t\t\t\t\tdata-state={this.props['data-state']}\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props['data-entityid']}\n\t\t\t\t\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\t\t\t\t\tonChange={this.props.handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tDone\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</form>);\n\t\t\t} else {\n\t\t\t\tif (this.props.value !== '') {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tonClick={this.showInput.bind(this)}\n\t\t\t\t\t\t\t onKeyUp={this.onKeyUp.bind(this)}\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t>{this.props.value}</span>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"placeholder\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\tonClick={this.showInput.bind(this)}\n\t\t\t\t\t\t\tonKeyUp={this.onKeyUp.bind(this)}\n\t\t\t\t\t\t>{this.props.placeholder}</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.props.value !== '') {\n\t\t\t\titem = (\n\t\t\t\t\t<span>{this.props.value}</span>\n\t\t\t\t);\n\t\t\t} else {\n\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"editable-text-field\">\n\t\t\t\t{ item }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditableTextField;\n","// An individual item\n// It is a stateful component so that the description field can be shown only if there is a name defined.\n\nimport store from '../store';\n\nimport React, { Component } from 'react';\nimport { Col } from 'reactstrap';\nimport EditableTextField from './EditableTextField.js';\nimport './Item.scss';\n\nclass Item extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\t'isEditingName': false,\n\t\t};\n\t}\n\n\tsetIsEditingName(showInput) {\n\t\tthis.setState({\n\t\t\t'isEditingName': showInput,\n\t\t});\n\t}\n\n\trender() {\n\t\tlet showDescription = true;\n\t\tif (this.props.item.name === '') {\n\t\t\tshowDescription = false;\n\t\t} else if (this.state.isEditingName && store.getState().items.things[this.props.item.id] && store.getState().items.things[this.props.item.id].name === '') {\n\t\t\tshowDescription = false;\n\t\t}\n\n\t\treturn (\n\t\t\t<Col className=\"item-container\">\n\t\t\t\t<div className=\"item-header\">\n\t\t\t\t\t<span className=\"order\">{this.props.item.order}:</span><EditableTextField\n\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\tname={`${this.props.item.order}_name`}\n\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\tplaceholder=\"Click here to add an item\"\n\t\t\t\t\t\tdata-state={`${this.props.item.order}_name`}\n\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\tid={`${this.props.item.order}_name`} // id of the html element\n\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\tisEditing={this.setIsEditingName.bind(this)}\n\t\t\t\t\t\tvalue={this.props.item.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{showDescription &&\n\t\t\t\t\t<div className=\"item-body\">\n\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\t\tname={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tplaceholder=\"Click here to add a description\"\n\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\tdata-state={`${this.props.item.order}_description`}\n\t\t\t\t\t\t\tdata-entityid={this.props.item.id} // database id of the item\n\t\t\t\t\t\t\tid={`${this.props.item.order}_description`} // id of the html element\n\t\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\t\tvalue={this.props.item.description}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Col>\n\t\t);\n\t}\n};\n\nexport default Item;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\n\nimport * as itemsReducer from '../modules/items';\n\nimport { MAX_ITEMS_IN_LIST } from '../constants';\n//import './ItemsPage.scss';\nimport Item from './Item';\n\nclass ItemsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\n\t\t// set up the state to hold each item's name and description\n\t\t// coded by order\n\t\t// this is not elegant but keeps state flat\n\t\tfor (let i=1; i<= MAX_ITEMS_IN_LIST; i++) {\n\t\t\tthis.state[`${i}_name`] = '';\n\t\t\tthis.state[`${i}_description`] = '';\n\t\t}\n\n\t\t// fill in whatever items exist\n\t\tconst items = this.props.items;\n\n\t\tObject.keys(items).forEach((key) => {\n\t\t\tif (items[key].order && items[key].order <= MAX_ITEMS_IN_LIST) {\n\t\t\t\tconst order = items[key].order;\n\n\t\t\t\tthis.state[`${order}_id`] = items[key].id;\n\t\t\t\tthis.state[`${order}_name`] = items[key].name;\n\t\t\t\tthis.state[`${order}_description`] = items[key].description;\n\t\t\t}\n\t\t});\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst itemId = element.dataset.entityid;\n\n\t\t// the item's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(itemsReducer.updateItem(itemId, propertyName, value));\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewItemForm': !this.state.showNewItemForm });\n\t}\n\n\trenderItemsList() {\n\t\tlet elements = [];\n\t\tfor (let i=1; i<=MAX_ITEMS_IN_LIST; i++) {\n\t\t\tconst name = this.state[`${i}_name`];\n\t\t\tconst canEdit = this.props.canEdit;\n\t\t\tif (name || canEdit) {\n\t\t\t\telements.push(\n\t\t\t\t\t<Row key={`item${i}`}>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\tkey={`item${i}`}\n\t\t\t\t\t\t\t\titem={{\n\t\t\t\t\t\t\t\t\t'id': this.state[`${i}_id`],\n\t\t\t\t\t\t\t\t\t'order': i,\n\t\t\t\t\t\t\t\t\t'name': name,\n\t\t\t\t\t\t\t\t\t'description': this.state[`${i}_description`],\n\t\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\tlist={this.props.list}\n\t\t\t\t\t\t\t\tcanEdit={canEdit}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"items-list\">\n\t\t\t\t{this.renderItemsList()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(ItemsPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport EditableTextField from '../components/EditableTextField.js';\nimport ItemsPage from '../components/ItemsPage';\n\nimport * as lists from '../modules/lists';\nimport * as permissions from '../modules/permissions';\nimport formatErrorMessages from '../modules/formatErrorMessages';import isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport { sortedItems } from '../modules/items';\n\nimport './ListDetails.scss';\n\n\nclass ListDetails extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\t// to start with all we know is the slug. We have to find the list id, and then the list details and items can be loaded\n\t\tconst slug = props.match.params.slug;\n\n\t\tthis.state = {\n\t\t\t// find the list slug from the url\n\t\t\tslug,\n\t\t};\n\n\t\tprops.dispatch(lists.fetchListBySlug(slug));\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst listId = element.dataset.entityid;\n\n\t\t// the list field to update is coded in the 'state' data e.g. 'list_name'\n\t\t// we want to keep item name and list name clearly separate\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(lists.updateList(listId, propertyName, value));\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.isLoading && !this.props.isLoading) {\n\t\t\t// just finished loading; need to check if user should view this list\n\t\t\tthis.setState({\n\t\t\t\t'canView': permissions.canViewList({ 'slug': this.state.slug }),\n\t\t\t\t'canEdit': permissions.canEditList({ 'slug': this.state.slug }),\n\t\t\t\t'list_name': this.props.list.name,\n\t\t\t\t'list_description': this.props.list.description,\n\t\t\t});\n\t\t}\n\t}\n\n\trenderItemsPage() {\n\t\treturn <div>\n\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>)}\n\t\t\t{this.props.list && (\n\t\t\t\t<div>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"list-name\">\n\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tname={'list_name'}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a name for the list\"\n\t\t\t\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\t\t\t\tdata-state={'list_name'} // this.state property\n\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\tid='list_name' // id of the html element\n\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\tvalue={this.state.list_name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"list-description\">\n\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\tname={'list_description'}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a description for the list\"\n\t\t\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\t\t\tdata-state={'list_description'} // this.state property\n\t\t\t\t\t\t\t\t\tdata-entityid={this.props.list.id} // database id of the item\n\t\t\t\t\t\t\t\t\tid='list_description' // id of the html element\n\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\tvalue={this.state.list_description}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{this.props.items && (\n\t\t\t\t\t\t\t<ItemsPage\n\t\t\t\t\t\t\t\titems={this.props.items}\n\t\t\t\t\t\t\t\tlist={this.props.list.id}\n\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>;\n\t}\n\n\t///////////////\n\n\trender() {\n\t\tlet content;\n\n\t\tif (this.state.canView) {\n\t\t\tcontent = this.renderItemsPage();\n\t\t} else {\n\t\t\tcontent = <p>Either this list does not exist or you do not have permission to view it</p>;\n\t\t}\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{ content }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nListDetails.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'lists': PropTypes.object.isRequired,\n\t'items': PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst lists = state.lists.things;\n\tconst list = lists[Object.keys(lists)[0]];\n\n\treturn ({\n\t\t'auth': state.auth,\n\t\t'errors': state.errors,\n\t\t'isLoading': state.lists.isLoading,\n\t\t'lists': lists,\n\t\t'list': list,\n\t\t'items': sortedItems(state),\n\t});\n};\n\nexport default connect(mapStateToProps)(withRouter(ListDetails));\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Account management</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/changepassword\" className=\"nav-link\">Change password</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps,)(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass ForgotPassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.forgotPasswordEmailNotSent());\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.dispatch(auth.forgotPassword(user));\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) &&\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>}\n\t\t\t\t<h2>Forgot your password?</h2>\n\t\t\t\t<p>Enter your email address. A reset password link will be emailed to you.</p>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.email && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.email}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"valid-feedback\">If the address {this.state.email} is associated with an account, an email has been sent. If you don't see it within a few minutes, please check your junk mail folder.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'forgotPassword': auth.forgotPassword,\n\t'forgotPasswordEmailNotSent': auth.forgotPasswordEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { changePassword, passwordNotChanged } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass ChangePassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'old_password': '',\n\t\t\t'new_password': '',\n\t\t\t'new_password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconsole.log('submit changePassword');\n\t\tconst data = {\n\t\t\t'old_password': this.state.old_password,\n\t\t\t'new_password1': this.state.new_password,\n\t\t\t'new_password2': this.state.new_password_confirm\n\t\t};\n\n\t\tthis.props.changePassword(data, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t\t/* if(nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\t'errors': nextProps.errors\n\t\t\t});\n\t\t} */\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Change your password</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'new_password',\n\t\t\t\t\t'input2': 'new_password_confirm',\n\t\t\t\t\t'message': 'New passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"old_password\">Old password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"old_password\"\n\t\t\t\t\t\t\t\t\tid=\"old_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.old_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your old password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password\">New password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password_confirm\">Confirm your new password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tChange password now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.changePassword && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.changePassword}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t      {this.props.auth.changePasswordComplete && (<div className=\"valid-feedback\">Your new password has been saved</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nChangePassword.propTypes = {\n\t'changePassword': PropTypes.func.isRequired,\n\t'passwordNotChanged': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ changePassword, passwordNotChanged })(withRouter(ChangePassword));\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport { setCurrentUser, getUserInfo, logoutUser, getAuthToken } from '../modules/auth';\n\nimport Navbar from '../components/Navbar';\nimport Register from '../components/Register';\nimport Welcome from '../components/Welcome';\nimport Login from '../components/Login';\nimport Home from '../containers/Home';\nimport CreateList from '../containers/CreateList';\nimport ListDetails from '../containers/ListDetail';\nimport Account from '../components/Account';\nimport ForgotPassword from '../components/ForgotPassword';\nimport ChangePassword from '../components/ChangePassword';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password loads the bootstrap css from static/bootstrap\n\n// check if user is already logged in\nif(getAuthToken()) {\n\tstore.dispatch(setCurrentUser(localStorage.jwtToken));\n\tstore.dispatch(getUserInfo());\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.jwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\t\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t\t<Route exact path=\"/newlist\" component={ CreateList } />\n\t\t\t\t\t\t\t<Route exact path=\"/list/:slug\" component={ ListDetails } />\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/welcome\" component={ Welcome } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t<Route exact path=\"/changepassword\" component={ ChangePassword } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./containers/App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}
{"version":3,"sources":["modules/errors.js","modules/formatErrorMessages.js","modules/fetchAPI.js","modules/isEmpty.js","modules/auth.js","modules/page.js","constants/index.js","modules/topTenItem.js","modules/topTenList.js","modules/rootReducer.js","store.js","components/Search.js","components/Navbar.js","components/ValidatedForm.js","components/Register.js","components/Welcome.js","components/Login.js","components/FlashMessage.js","components/Loading.js","components/TopTenListsList.js","components/SetTopTenListIsPublic.js","modules/findObjectByProperty.js","modules/permissions.js","components/TopTenListSummary.js","components/Pagination.js","components/TopTenListsPage.js","containers/Home.js","containers/CreateTopTenList.js","components/EditableTextField.js","components/TopTenItem.js","components/TopTenItemsPage.js","components/OrganizerList.js","components/Organizer.js","containers/TopTenListDetail.js","components/Account.js","components/ForgotPassword.js","components/ChangePassword.js","components/Verified.js","containers/App.js","serviceWorker.js","index.js"],"names":["getErrors","error","type","payload","clearErrors","updeep","require","initialState","formatErrorMessages","errors","messageArray","Object","keys","forEach","key","push","map","item","join","fetchAPI","_ref","url","data","_ref$method","method","_ref$useAuth","useAuth","_ref$headers","headers","Authorization","concat","store","getState","auth","user","token","fetch","body","then","response","ok","contentType","get","includes","json","catch","Promise","reject","Error","message","text","html","page_type","status","isEmpty","value","undefined","length","trim","LOGOUT_USER_COMPLETE","setCurrentUser","dispatch","localStorage","setItem","setAuthToken","logoutUser","history","removeItem","logout user","getUserInfo","setUserInfo","username","email","id","emailVerified","email_verified","get user info","forgotPasswordEmailNotSent","forgotPassword","formData","FormData","name","append","sendPasswordResetEmail","passwordNotChanged","changePasswordComplete","confirmEmailNotSent","sendConfirmationEmail","console","log","isLoading","isAuthenticated","forgotPasswordEmailSent","resetPasswordComplete","confirmEmailSent","SEARCH_HOME_STARTED","SEARCH_HOME_SUCCEEDED","SEARCH_HOME_FAILED","SEARCH_HOME_CLEAR","searchHome","searchTerm","searchHomeStarted","results","fetch topTenLists","searchComplete","searchResults","TOPTENLIST_IS_PUBLIC_VALUES","MAX_TOPTENITEMS_IN_TOPTENLIST","CREATE_TOPTENITEM_SUCCEEDED","UPDATE_TOPTENITEM_SUCCEEDED","MOVE_TOPTENITEM_UP_SUCCEEDED","updateTopTenItem","topTenItemId","propertyName","Content-Type","JSON","stringify","defineProperty","updateTopTenItemSucceeded","update topTenItem","moveTopTenItemUp","topTenItems","move topTenItem up error ","moveTopTenItemDown","_ref2","topTenItem","things","topTenListId","topTenList_id","order","topTenItem_below_id","topTenList","initialTopTenItemsState","count","next","previous","organizerData","groupedTopTenItems","createSelector","state","topTenLists","topTenItemsByTopTenList","topTenItemsArray","i","objectSpread","parent_topTenItem","parentTopTenItem","find","childTopTenListId","RECEIVE_ENTITIES","FETCH_TOPTENLISTS_STARTED","FETCH_TOPTENLISTS_FAILED","FETCH_TOPTENLIST_DETAIL_STARTED","FETCH_TOPTENLIST_DETAIL_FAILED","CREATE_TOPTENLIST_STARTED","CREATE_TOPTENLIST_SUCCEEDED","DELETE_TOPTENLIST_SUCCEEDED","SET_TOPTENLIST_IS_PUBLIC_SUCCEEDED","UPDATE_TOPTENLIST_SUCCEEDED","RECEIVE_ORGANIZER_DATA","FETCH_ORGANIZER_DATA_STARTED","FETCH_ORGANIZER_DATA_FAILED","topTenItemSchema","schema","Entity","topTenListSchema","receiveEntities","entities","fetchTopTenLists","arguments","listset","topLevelTopTenListsOnly","limit","offset","normalize","fetchTopTenListDetail","normalizedData","createTopTenList","create topTenList","updateTopTenList","fetchOrganizerData","created_by","updateTopTenListSucceeded","deleteTopTenList","deleteTopTenListSucceeded","delete topTenList","setTopTenListIsPublic","is_public","_ref3","setTopTenListIsPublicSucceeded","set topTenList is public","userId","fetch my topTenList names","initialTopTenListsState","getTopTenLists","getPublicTopTenLists","filter","getMyGroupedTopTenLists","grouped","getOrganizerTopTenLists","getSortedOrganizerTopTenLists","topTenListsArray","sort","a","b","localeCompare","getTopTenItemsForTopTenList","topTenListTopTenItems","childTopTenList","getParentTopTenItemAndTopTenList","parentTopTenList","combineReducers","action","toConsumableArray","constant","confirmEmailAlreadyVerified","page","_action$payload","omit","updateIn","update","description","modified_by","modified_at","newTopTenItems","topTenItemsObject","composeEnhancers","composeWithDevTools","createStore","rootReducer","applyMiddleware","thunk","Search","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","node","contains","target","closeDropdown","showDropdown","bind","assertThisInitialized","onFocus","document","addEventListener","removeEventListener","setState","_this2","react_default","createElement","className","result","Link","to","onClick","ref","Input","onChange","placeholder","Component","Navbar","onSearch","clearTimeout","searchTimeout","setTimeout","pageReducer","onLogout","preventDefault","prevState","authReducer","_this$props$auth","authLinks","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","src_components_Search","connect","withRouter","ValidatedForm","isValidated","customMessages","getCustomMessage","elem","validity","customError","validationMessage","typeMismatch","invalidKey","validate","formEl","ReactDOM","findDOMNode","formLength","checkValidity","errorLabel","parentNode","querySelector","nodeName","toLowerCase","valid","textContent","handleSubmit","onSubmit","checkFieldMatch","inputsmustmatch","input1Id","input1","input2Id","input2","input1Element","input2Element","HTMLElement","oninput","setCustomValidity","classNames","assign","noValidate","children","Register","password","password_confirm","handleInputChange","password1","password2","registerUser","nextProps","Container","ValidatedForm_ValidatedForm","Row","Col","md","lg","Label","for","required","minLength","pattern","registration","style","display","Welcome","Login","loginUser","authentication","FlashMessage","aria-hidden","Loading","Spinner","color","width","height","TopTenListsList","headerText","SetTopTenListIsPublic","isPublic","tooltip","dataset","ispublic","onChangeIsPublic","toptenlistid","data-toptenlistid","data-ispublic","title","findObjectByProperty","parentObject","property","childObject","canViewTopTenList","canEditTopTenList","canCreateTopTenList","TopTenListSummary","canEdit","permissions","sm","src_components_SetTopTenListIsPublic","onDeleteTopTenList","showCreatedBy","created_by_username","Pagination","pager","initialPage","currentPage","defaultPage","setPage","prevProps","pageNumber","_this$props","pageSize","getPager","totalPages","Math","min","onChangePage","totalTopTenItems","startPage","endPage","ceil","startIndex","endIndex","pages","Array","index","React","defaultProps","TopTenListsPage","onAddTopTenList","publicTopTenLists","components_TopTenListsList","src_components_TopTenListSummary","_this$props2","myTopTenLists","topTenListsByIsPublic","selectedTab","handleTabClick","renderMyTopTenLists","renderPublicTopTenLists","check","defaultChecked","handleTopLevelListsChange","renderTabs","src_components_Pagination","Home","topTenListReducer","confirm","setListSetURL","onCloseFlashMessage","URLSearchParams","location","search","handleTopLevelTopTenListsChange","_ref3$listset","topTenListset","_ref3$topLevelTopTenL","_ref3$currentPage","URL","pathname","components_Loading","src_components_TopTenListsPage","onCreateTopTenList","CreateTopTenList","newTopTenList","cancel","urlParams","parentTopTenItemId","parentTopTenItemName","parentTopTenListName","parentTopTenListId","newTopTenItem","elements","renderTopTenItemInputs","EditableTextField","fakeEvent","initialValue","toggleInput","showInput","overflowActive","textarea","expanded","onKeyUp","toggleMore","element","textElement","offsetHeight","scrollHeight","isOverflowActive","keyCode","which","classList","newShowInputValue","isEditing","inputElement","handleNewValue","showMoreButton","moreButtonText","tabIndex","react_markdown_default","escapeHtml","source","label","autoFocus","data-state","data-entityid","renderValue","Item","onCreateChildTopTenList","onMoveUp","onMoveTopTenItemUp","onMoveDown","onMoveTopTenItemDown","isEditingName","setIsEditingName","showDescription","canCreateChildTopTenList","canViewChildTopTenList","showUp","showDown","src_components_EditableTextField","TopTenItemsPage","topTenItemsReducer","entityid","split","toggleForm","showNewTopTenItemForm","components_TopTenItem","renderTopTenItemsList","OrganizerList","showTopTenItems","onSelectTopTenItem","onShowTopTenItems","childtoptenlistid","selectedTopTenItemOrder","parseInt","selectedTopTenListId","topTenItemOrganizerData","childTopTenListElm","isSelectedTopTenItem","topTenListOrganizerData","data-order","data-childtoptenlistid","isSelectedTopTenList","showTopTenItemsButtonText","renderTopTenItems","Organizer","componentDidUpdate","resetOrganizer","onClickOrganize","showOrganizer","scrollIntoView","onClickCancel","onClickDone","selectedTopTenItemChildTopTenListId","setParentTopTenItem","onSelectParentTopTenItem","indexOf","_this3","components_OrganizerList","controls","renderTopTenLists","TopTenListDetails","getTopTenListData","match","params","getOrganizerData","canView","topTenList_name","topTenList_description","showPrivacyWarning","privacyWarningText","breadcrumbs","src_components_Organizer","thisTopTenListTopTenItems","components_TopTenItemsPage","content","renderPage","ownProps","parentTopTenItemAndTopTenList","topTenItemReducer","Account","email_status","ForgotPassword","ChangePassword","old_password","new_password","new_password_confirm","new_password1","new_password2","changePassword","Verified","getItem","mytoptensJwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","window","hostname","navigator","serviceWorker","ready","unregister","render","src_containers_App","getElementById"],"mappings":"ijBAKaA,EAAY,SAAAC,GAExB,MAAO,CACNC,KANiB,aAOjBC,QAAWF,IAIAG,EAAc,WAC1B,MAAO,CACNF,KAZmB,iBAgBjBG,EAASC,EAAQ,IAEfC,EAAe,GCRNC,EAAA,SAAUC,GACxB,IAAIC,EAAe,GAanB,OAZAC,OAAOC,KAAKH,GAAQI,QAAQ,SAACC,GACD,kBAAhBL,EAAOK,GACjBJ,EAAaK,KAAKN,EAAOK,IAEzBL,EAAOK,GAAKE,IAAI,SAACC,GAChBP,EAAaK,KAAKE,OAKLP,EAAaQ,KAAK,MCnBpB,SAASC,EAATC,GAAgF,IAA5DC,EAA4DD,EAA5DC,IAAKC,EAAuDF,EAAvDE,KAAuDC,EAAAH,EAAjDI,cAAiD,IAAAD,EAAxC,MAAwCA,EAAAE,EAAAL,EAAjCM,eAAiC,IAAAD,KAAAE,EAAAP,EAAhBQ,eAAgB,IAAAD,EAAN,GAAMA,EAK9F,OAJID,IACHE,EAAQC,cAAR,SAAAC,OAAiCC,GAAMC,WAAWC,KAAKC,KAAKC,QAGtDC,MAAMf,EAAK,CAAEO,UAASJ,OAAUA,EAAQa,KAAQf,IACrDgB,KAAK,SAAAC,GAGL,GAAIA,EAASC,GAAI,CAChB,IAAMC,EAAcF,EAASX,QAAQc,IAAI,iBAAmB,GAE5D,OAAID,EAAYE,SAAS,oBACjBJ,EAASK,OAAOC,MAAM,SAAA5C,GAC5B,OAAO6C,QAAQC,OAAO,IAAIC,MAAM,iBAAmB/C,EAAMgD,YAIvDR,EAAYE,SAAS,aACjBJ,EAASW,OAAOZ,KAAK,SAAAa,GAC3B,MAAO,CACNC,UAAa,UACbD,KAAQA,KAEPN,MAAM,SAAA5C,GACR,OAAO6C,QAAQC,OAAO,IAAIC,MAAM,eAAiB/C,EAAMgD,iBAIzD,EAIA,OAAwB,MAApBV,EAASc,OACLP,QAAQC,OAAO,IAAIC,MAAM,mBAAqB3B,IAG9B,MAApBkB,EAASc,OACLP,QAAQC,OAAO,IAAIC,MAAM,0BAA4B3B,IAGtDkB,EAASK,OAAON,KAAK,SAAAC,GAM3B,OAAOO,QAAQC,OAAO,IAAIC,MAAMxC,EAAoB+B,SAIpDM,MAAM,SAAA5C,GAER,OAAO6C,QAAQC,OAAO,IAAIC,MAAM/C,EAAMgD,YCzDzC,IASeK,EATC,SAACC,GAChB,YACWC,IAAVD,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9B5C,OAAOC,KAAK2C,GAAOE,QAC/B,kBAAVF,GAA8C,IAAxBA,EAAMG,OAAOD,QCMhCE,EAAuB,uBA0B7B,IAqDMC,EAAiB,SAACzB,EAAO0B,GAErC,OAjED,SAAsB1B,GACrB2B,aAAaC,QAAQ,oBAAqB5B,GA+D1C6B,CAAa7B,GACN,CACNjC,KAnF8B,mBAoF9BC,QAAW,CAAEgC,WAUF8B,EAAa,SAACC,GAAD,OAAa,SAAAL,GAEtC,OADAA,EAASzD,KACFe,EAAS,CACfE,IAAO,4BACPG,OAAU,OACVE,SAAW,IACTY,KAAK,SAAAC,GAEP,OA/EDuB,aAAaK,WAAW,qBA+EhBN,EAbD,CACN3D,KAAQyD,MAaNrB,KAAK,cAGLO,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEoE,cAAe,0BAchCC,EAAc,kBAAM,SAACR,GACjC,OAAO1C,EAAS,CACfE,IAAO,0BACPG,OAAU,MACVE,SAAW,IACTY,KAAK,SAAAJ,GACP,OAAO2B,EAbkB,SAAA3B,GAC1B,MAAO,CACNhC,KA9G2B,gBA+G3BC,QAAW+B,GAUKoC,CAAY,CAC3BC,SAAYrC,EAAKqC,SACjBC,MAAStC,EAAKsC,MACdC,GAAMvC,EAAKuC,GACXC,cAAiBxC,EAAKyC,oBAErB9B,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAE4E,gBAAiB,iCAMlCC,EAA6B,SAAA1C,GACzC,MAAO,CACNjC,KAvI4C,mCAiJjC4E,EAAiB,SAACN,GAAD,OAAW,SAAAX,GACxCA,EAASzD,KACTyD,EAbO,CACN3D,KAvI4C,mCAqJ7C,IAAI6E,EAAY,IAAIC,SAEpB,IAAI,IAAIC,KAAQT,EACfO,EAASG,OAAOD,EAAMT,EAAMS,IAG7B,OAAO9D,EAAS,CACfE,IAAO,oCACPC,KAAQyD,EACRvD,OAAU,OACVE,SAAW,IACTY,KAAK,SAAAC,GACN,OAAOsB,EArBF,CACN3D,KAlJwC,iCAuKtC2C,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEmF,uBAA0BlF,EAAMgD,eAqCjDmC,EAAqB,SAAAjD,GACjC,MAAO,CACNjC,KA7MkC,yBAiNvBmF,EAAyB,SAAClD,GACtC,MAAO,CACNjC,KAlNsC,6BAwN3BoF,EAAsB,SAAAnD,GAClC,MAAO,CACNjC,KAvNoC,2BAyOzBqF,EAAwB,kBAAM,SAAC1B,GAI3C,OAHAA,EAASzD,KACTyD,EArBO,CACN3D,KAvNoC,2BA6O9BiB,EAAS,CACfE,IAAO,iCACPG,OAAU,OACVE,SAAW,IACTY,KAAK,SAAAC,GACP,MAAyB,4BAArBA,EAASU,QACLY,EAvBF,CACN3D,KA5NgC,uBAmPA,2BAArBqC,EAASU,QACZY,EAnBF,CACN3D,KAjO4C,wCAkPrC,IAGL2C,MAAM,SAAA5C,GACRuF,QAAQC,IAAI,+BAAgCxF,GAE5C,OAAO4D,EAAS7D,EAAU,CAAEuF,sBADZ,0HAOdlF,EAASC,EAAQ,IAEfC,EAAe,CACpBmF,WAAa,EACbC,iBAAmB,EACnBC,yBAA2B,EAC3BC,uBAAyB,EACzBR,wBAA0B,EAC1BS,kBAAoB,EACpB5D,KAAQ,IC1RI6D,EAAsB,sBACtBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAAoB,oBAgC1B,SAASC,EAAWC,GAC1B,OAAO,SAACvC,EAAU7B,GAEjB,IAAIoE,GAA6B,KAAfA,EACjB,OAAOvC,EATF,CACN3D,KAAQgG,IAWRrC,EAnCK,SAA2BuC,GACjC,MAAO,CACNlG,KAAQ6F,EACR5F,QAAW,CAAEiG,eAgCJC,CAAkBD,IAG3B,IAAI1E,GAAU,EAMd,OAJIM,IAAWC,KAAKC,KAAKC,QACxBT,GAAU,GAGJP,EAAS,CACfE,IAAA,sCAAAS,OAA6CsE,GAC7C5E,OAAU,MACVE,QAAWA,IACTY,KAAK,SAAAC,GACP,OAAOsB,GA1CmByC,EA0CU/D,EAAS+D,QAxCxC,CACNpG,KAAQ8F,EACR7F,QAAW,CAAEmG,cAJf,IAA6BA,IA2CxBzD,MAAM,SAAA5C,GAGR,OAFA4D,EAnCK,CACN3D,KAAQ+F,IAoCApC,EAAS7D,EAAU,CAAEuG,oBAAqBtG,EAAMgD,cAO1D,IAAI5C,EAASC,EAAQ,IAEfC,EAAe,CACpB6F,WAAc,GACdI,gBAAkB,EAClBC,cAAiB,gCC3ELC,EAA8B,EAAC,GAAO,GACtCC,EAAgC,WCoBhCC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA+B,+BAqCrC,IAAMC,GAAmB,SAACC,EAAcC,EAAc1D,GAA7B,OAAuC,SAAAM,GAGtE,OAAO1C,EAAS,CACfE,IAAA,8BAAAS,OAAqCkF,EAArC,KACApF,QAAW,CAAEsF,eAAgB,oBAC7B5F,KAAQ6F,KAAKC,UAALzG,OAAA0G,EAAA,EAAA1G,CAAA,GAAkBsG,EAAe1D,IACzC/B,OAAU,QACVE,SAAW,IACTY,KAAK,SAAAC,GACP,OAAOsB,EAMF,SAAmCtB,GACzC,MAAO,CACNrC,KAAQ2G,EACR1G,QAAWoC,GATK+E,CAA0B/E,MACxCM,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEuH,oBAAqBtH,EAAMgD,eAalD,IAAMuE,GAAmB,SAAApG,GAAA,IAAG4F,EAAH5F,EAAG4F,aAAH,OAAsB,SAAAnD,GACrD,OAAO1C,EAAS,CACfE,IAAA,8BAAAS,OAAqCkF,EAArC,YACApF,QAAW,CAAEsF,eAAgB,oBAC7B1F,OAAU,QACVE,SAAW,IACTY,KAAK,SAAAC,GACP,OAAOsB,EAwBD,CACN3D,KAAQ,+BACRC,QAAW,CACVsH,YA3ByClF,OACxCM,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAE0H,4BAA6BzH,EAAMgD,eAIpD0E,GAAqB,SAAAC,GAAA,IAAGZ,EAAHY,EAAGZ,aAAH,OAAsB,SAAAnD,GAGvD,IAAMgE,EAAa9F,GAAMC,WAAW6F,WAAWC,OAAOd,GAGhDe,EAAeF,EAAWG,cAG1BC,EAAQJ,EAAWI,MAGnBC,EAAsBnG,GAAMC,WAAWmG,WAAWL,OAAOC,GAAcF,WAAWI,GAExFpE,EAAS2D,GAAiB,CAAER,aAAgBkB,OAc7C,IAAI7H,GAASC,EAAQ,IAEf8H,GAA0B,CAC/B1C,WAAa,EACbzF,MAAS,KACToI,MAAS,KACTC,KAAQ,KACRC,SAAY,KACZT,OAAU,GACVU,cAAiB,IASLC,GAAqBC,YACjC,CAJsC,SAAAC,GAAK,OAAIA,EAAMd,WAAWW,eACjC,SAAAG,GAAK,OAAIA,EAAMR,WAAWK,gBAIzD,SAACf,EAAamB,GACb,IAAIC,EAA0B,GAqC9B,OAlCAlI,OAAOC,KAAKgI,GAAa5H,IAAI,SAAA+G,GAK5B,IAJA,IAAMI,EAAaS,EAAYb,GAE3Be,EAAmB,GAEdC,EAAE,EAAGA,EAAEZ,EAAWN,WAAWpE,OAAQsF,IAAK,CAClD,IAAIlB,EAAUlH,OAAAqI,EAAA,EAAArI,CAAA,GAAQ8G,EAAYU,EAAWN,WAAWkB,KAEhC,KAApBlB,EAAW5C,MACd6D,EAAiB/H,KAAK8G,GAIxBgB,EAAwBV,EAAW1D,IAAMqE,IAI1CnI,OAAOC,KAAKgI,GAAa5H,IAAI,SAAA+G,GAC5B,IAAMI,EAAaS,EAAYb,GAE/B,GAAII,EAAWc,kBAAmB,CACjC,IAAMC,EAAmBzB,EAAYU,EAAWc,mBAEhD,GAAIC,EAIqBL,EAAwBK,EAAiBlB,eAC9BmB,KAAK,SAAAtB,GAAU,OAAIA,EAAWI,QAAUiB,EAAiBjB,QACjFmB,kBAAoBjB,EAAW1D,MAKtCoE,ICtKF,IAAMQ,GAAmB,mBACnBC,GAA4B,4BAC5BC,GAA2B,2BAC3BC,GAAkC,kCAClCC,GAAiC,iCACjCC,GAA4B,4BAC5BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAAqC,qCACrCC,GAA8B,8BAE9BC,GAAyB,yBACzBC,GAA+B,+BAC/BC,GAA8B,8BAErCC,GAAmB,IAAIC,IAAOC,OAAO,aAAc,CACxDjC,WAAc,CAAC,sBAEVkC,GAAmB,IAAIF,IAAOC,OAAO,aAAc,CACxDvC,WAAc,CAACqC,MAGhB,SAASI,GAAgBC,GACxB,MAAO,CACNrK,KAAQmJ,GACRlJ,QAAWoK,GAgBN,SAASC,KAA2E,IAAApJ,EAAAqJ,UAAAhH,OAAA,QAAAD,IAAAiH,UAAA,GAAAA,UAAA,GAAJ,GAApDC,EAAwDtJ,EAAxDsJ,QAASC,EAA+CvJ,EAA/CuJ,wBAAyBC,EAAsBxJ,EAAtBwJ,MAAOC,EAAezJ,EAAfyJ,OAC3E,OAAO,SAAChH,EAAU7B,GACjB6B,EAbM,CACN3D,KAAQoJ,KAcR,IAAI5H,GAAU,EAEVM,IAAWC,KAAKC,KAAKC,QACxBT,GAAU,GAGX,IAAIL,EAAG,+BAiBP,OAfIsJ,IACHtJ,GAAO,eAGJqJ,IACHrJ,GAAG,YAAAS,OAAgB4I,IAGhBE,IACHvJ,GAAG,UAAAS,OAAc8I,IAGdC,IACHxJ,GAAG,WAAAS,OAAe+I,IAEZ1J,EAAS,CACfE,IAAOA,EACPG,OAAU,MACVE,QAAWA,IACTY,KAAK,SAAAC,GACP,IAAIjB,EAAO,CACV+G,MAAS9F,EAAS8F,MAClBC,KAAQ/F,EAAS+F,KACjBC,SAAYhG,EAASgG,SACrBgC,SAAYO,YAAUvI,EAAS+D,QAAS,CAAC+D,KAAmBE,UAG7D,OAAO1G,EAASyG,GAAgBhJ,MAC9BuB,MAAM,SAAA5C,GAGR,OAFA4D,EA9CK,CACN3D,KAAQqJ,KA+CA1F,EAAS7D,EAAU,CAAEuG,oBAAqBtG,EAAMgD,cAmBnD,SAAS8H,GAAsBtG,GACrC,OAAO,SAACZ,EAAU7B,GACjB6B,EAbM,CACN3D,KAAQsJ,KAeR,IAAI9H,GAAU,EAMd,OAJIM,IAAWC,KAAKC,KAAKC,QACxBT,GAAU,GAGJP,EAAS,CACfE,IAAA,wCAAAS,OAA+C2C,GAC/CjD,OAAU,MACVE,QAAWA,IACTY,KAAK,SAAAC,GACP,IAAMyI,EAAiBF,YAAUvI,EAAU,CAAC8H,KAE5C,OAAOxG,EAASyG,GAAgBU,MAC9BnI,MAAM,SAAA5C,GAGR,OAFA4D,EAzBK,CACN3D,KAAQuJ,KA0BA5F,EAAS7D,EAAU,CAAEuG,oBAAqBtG,EAAMgD,cAOnD,IAAMgI,GAAmB,SAAC9C,EAAYjE,GAAb,OAAyB,SAAAL,GAGxD,OAFAA,EAmBO,CACN3D,KAAQwJ,KAlBFvI,EAAS,CACfE,IAAO,8BACPC,KAAQ6F,KAAKC,UAAUe,GACvB3G,OAAU,OACVE,SAAW,EACXE,QAAW,CAAEsF,eAAgB,sBAC3B5E,KAAK,SAAAC,GACPsB,EAgBM,CACN3D,KAAQyJ,GACRxJ,QAAW,CACVgI,WAnBkC5F,KAEnC2B,EAAQnD,KAAR,eAAAe,OAA4BS,EAASkC,OAEnC5B,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEkL,oBAAqBjL,EAAMgD,eAqBlD,IAAMkI,GAAmB,SAACpD,EAAcd,EAAc1D,GAA7B,OAAuC,SAAAM,GAEtE,OAAO1C,EAAS,CACfE,IAAA,8BAAAS,OAAqCiG,EAArC,KACAnG,QAAW,CAAEsF,eAAgB,oBAC7B5F,KAAQ6F,KAAKC,UAALzG,OAAA0G,EAAA,EAAA1G,CAAA,GAAkBsG,EAAe1D,IACzC/B,OAAU,QACVE,SAAW,IACTY,KAAK,SAAAC,GAEP,OADAsB,EAASuH,GAAmB7I,EAAS8I,aAC9BxH,EAMF,SAAmCtB,GACzC,MAAO,CACNrC,KAAQ4J,GACR3J,QAAWoC,GATK+I,CAA0B/I,MACxCM,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEuH,oBAAqBtH,EAAMgD,eAalD,IAAMsI,GAAmB,SAAA9G,GAAE,OAAI,SAACZ,EAAU7B,GAChD,OAAOb,EAAS,CACfE,IAAA,8BAAAS,OAAqC2C,EAArC,KACAjD,OAAU,SACVE,SAAW,IACTY,KAAK,SAAAC,GACP,OAAOsB,EAMF,SAAmCY,GACzC,MAAO,CACNvE,KAAQ0J,GACRzJ,QAAW,CACVsE,OAVe+G,CAA0B/G,MACxC5B,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEyL,oBAAqBxL,EAAMgD,eAalD,IAAMyI,GAAwB,SAAA9D,GAAA,IAAGnD,EAAHmD,EAAGnD,GAAIkH,EAAP/D,EAAO+D,UAAP,OAAuB,SAAA9H,GAC3D,OAAO1C,EAAS,CACfE,IAAA,8BAAAS,OAAqC2C,EAArC,KACA7C,QAAW,CAAEsF,eAAgB,oBAC7B5F,KAAQ6F,KAAKC,UAAU,CAAEuE,cACzBnK,OAAU,QACVE,SAAW,IACTY,KAAK,SAAAC,GACP,OAAOsB,EAMF,SAAA+H,GAA2D,IAAjBnH,EAAiBmH,EAAjBnH,GAAIkH,EAAaC,EAAbD,UACpD,MAAO,CACNzL,KAAQ2J,GACR1J,QAAW,CACVsE,GAAMA,EACNkH,cAXeE,CAA+BtJ,MAC7CM,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAE8L,2BAA4B7L,EAAMgD,eAqCzD,SAASmI,GAAmBW,GAGlC,OAAO,SAAClI,EAAU7B,GACjB6B,EAfM,CACN3D,KAAQ8J,KAiBR,IAAItI,GAAU,EAMd,OAJIM,IAAWC,KAAKC,KAAKC,QACxBT,GAAU,GAGJP,EAAS,CACfE,IAAA,wHAAAS,OAA+HiK,GAC/HvK,OAAU,MACVE,QAAWA,IACTY,KAAK,SAAAC,GACP,IAAMyI,EAAiBF,YAAUvI,EAAU,CAAC8H,KAE5C,OAAOxG,EAtCF,CACN3D,KAAQ6J,GACR5J,QAoCsC6K,MACnCnI,MAAM,SAAA5C,GAGR,OAFA4D,EA3BK,CACN3D,KAAQ+J,KA4BApG,EAAS7D,EAAU,CAAEgM,4BAA6B/L,EAAMgD,cAOlE,IAAI5C,GAASC,EAAQ,IAIf2L,GAA0B,CAC/BvG,WAAa,EACbzF,MAAS,KACToI,MAAS,EACTC,KAAQ,GACRC,SAAY,GACZT,OAAU,GACVU,cAAiB,IASL0D,GAAiB,SAAAvD,GAC7B,OAAOhI,OAAOC,KAAK+H,EAAMR,WAAWL,QAAQ9G,IAAI,SAAAyD,GAC/C,OAAOkE,EAAMR,WAAWL,OAAOrD,MAMpB0H,GAAuBzD,YACnC,CAACwD,IACD,SAAAtD,GACC,OAAOA,EAAYwD,OAAO,SAAAjE,GACzB,OAAOA,EAAWwD,cAKRU,GAA0B3D,YACtC,CAACwD,IACD,SAAAtD,GACC,IAAM0D,EAAU,GAMhB,OAJA5F,EAA4B7F,QAAQ,SAAA8K,GACnCW,EAAQX,GAAa/C,EAAYwD,OAAO,SAAAjE,GAAU,OAAKA,EAAWkD,aAAetJ,GAAMC,WAAWC,KAAKC,KAAKuC,IAAQ0D,EAAWwD,YAAcA,MAGvIW,IAMIC,GAA0B,SAAA5D,GAAK,OAAIA,EAAMR,WAAWK,eAKpDgE,GAAgC9D,YAC5C,CAAC6D,IACD,SAAC3D,GACA,IAAM6D,EAAmB9L,OAAOC,KAAKgI,GAAa5H,IAAI,SAAAyD,GACrD,OAAOmE,EAAYnE,KAOpB,OAJAgI,EAAiBC,KAAK,SAAUC,EAAGC,GAClC,OAAOD,EAAE1H,KAAK4H,cAAcD,EAAE3H,QAGxBwH,IAMIK,GAA8BpE,YAC1C,CAACwD,GAjDqB,SAAAvD,GAAK,OAAIA,EAAMd,WAAWC,SAkDhD,SAACc,EAAanB,GAAd,OAA8B,SAACU,GAC9B,IAAI4E,EAAwB,GAe5B,OAbI5E,GACHA,EAAWN,WAAW7G,IAAI,SAACgG,GAC1B,IAAIa,EAAUlH,OAAAqI,EAAA,EAAArI,CAAA,GAAQ8G,EAAYT,IAE5BgG,EAAkBpE,EAAYO,KAAK,SAAAhB,GAAU,OAAIA,EAAWc,oBAAsBjC,IAEpFgG,IACHnF,EAAWmF,gBAAXrM,OAAAqI,EAAA,EAAArI,CAAA,GAAkCqM,IAGnCD,EAAsBhM,KAAK8G,KAGtBkF,KAMIE,GAAmCvE,YAC/C,CAAC6D,GA9C8B,SAAA5D,GAAK,OAAIA,EAAMd,WAAWW,gBAiDzD,SAACI,EAAanB,GAAd,OAA8B,SAACU,GAC9B,IAAIe,EACAgE,EAWJ,OATI/E,GAAcA,EAAWc,mBACxBxB,IACHyB,EAAmBzB,EAAYU,EAAWc,sBAGzCiE,EAAmBtE,EAAYM,EAAiBlB,gBAI5C,CAAEkB,mBAAkBgE,uBC3ZdC,iCAAgB,CAC9B1M,OTQc,WAAwC,IAA/BkI,EAA+B8B,UAAAhH,OAAA,QAAAD,IAAAiH,UAAA,GAAAA,UAAA,GAAvBlK,EAAc6M,EAAS3C,UAAAhH,OAAA,EAAAgH,UAAA,QAAAjH,EACtD,OAAO4J,EAAOlN,MACb,IAvBiB,aAyBhB,IAAIO,EAAS,GAWb,OATAE,OAAOC,KAAKwM,EAAOjN,SAASU,QAAQ,SAACC,GACD,kBAAxBsM,EAAOjN,QAAQW,GAEzBL,EAAOK,GAAO,CAACsM,EAAOjN,QAAQW,IAE9BL,EAAOK,GAAPH,OAAA0M,EAAA,EAAA1M,CAAkByM,EAAOjN,QAAQW,MAI5BT,EAAOI,EAAQ,IAGvB,IAtCmB,eAuClB,MAAO,GAGR,QACC,OAAOkI,IS9BT1G,KLgRc,WAAwC,IAA/B0G,EAA+B8B,UAAAhH,OAAA,QAAAD,IAAAiH,UAAA,GAAAA,UAAA,GAAvBlK,EAAc6M,EAAS3C,UAAAhH,OAAA,EAAAgH,UAAA,QAAAjH,EACtD,OAAO4J,EAAOlN,MACb,IAtR8B,mBAuR7B,OAAOG,EAAO,CACbsF,iBAAoBrC,EAAQ8J,EAAOjN,QAAQgC,OAC3CuD,WAAa,EACbxD,KAAQ7B,EAAOiN,SAAS,CAAEnL,MAASiL,EAAOjN,QAAQgC,SAChDwG,GAEJ,IAvR2B,gBAwR1B,OAAOtI,EAAO,CACbqF,WAAa,EACbxD,KAAQ,CACPqC,SAAY6I,EAAOjN,QAAQoE,SAC3BC,MAAS4I,EAAOjN,QAAQqE,MACxBC,GAAM2I,EAAOjN,QAAQsE,GACrBC,cAAiB0I,EAAOjN,QAAQuE,gBAE/BiE,GAEJ,KAAKhF,EACJ,OAAOtD,EAAO,CACbsF,iBAAmB,EACnBzD,KAAQ7B,EAAOiN,SAAS,KACtB3E,GAKJ,IA1S4C,iCA2S3C,OAAOtI,EAAO,CACbuF,yBAA2B,EAC3BC,uBAAyB,GACvB8C,GAGJ,IAtTwC,6BAuTvC,OAAOtI,EAAO,CACbuF,yBAA2B,EAC3BC,uBAAyB,GACvB8C,GAGJ,IA5TqC,0BA6TpC,OAAOtI,EAAO,CACbuF,yBAA2B,EAC3BC,uBAAyB,GACvB8C,GAGJ,IAlUkC,uBAmUjC,OAAOtI,EAAO,CACbgF,wBAA0B,EAC1B5E,OAAU,IACRkI,GAGJ,IAxUsC,2BAyUrC,OAAOtI,EAAO,CACbgF,wBAA0B,GACxBsD,GAKJ,IA7UoC,yBA8UnC,OAAOtI,EAAO,CACbyF,kBAAoB,EACpByH,6BAA+B,GAC7B5E,GAGJ,IAnVgC,qBAoV/B,OAAOtI,EAAO,CACbyF,kBAAoB,GAClB6C,GAGJ,IAxV4C,iCAyV3C,OAAOtI,EAAO,CACbkN,6BAA+B,GAC7B5E,GAGJ,QACC,OAAOA,IKpWT6E,KJ6Dc,WAA4C,IAA9B7E,EAA8B8B,UAAAhH,OAAA,QAAAD,IAAAiH,UAAA,GAAAA,UAAA,GAAtBlK,EAAc6M,EAAQ3C,UAAAhH,OAAA,EAAAgH,UAAA,QAAAjH,EAC1D,OAAQ4J,EAAOlN,MACd,KAAK6F,EACJ,OAAO1F,EAAO,CACb+F,WAAcgH,EAAOjN,QAAQiG,WAC7BI,gBAAkB,EAClBC,cAAiBpG,EAAOiN,SAAS,KAC/B3E,GAGJ,KAAK3C,EACJ,OAAO3F,EAAO,CACbmG,gBAAkB,EAClBC,cAAiBpG,EAAOiN,SAASF,EAAOjN,QAAQmG,UAC9CqC,GAGJ,KAAK1C,EACJ,OAAO5F,EAAO,CACbmG,gBAAkB,GAChBmC,GAGJ,KAAKzC,EACJ,OAAO7F,EAAO,CACb+F,WAAc/F,EAAOiN,SAAS,IAC9B9G,gBAAkB,EAClBC,cAAiBpG,EAAOiN,SAAS,KAC/B3E,GAGJ,QACC,OAAOA,II5FTR,WDmac,WAA6D,IAAzCQ,EAAyC8B,UAAAhH,OAAA,QAAAD,IAAAiH,UAAA,GAAAA,UAAA,GAAjCwB,GAAyBmB,EAAQ3C,UAAAhH,OAAA,EAAAgH,UAAA,QAAAjH,EAC3E,OAAQ4J,EAAOlN,MACd,KAAKyD,EACJ,OAAOtD,GAAO4L,GAAyB,IAGxC,KAAK5C,GAAkB,IAAAoE,EAEsBL,EAAOjN,QAA3CkI,EAFcoF,EAEdpF,MAAOE,EAFOkF,EAEPlF,SAAUD,EAFHmF,EAEGnF,KAAMiC,EAFTkD,EAESlD,SAE3BzC,EAAS,GAMb,OAJIyC,GAAYA,EAASpC,aACxBL,EAASyC,EAASpC,YAGZ9H,GAAO,CACbgI,MAASA,EACTE,SAAYA,EACZD,KAAQA,EACRR,OAAUzH,GAAOiN,SAASxF,GAC1BU,cAAiBnI,GAAOiN,SAAS,IACjC5H,WAAa,GACXiD,GAGJ,KAAKW,GACJ,OAAOjJ,GAAO,CAAEqF,WAAa,GAAQiD,GAGtC,KAAKY,GACJ,OAAOlJ,GAAO,CAAEqF,WAAa,GAASiD,GAGvC,KAAKa,GACJ,OAAOnJ,GAAO,CAAEqF,WAAa,GAAQiD,GAGtC,KAAKc,GACJ,OAAOpJ,GAAO,CAAEqF,WAAa,GAASiD,GAGvC,KAAKe,GAEJ,OAAOrJ,GAAOsI,EAAOA,GAGtB,KAAKgB,GACJ,IAAMxB,EAAaiF,EAAOjN,QAAQgI,WAClC,OAAO9H,GAAO,CAAEyH,OAASnH,OAAA0G,EAAA,EAAA1G,CAAA,GAAIwH,EAAW1D,GAAK0D,IAAgBQ,GAG9D,KAAKiB,GACJ,OAAOvJ,GAAO,CAAEyH,OAAUzH,GAAOqN,KAAK,CAACN,EAAOjN,QAAQsE,MAAQkE,GAG/D,KAAKkB,GACJ,IAAM9B,EAAeqF,EAAOjN,QAAQsE,GAEpC,OAAOpE,GAAO,CAAEyH,OAASnH,OAAA0G,EAAA,EAAA1G,CAAA,GAAIoH,EAAe,CAAE4D,UAAayB,EAAOjN,QAAQwL,aAAiBhD,GAY5F,KAAK/B,EAA6B,IAC3BiB,EAAauF,EAAOjN,QAAQ0H,WAMlC,OAAOxH,GAAOsN,SAAP,UAAA7L,OAA0B+F,EAAWM,WAArC,eAJP,SAAuBV,GACtB,MAAO,GAAG3F,OAAO2F,EAAaI,EAAWpD,KAG0CkE,GAGrF,KAAKmB,GAEJ,IAAM8D,EAAS,CACd3I,KAAQmI,EAAOjN,QAAQ8E,KACvB4I,YAAeT,EAAOjN,QAAQ0N,YAC9BlC,UAAayB,EAAOjN,QAAQwL,UAC5BmC,YAAeV,EAAOjN,QAAQ2N,YAC9BC,YAAeX,EAAOjN,QAAQ4N,YAC9B9E,kBAAqBmE,EAAOjN,QAAQ8I,mBAGrC,OAAO5I,GAAO,CAAEyH,OAASnH,OAAA0G,EAAA,EAAA1G,CAAA,GAAIyM,EAAOjN,QAAQsE,GAAKmJ,IAAYjF,GAG9D,KAAK7B,EAA8B,IAC5BgC,EAAmBsE,EAAOjN,QAAQsH,YAElCM,EAAee,EAAiB,GAAGd,cAWzC,OAAO3H,GAAOsN,SAAP,UAAA7L,OAA0BiG,EAA1B,eATP,SAA4BN,GAC3B,IAAIuG,EAAiB,GAAGlM,OAAO6G,EAAMb,OAAOC,GAAcF,YAK1D,OAJAiB,EAAiB9H,IAAI,SAAC6G,GACrBmG,EAAenG,EAAWI,MAAM,GAAKJ,EAAWpD,KAG1CuJ,GAGwErF,GAGjF,KAAKoB,GAAwB,IAEpBQ,EAAa6C,EAAOjN,QAApBoK,SACJ3B,EAAc,GAMlB,OAJI2B,GAAYA,EAASpC,aACxBS,EAAc2B,EAASpC,YAGjB9H,GAAO,CAAEmI,cAAiBnI,GAAOiN,SAAS1E,GAAclD,WAAa,GAASiD,GAGtF,KAAKqB,GAIL,KAAKC,GACJ,OAAO5J,GAAOsI,EAAOA,GAGtB,QACC,OAAOA,ICviBTd,WF6Kc,WAA6D,IAAzCc,EAAyC8B,UAAAhH,OAAA,QAAAD,IAAAiH,UAAA,GAAAA,UAAA,GAAjCrC,GAAyBgF,EAAQ3C,UAAAhH,OAAA,EAAAgH,UAAA,QAAAjH,EAC3E,OAAQ4J,EAAOlN,MACd,KAAKyD,EACJ,OAAOtD,GAAO+H,GAAyB,IAGxC,KAAKiB,GAAkB,IACdkB,EAAa6C,EAAOjN,QAApBoK,SAEJzC,EAAS,GAMb,OAJIyC,GAAYA,EAAS1C,aACxBC,EAASyC,EAAS1C,YAGZxH,GAAO,CACbyH,OAAUzH,GAAOiN,SAASxF,GAC1BU,cAAiBnI,GAAOiN,SAAS,IACjC5H,WAAa,GAASiD,GAGxB,KAAKa,GACJ,OAAOnJ,GAAOsI,EAAOA,GAGtB,KAAK/B,EACJ,IAAMiB,EAAauF,EAAOjN,QAAQ0H,WAClC,OAAOxH,GAAO,CAAEyH,OAASnH,OAAA0G,EAAA,EAAA1G,CAAA,GAAIkH,EAAWpD,GAAKoD,IAAgBc,GAG9D,KAAK9B,EAEJ,IAAM+G,EAAS,CACd3I,KAAQmI,EAAOjN,QAAQ8E,KACvB4I,YAAeT,EAAOjN,QAAQ0N,YAC9BE,YAAeX,EAAOjN,QAAQ4N,YAC9B9F,MAASmF,EAAOjN,QAAQ8H,OAGzB,OAAO5H,GAAO,CAAEyH,OAASnH,OAAA0G,EAAA,EAAA1G,CAAA,GAAIyM,EAAOjN,QAAQsE,GAAKmJ,IAAYjF,GAG9D,KAAK7B,EACJ,IAAMgC,EAAmBsE,EAAOjN,QAAQsH,YAEpCwG,EAAoB,GAIxB,OAHAnF,EAAiB9H,IAAI,SAAC6G,GACrBoG,EAAkBpG,EAAWpD,IAAMoD,IAE7BxH,GAAO,CAAEyH,OAAUmG,GAAqBtF,GAGhD,KAAKoB,GAAwB,IACpBQ,EAAa6C,EAAOjN,QAApBoK,SAER,OAAIA,GAAYA,EAAS1C,WACjBxH,GAAO,CAAEmI,cAAiBnI,GAAOiN,SAAS/C,EAAS1C,YAAanC,WAAa,GAASiD,GAGvFA,EAGR,QACC,OAAOA,MGxPJuF,GAAmBC,8BAAoB,IAe9BpM,OAXDqM,sBACbC,GAEAH,GACCI,0BAAgBC,6CC4EHC,uBApFd,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAJ,IAClBE,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAA6N,GAAAO,KAAAH,KAAMH,KAiBPO,YAAc,SAAAC,GAETP,EAAKQ,KAAKC,SAASF,EAAEG,SAKzBV,EAAKW,iBAvBLX,EAAK/F,MAAQ,CACZ2G,cAAgB,GAGjBZ,EAAKW,cAAgBX,EAAKW,cAAcE,KAAnB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACrBA,EAAKe,QAAUf,EAAKe,QAAQF,KAAb5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAPGA,mFAWlBgB,SAASC,iBAAiB,QAASf,KAAKI,aAAa,kDAIrDU,SAASE,oBAAoB,QAAShB,KAAKI,aAAa,2CAcxDJ,KAAKiB,SAAS,CACbP,cAAgB,sCAKjBV,KAAKiB,SAAS,CACbP,cAAgB,qCAIT,IACJ7I,EADIqJ,EAAAlB,KA8BR,OA3BIA,KAAKH,MAAMjI,iBAEbC,EADuC,IAApCmI,KAAKH,MAAMhI,cAAchD,OACZsM,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,QAAf,wBAAAnO,OAA+C8M,KAAKH,MAAMrI,aAE1D2J,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,WAC9BF,EAAApD,EAAAqD,cAAA,UACEpB,KAAKH,MAAMhI,cAAczF,IAAI,SAACkP,GAC9B,IAAIhQ,EAAO,GACLmB,EAAG,eAAAS,OAAkBoO,EAAOzL,IAOlC,MALoB,SAAhByL,EAAOhQ,KACVA,EAAO,OACmB,SAAhBgQ,EAAOhQ,OACjBA,EAAO,QAGP6P,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,SAASnP,IAAKoP,EAAOzL,IAClCsL,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAI/O,EAAKgP,QAASP,EAAKT,eAAeU,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,QAAQ/P,EAAxB,MAAsC6P,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,QAAQC,EAAOjL,aAWvH8K,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,SAASK,IAAK,SAAApB,GAAI,OAAIY,EAAKZ,KAAOA,IAChDa,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CAAON,UAAU,eAChBO,SAAU5B,KAAKH,MAAM+B,SACrBf,QAASb,KAAKa,QACdvP,KAAK,OACLuQ,YAAa7B,KAAKH,MAAMgC,cAExB7B,KAAKjG,MAAM2G,cAAgB7I,UA/EXiK,cCOfC,eACL,SAAAA,EAAYlC,GAAO,IAAAC,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAA+B,IAClBjC,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAgQ,GAAA5B,KAAAH,KAAMH,KAoBPmC,SAAW,SAAA3B,GAEV,IAAM7I,EAAa6I,EAAEG,OAAO7L,MAC5BsN,aAAanC,EAAKoC,eAElBpC,EAAKoC,cAAgBC,WAAW,WAC/BrC,EAAKD,MAAM5K,SAASmN,EAAuB5K,KACzC,MA1BHsI,EAAK/F,MAAQ,CACZ2G,cAAgB,GAGjBZ,EAAKuC,SAAWvC,EAAKuC,SAAS1B,KAAd5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IANEA,4EAQNO,GACZA,EAAEiC,iBACFtC,KAAKiB,SAAS,SAAAsB,GAAS,MAAK,CAC3B7B,cAAiB6B,EAAU7B,iDAIpBL,GACRA,EAAEiC,iBAEFtC,KAAKH,MAAM5K,SAASuN,EAAuBxC,KAAKH,MAAMvK,2CAa9C,IAAA4L,EAAAlB,KAAAyC,EAC0BzC,KAAKH,MAAMxM,KAArC0D,EADA0L,EACA1L,gBAAiBzD,EADjBmP,EACiBnP,KAEnBoP,EACLvB,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,sBACZ/N,EAAKqC,UAAYwL,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,YAAWF,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAG,WAAWH,UAAU,YAAY/N,EAAKqC,WAC1FwL,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,YAAWF,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAG,IAAIH,UAAU,WAAWI,QAASzB,KAAKqC,UAAhD,YAGrBM,EACLxB,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,sBACbF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,YACbF,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMF,UAAU,WAAWG,GAAG,aAA9B,aAEDL,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,YACbF,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMF,UAAU,WAAWG,GAAG,UAA9B,WAIH,OACCL,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,iDACdF,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMF,UAAU,eAAeG,GAAG,KAAlC,eACAL,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,iBAAiB/P,KAAK,SAASsR,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBACrLvB,QAAS,SAACpB,GAAOa,EAAKR,aAAaL,KACnCc,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,yBAEjBF,EAAApD,EAAAqD,cAAA,OAAKC,UAAS,4BAAAnO,OAA8B8M,KAAKjG,MAAM2G,aAAe,OAAS,IAAM7K,GAAG,0BACtFkB,EAAkB2L,EAAYC,EAC/BxB,EAAApD,EAAAqD,cAAC6B,GAAD,CACCrB,SAAU5B,KAAKgC,SACfH,YAAY,4BACZjK,eAAgBoI,KAAKH,MAAMjI,eAC3BC,cAAemI,KAAKH,MAAMhI,cAC1BL,WAAYwI,KAAKH,MAAMrI,sBAjERsK,aAuFNoB,eAPS,SAACnJ,GAAD,MAAY,CACnC1G,KAAQ0G,EAAM1G,KACdmE,WAAcuC,EAAM6E,KAAKpH,WACzBI,eAAkBmC,EAAM6E,KAAKhH,eAC7BC,cAAiBkC,EAAM6E,KAAK/G,gBAGdqL,CAAyBC,aAAWpB,6CC9E9BqB,eACpB,SAAAA,IAAc,IAAAtD,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAoD,IACbtD,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAqR,GAAAjD,KAAAH,QAMDjG,MAAQ,CACPsJ,aAAe,GARFvD,EA+DdwD,eAAiB,GA/DHxD,EAuEdyD,iBAAmB,SAACC,GAEnB,GAAIA,EAAKC,SAASC,YACjB,OAAOF,EAAKG,kBAIZ,GAAIH,EAAKC,SAASG,aAChB,OAAQ9D,EAAKwD,eAAL,GAAApQ,OAAuBsQ,EAAKlS,KAA5B,aAET,IAAK,IAAMuS,KAAc/D,EAAKwD,eAC3B,GAAIE,EAAKC,SAASI,GAChB,OAAO/D,EAAKwD,eAAeO,IAnFrB/D,EA6FdgE,SAAW,WACV,IAAMC,EAASC,IAASC,YAATlS,OAAA6O,GAAA,EAAA7O,CAAA+N,IACToE,EAAaH,EAAOlP,OAQ1B,IAA+B,IAA3BkP,EAAOI,gBAA2B,CACrC,IAAK,IAAIhK,EAAI,EAAGA,EAAI+J,EAAY/J,IAAK,CAEpC,IAAMqJ,EAAOO,EAAO5J,GAMdiK,EAAaZ,EAAKa,WAAWC,cAAc,qBAGjD,GAAIF,GAA8C,WAAhCZ,EAAKe,SAASC,cAC/B,GAAKhB,EAAKC,SAASgB,MAIlBL,EAAWM,YAAc,OAJA,CACzB,IAAIrQ,EAAUyL,EAAKyD,iBAAiBC,IAASA,EAAKG,kBAClDS,EAAWM,YAAcrQ,GAO5B,OAAO,EAGP,IAAK,IAAI8F,EAAI,EAAGA,EAAI+J,EAAY/J,IAAK,CACpC,IAAMqJ,EAAOO,EAAO5J,GACdiK,EAAaZ,EAAKa,WAAWC,cAAc,qBAC7CF,GAA8C,WAAhCZ,EAAKe,SAASC,gBAC/BJ,EAAWM,YAAc,IAI3B,OAAO,GAxIK5E,EA4Id6E,aAAe,SAAAtE,GACdA,EAAEiC,iBAEExC,EAAKgE,YACRhE,EAAKD,MAAM+E,SAASvE,GAGrBP,EAAKmB,SAAS,CAAEoC,aAAe,KAhJ/BvD,EAAKgE,SAAWhE,EAAKgE,SAASnD,KAAd5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAChBA,EAAK+E,gBAAkB/E,EAAK+E,gBAAgBlE,KAArB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAJVA,mFAWM,IAAAoB,EAAAlB,KACnB,GAAGA,KAAKH,MAAMiF,gBAAiB,CAgB9B,IAAMf,EAASC,IAASC,YAAYjE,MAE9B+E,EAAW/E,KAAKH,MAAMiF,gBAAgBE,OACtCC,EAAWjF,KAAKH,MAAMiF,gBAAgBI,OAEtCC,EAAgBpB,EAAOO,cAAP,IAAApR,OAAyB6R,IAEzCK,EAAgBrB,EAAOO,cAAP,IAAApR,OAAyB+R,IAE3CE,aAAyBE,aAAeD,aAAyBC,cACpEF,EAAcG,QAAU,SAACjF,GAAD,OAAOa,EAAK2D,gBAAgBE,EAAUE,EAAU5E,IACxE+E,EAAcE,QAAU,SAACjF,GAAD,OAAOa,EAAK2D,gBAAgBE,EAAUE,EAAU5E,8CAK3D2E,EAAQE,EAAQ7E,GAG/B,IAAMC,EAAO0D,IAASC,YAAYjE,MAElC,GAAIM,aAAgB+E,YAAa,CAC9B,IAAMF,EAAgB7E,EAAKgE,cAAL,IAAApR,OAAuB8R,IACvCI,EAAgB9E,EAAKgE,cAAL,IAAApR,OAAuBgS,IAEzCC,aAAyBE,aAAeD,aAAyBC,cAChEF,EAAcxQ,QAAUyQ,EAAczQ,MACxCyQ,EAAcG,kBAAkB,IAEjCH,EAAcG,kBAAkBvF,KAAKH,MAAMiF,gBAAgBzQ,4CAiGhE,IAAMwL,EAAK9N,OAAAqI,EAAA,EAAArI,CAAA,GAAQiO,KAAKH,OAGpB2F,EAAa,GAWjB,OAVI3F,EAAMwB,YACTmE,EAAUzT,OAAA0M,EAAA,EAAA1M,CAAO8N,EAAMwB,kBAChBxB,EAAMwB,WAGVrB,KAAKjG,MAAMsJ,aACdmC,EAAWrT,KAAK,iBAKhBgP,EAAApD,EAAAqD,cAAA,OAAArP,OAAA0T,OAAA,GACK5F,EADL,CAECwB,UAAWmE,EACXE,YAAU,EACVd,SAAU5E,KAAK2E,eAEd3E,KAAKH,MAAM8F,iBAhL2B7D,aCZrC8D,eACL,SAAAA,IAAc,IAAA9F,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAA4F,IACb9F,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAA6T,GAAAzF,KAAAH,QACKjG,MAAQ,CACZpE,SAAY,GACZC,MAAS,GACTiQ,SAAY,GACZC,iBAAoB,IAErBhG,EAAKiG,kBAAoBjG,EAAKiG,kBAAkBpF,KAAvB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACzBA,EAAK6E,aAAe7E,EAAK6E,aAAahE,KAAlB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IATPA,iFAYIO,GACjBL,KAAKiB,SAALlP,OAAA0G,EAAA,EAAA1G,CAAA,GACEsO,EAAEG,OAAOnK,KAAOgK,EAAEG,OAAO7L,6CAIf0L,GACZA,EAAEiC,iBACF,IAAMhP,EAAO,CACZqC,SAAYqK,KAAKjG,MAAMpE,SACvBC,MAASoK,KAAKjG,MAAMnE,MACpBoQ,UAAahG,KAAKjG,MAAM8L,SACxBI,UAAajG,KAAKjG,MAAM+L,kBAGzB9F,KAAKH,MAAMqG,aAAa5S,EAAM0M,KAAKH,MAAMvK,2DAGhB6Q,GACtBA,EAAU9S,KAAK0D,iBACjBiJ,KAAKH,MAAMvK,QAAQnD,KAAK,iDAKtB6N,KAAKH,MAAMxM,KAAK0D,iBAClBiJ,KAAKH,MAAMvK,QAAQnD,KAAK,sCAoBzB,OACCgP,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KACCjF,EAAApD,EAAAqD,cAAA,+BACAD,EAAApD,EAAAqD,cAACiF,GAAD,CAAezB,SAAW5E,KAAK2E,aAAeG,gBAAkB,CAC/DE,OAAU,WACVE,OAAU,mBACV7Q,QAAW,yBAEX8M,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACdtF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAI,SAAX,iBACAxF,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,QACL+E,KAAK,QACLuQ,UAAU,EACV/Q,GAAG,QACH+L,SAAW5B,KAAK+F,kBAChBpR,MAAQqL,KAAKjG,MAAMnE,MACnBiM,YAAY,6BAEbV,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,qBACfF,EAAApD,EAAAqD,cAAA,SAAOC,UAAU,wBAChBF,EAAApD,EAAAqD,cAAA,8FAKJD,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACdtF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAI,YAAX,YACAxF,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,OACL+E,KAAK,WACLR,GAAG,WACH+Q,UAAU,EACVhF,SAAW5B,KAAK+F,kBAChBpR,MAAQqL,KAAKjG,MAAMpE,SACnBkM,YAAY,wBAEbV,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,qBACfF,EAAApD,EAAAqD,cAAA,SAAOC,UAAU,wBAChBF,EAAApD,EAAAqD,cAAA,mFAKJD,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACdtF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAI,YAAX,YACAxF,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,WACL+E,KAAK,WACLuQ,UAAU,EACVC,UAAW,EACXC,QAAQ,aACRjR,GAAG,WACHlB,MAAQqL,KAAKjG,MAAM8L,SACnBhE,YAAY,sBACZD,SAAW5B,KAAK+F,oBAEjB5E,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,wBAIlBF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACdtF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAI,oBAAX,yBACAxF,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,WACL+E,KAAK,mBACLR,GAAG,mBACH+Q,UAAU,EACVC,UAAW,EACXC,QAAQ,aACRnS,MAAQqL,KAAKjG,MAAM+L,iBACnBjE,YAAY,wBACZD,SAAW5B,KAAK+F,oBAEjB5E,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,qBACfF,EAAApD,EAAAqD,cAAA,SAAOC,UAAU,wBAAuBF,EAAApD,EAAAqD,cAAA,UACvCD,EAAApD,EAAAqD,cAAA,oFACAD,EAAApD,EAAAqD,cAAA,+DACAD,EAAApD,EAAAqD,cAAA,8DACAD,EAAApD,EAAAqD,cAAA,2DAKJD,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,KACdtF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,mBAAhC,oBAKEF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACHnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACbzG,KAAKH,MAAMhO,OAAOkV,cAAgB5F,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,oBAAoB2F,MAAO,CAAEC,QAAW,UAAYjH,KAAKH,MAAMhO,OAAOkV,yBAhKxGjF,aAoLRoB,eALS,SAAAnJ,GAAK,MAAK,CACjC1G,KAAQ0G,EAAM1G,KACdxB,OAAUkI,EAAMlI,SAGsB,CAAEqU,aVvJb,SAAC5S,EAAMgC,GAAP,OAAmB,SAAAL,GAC9CA,EAASzD,KAET,IAAI2E,EAAY,IAAIC,SAGpB,IAAI,IAAIC,KAAQ/C,EACf6C,EAASG,OAAOD,EAAM/C,EAAK+C,IAQ5B,OAAO9D,EAAS,CACfE,IAAO,kCACPC,KAAQyD,EACRvD,OAAU,SACRc,KAAK,SAAAC,GAEP,OADA2B,EAAQnD,KAAK,YACNwB,IACLM,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAE2V,aAAgB1V,EAAMgD,gBUgIrC6O,CAA0CC,aAAWyC,KCtL9DsB,eACL,SAAAA,IAAc,IAAApH,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAkH,IACbpH,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAmV,GAAA/G,KAAAH,QACKjG,MAAQ,CACZlI,OAAU,IAHEiO,yFAOYqG,GACtBA,EAAU9S,KAAK0D,iBACjBiJ,KAAKH,MAAMvK,QAAQnD,KAAK,iDAKtB6N,KAAKH,MAAMxM,KAAK0D,iBAClBiJ,KAAKH,MAAMvK,QAAQnD,KAAK,sCAKzB,OACCgP,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KACCjF,EAAApD,EAAAqD,cAAA,oCACAD,EAAApD,EAAAqD,cAAA,2CACAD,EAAApD,EAAAqD,cAAA,2OACAD,EAAApD,EAAAqD,cAAA,yGACAD,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAAA,wDAA+CD,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAG,UAAT,cAA/C,sFA7BgBM,aAgDPoB,eALS,SAACnJ,GAAD,MAAY,CACnC1G,KAAQ0G,EAAM1G,KACdxB,OAAUkI,EAAMlI,SAGFqR,CAAyBgE,IC9ClCC,eACL,SAAAA,IAAc,IAAArH,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAmH,IACbrH,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAoV,GAAAhH,KAAAH,QACKjG,MAAQ,CACZnE,MAAS,GACTiQ,SAAY,IAGb/F,EAAK6E,aAAe7E,EAAK6E,aAAahE,KAAlB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACpBA,EAAKiG,kBAAoBjG,EAAKiG,kBAAkBpF,KAAvB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IARZA,mFAYVE,KAAKH,MAAMxM,KAAK0D,iBAClBiJ,KAAKH,MAAMvK,QAAQnD,KAAK,uDAIAgU,GACtBA,EAAU9S,KAAK0D,iBACjBiJ,KAAKH,MAAMvK,QAAQnD,KAAK,+CAIRkO,GACjBL,KAAKiB,SAALlP,OAAA0G,EAAA,EAAA1G,CAAA,GACEsO,EAAEG,OAAOnK,KAAOgK,EAAEG,OAAO7L,6CAIf0L,GACZA,EAAEiC,iBACF,IAAMhP,EAAO,CACZsC,MAASoK,KAAKjG,MAAMnE,MACpBiQ,SAAY7F,KAAKjG,MAAM8L,UAExB7F,KAAKH,MAAMuH,UAAU9T,EAAM0M,KAAKH,MAAMvK,0CAItC,OACC6L,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KACCjF,EAAApD,EAAAqD,cAAA,mBACAD,EAAApD,EAAAqD,cAACiF,GAAD,CAAezB,SAAU5E,KAAK2E,cAC7BxD,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACdtF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAI,SAAX,iBACAxF,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,QACL+E,KAAK,QACLR,GAAG,QACH+Q,UAAU,EACVhF,SAAU5B,KAAK+F,kBACfpR,MAAOqL,KAAKjG,MAAMnE,MAClBiM,YAAY,8BAEbV,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,wBAIlBF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACdtF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAI,YAAX,YACAxF,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,WACL+E,KAAK,WACLuQ,UAAU,EACV/Q,GAAG,WACHlB,MAAOqL,KAAKjG,MAAM8L,SAClBhE,YAAY,WACZD,SAAU5B,KAAK+F,oBAEhB5E,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,wBAIlBF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACdtF,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,mBAAhC,WAKEF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACHnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACbzG,KAAKH,MAAMhO,OAAOwV,gBAAkBlG,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,oBAAoB2F,MAAO,CAAEC,QAAW,UAAYjH,KAAKH,MAAMhO,OAAOwV,mBAI7HlG,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMF,UAAU,WAAWG,GAAG,mBAA9B,4BA3FgBM,aA4GJoB,eALQ,SAACnJ,GAAD,MAAY,CACnC1G,KAAQ0G,EAAM1G,KACdxB,OAAUkI,EAAMlI,SAGwB,CAAEuV,UZpDlB,SAAC9T,EAAMgC,GAAP,OAAmB,SAAAL,GAC3CA,EAASzD,KAET,IAAI2E,EAAY,IAAIC,SAGpB,IAAI,IAAIC,KAAQ/C,EACf6C,EAASG,OAAOD,EAAM/C,EAAK+C,IAG5B,OAAO9D,EAAS,CACfE,IAAO,2BACPC,KAAQyD,EACRvD,OAAU,OACVE,SAAW,IACTY,KAAK,SAAAC,GACP,OAAOsB,EAASD,EAAerB,EAASzB,QACtCwB,KAAK,WAGP,OAFA4B,EAAQnD,KAAK,KAENgB,GAAM8B,SAASQ,OACpBxB,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEiW,eAAkB,4EY8BhCnE,CAAwCiE,IClHzC,SAASG,GAAT9U,GAAkD,IAA1B6B,EAA0B7B,EAA1B6B,QAAS/C,EAAiBkB,EAAjBlB,KAAMmQ,EAAWjP,EAAXiP,QACrD,OACCN,EAAApD,EAAAqD,cAAA,OAAKC,UAAS,eAAAnO,OAAiB5B,IAC9B6P,EAAApD,EAAAqD,cAAA,YAAO/M,GACP8M,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,QAAQ2B,aAAW,QAAQvB,QAASA,GAClEN,EAAApD,EAAAqD,cAAA,QAAMmG,cAAY,QAAlB,+BCKUC,OAVf,WACC,OACCrG,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,WACdF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACqG,GAAA,EAAD,CAASC,MAAM,YAAYV,MAAO,CAAEW,MAAS,OAAQC,OAAU,aCepDC,GAlBS,SAAArV,GAAyC,IAAtCmT,EAAsCnT,EAAtCmT,SAAqBmC,GAAiBtV,EAA5BuK,UAA4BvK,EAAjBsV,YAC/C,OACC3G,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,CAAW/E,UAAU,oBACnByG,GACD3G,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,yBACZyG,KAIJ3G,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACEX,KCgBUoC,WAzBe,SAAAlI,GAC7B,IAAM1G,EAAe0G,EAAM1G,aACrB6O,EAAWnI,EAAMmI,SAAW,SAAW,UACvCC,EAAUpI,EAAMmI,SAAW,SAAW,UAS5C,OACC7G,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aACdF,EAAApD,EAAAqD,cAAA,UACCK,QATH,SAA0BpB,GAEzB,IAAM1L,EAAsC,WAA9B0L,EAAEG,OAAO0H,QAAQC,SAC/BtI,EAAMuI,iBAAiB,CAAEvS,GAAMwK,EAAEG,OAAO0H,QAAQG,aAActL,WAAcpI,KAO1E2T,oBAAmBnP,EACnBoP,gBAAeP,EACf3G,UAAS,GAAAnO,OAAK8U,EAAL,oBACTQ,MAAOP,GALR,WCtBY,SAASQ,GAATjW,GAMd,IAN+E,IAAjCkW,EAAiClW,EAAjCkW,aAAcC,EAAmBnW,EAAnBmW,SAAUhU,EAASnC,EAATmC,MAIhE3C,EAAOD,OAAOC,KAAK0W,GAEhBvO,EAAE,EAAGA,EAAEnI,EAAK6C,OAAQsF,IAAK,CACjC,IAAIyO,EAAcF,EAAa1W,EAAKmI,IACpC,GAAIyO,EAAYD,KAAchU,EAC7B,OAAOiU,GCOH,SAASC,GAAkBhT,GAIjC,IAAMkE,EAAQ5G,GAAMC,WACd4G,EAAcD,EAAMR,WAAWL,OAC/BiE,EAASpD,EAAM1G,KAAKC,KAAKuC,GAE3BgT,GAAoB,EAExB,GAAI9W,OAAOC,KAAKgI,GAAanF,OAAS,EAAG,CACxC,IAAI0E,EAAakP,GAAqB,CAAEC,aAAgB1O,EAAa2O,SAAY,KAAMhU,MAASkB,IAE5F0D,IAAeA,EAAWwD,WAAcxD,EAAWkD,aAAeU,KACrE0L,GAAoB,GAItB,OAAOA,EAGD,SAASC,GAAkBjT,GAEjC,IAAMkE,EAAQ5G,GAAMC,WACd4G,EAAcD,EAAMR,WAAWL,OAC/BiE,EAASpD,EAAM1G,KAAKC,KAAKuC,GAE3BiT,GAAoB,EAExB,GAAI/W,OAAOC,KAAKgI,GAAanF,OAAS,EAAG,CACxC,IAAI0E,EAAakP,GAAqB,CAAEC,aAAgB1O,EAAa2O,SAAY,KAAMhU,MAASkB,IAE5F0D,GAAeA,EAAWkD,aAAeU,IAC5C2L,GAAoB,GAItB,OAAOA,EAGD,SAASC,KAGf,IAAMhP,EAAQ5G,GAAMC,WAEpB,SAAI2G,EAAM1G,KAAK0D,kBAAmBgD,EAAM1G,KAAKC,KAAKwC,0BCTpCkT,GAtCW,SAAAnJ,GACzB,IAAIoJ,EAAUC,GAA8BrJ,EAAMtG,WAAW1D,IAE7D,OACCsL,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAK4C,GAAG,KAAK3C,GAAG,KACfrF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,sBACdF,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAE,eAAAtO,OAAiB2M,EAAMtG,WAAW1D,KACzCsL,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,mBACdF,EAAApD,EAAAqD,cAAA,WAAMvB,EAAMtG,WAAWlD,QAGxB4S,GACA9H,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,+BACdF,EAAApD,EAAAqD,cAACgI,GAAD,CACCjQ,aAAc0G,EAAMtG,WAAW1D,GAC/BmS,SAAUnI,EAAMtG,WAAWwD,UAC3BqL,iBAAkBvI,EAAMuI,mBAEzBjH,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,iBAAiBmH,MAAM,SAAS/G,QAevD,SAA4BpB,GAC3BR,EAAMwJ,mBAAmB,CAAExT,GAAMgK,EAAMtG,WAAW1D,GAAIQ,KAAQwJ,EAAMtG,WAAWlD,SAhB3E,MAGF8K,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAE,eAAAtO,OAAiB2M,EAAMtG,WAAW1D,KACzCsL,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,0BAA0BxB,EAAMtG,WAAW0F,cAG1DY,EAAMyJ,eACNnI,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,yBAAyBxB,EAAMtG,WAAWgQ,wBCjCxDC,8BACL,SAAAA,EAAY3J,GAAO,IAAAC,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAwJ,IAClB1J,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAyX,GAAArJ,KAAAH,KAAMH,KACD9F,MAAQ,CAAE0P,MAAS,IAFN3J,mFAQlB,GAAIE,KAAKH,MAAMpG,MAAO,CACrB,IAAMiQ,EAAc1J,KAAKH,MAAM8J,YAAc3J,KAAKH,MAAM8J,YAAc3J,KAAKH,MAAM+J,YACjF5J,KAAK6J,QAAQH,+CAIII,EAAWvH,GAEzBvC,KAAKH,MAAMpG,QAAUqQ,EAAUrQ,OAClCuG,KAAK6J,QAAQ7J,KAAKH,MAAM+J,6CAIlBG,GAAY,IAAAC,EACOhK,KAAKH,MAAzBpG,EADauQ,EACbvQ,MAAOwQ,EADMD,EACNC,SACTR,EAAQzJ,KAAKjG,MAAM0P,MAGvBA,EAAQzJ,KAAKkK,SAASzQ,EAAOsQ,EAAYE,GAErCF,EAAa,GAAKA,EAAaN,EAAMU,aAIzCJ,EAAaK,KAAKC,IAAIN,EAAYN,EAAMU,YAGxCnK,KAAKiB,SAAS,CAAEwI,MAASA,IAEzBzJ,KAAKH,MAAMyK,aAAaP,qCAGhBQ,EAAkBZ,EAAaM,GAEvCN,EAAcA,GAAe,EAG7BM,EAAWA,GAAY,GAGvB,IAEIO,EAAWC,EAFXN,EAAaC,KAAKM,KAAKH,EAAmBN,GAG1CE,GAAc,IAEjBK,EAAY,EACZC,EAAUN,GAGNR,GAAe,GAClBa,EAAY,EACZC,EAAU,IACAd,EAAc,GAAKQ,GAC7BK,EAAYL,EAAa,EACzBM,EAAUN,IAEVK,EAAYb,EAAc,EAC1Bc,EAAUd,EAAc,GAK1B,IAAIgB,GAAchB,EAAc,GAAKM,EACjCW,EAAWR,KAAKC,IAAIM,EAAaV,EAAW,EAAGM,EAAmB,GAGlEM,EAAQ9Y,OAAA0M,EAAA,EAAA1M,CAAI+Y,MAAOL,EAAU,EAAKD,GAAWxY,QAAQI,IAAI,SAAA+H,GAAC,OAAIqQ,EAAYrQ,IAG9E,MAAO,CACNoQ,iBAAoBA,EACpBZ,YAAeA,EACfM,SAAYA,EACZE,WAAcA,EACdK,UAAaA,EACbC,QAAWA,EACXE,WAAcA,EACdC,SAAYA,EACZC,MAASA,oCAIF,IAAA3J,EAAAlB,KACJyJ,EAAQzJ,KAAKjG,MAAM0P,MAEvB,OAAKA,EAAMoB,OAASpB,EAAMoB,MAAMhW,QAAU,EAElC,KAIPsM,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,cACbF,EAAApD,EAAAqD,cAAA,MAAIC,UAAiC,IAAtBoI,EAAME,YAAoB,WAAa,IACrDxI,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,uBAAuBI,QAAS,kBAAMP,EAAK2I,QAAQ,KAAnF,UAED1I,EAAApD,EAAAqD,cAAA,MAAIC,UAAiC,IAAtBoI,EAAME,YAAoB,WAAa,IACrDxI,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,0BAA0BI,QAAS,kBAAMP,EAAK2I,QAAQJ,EAAME,YAAc,KAA1G,aAEDxI,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,WACboI,EAAMoB,MAAMzY,IAAI,SAACwM,EAAMmM,GAAP,OAChB5J,EAAApD,EAAAqD,cAAA,MAAIlP,IAAK6Y,EAAO1J,UAAWoI,EAAME,cAAgB/K,EAAO,SAAW,IAClEuC,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,sBAAsBI,QAAS,kBAAMP,EAAK2I,QAAQjL,KAAQA,MAG5FuC,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,WACdF,EAAApD,EAAAqD,cAAA,MAAIC,UAAWoI,EAAME,cAAgBF,EAAMU,WAAa,WAAa,IACpEhJ,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,sBAAsBI,QAAS,kBAAMP,EAAK2I,QAAQJ,EAAME,YAAc,KAAtG,SAEDxI,EAAApD,EAAAqD,cAAA,MAAIC,UAAWoI,EAAME,cAAgBF,EAAMU,WAAa,WAAa,IACpEhJ,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,sBAAsBI,QAAS,kBAAMP,EAAK2I,QAAQJ,EAAMU,cAAxF,iBAtHoBa,IAAMlJ,YAoI/B0H,GAAWyB,aAAe,CACzBxR,MAAS,EACTmQ,YAAe,EACfK,SAAY,IAGET,UCtIT0B,8MAKLC,gBAAkB,WACjBrL,EAAKD,MAAMvK,QAAQnD,KAAK,4GAGC,IAAA6X,EAC2ChK,KAAKH,MAAjEuL,EADiBpB,EACjBoB,kBAAmBhD,EADF4B,EACE5B,iBAAkBiB,EADpBW,EACoBX,mBAE7C,OACClI,EAAApD,EAAAqD,cAACiK,GAAD,CAAiBvD,WAAW,4BAC1BsD,EAAkBhZ,IAAI,SAAAmH,GAAU,OAChC4H,EAAApD,EAAAqD,cAACkK,GAAD,CACCpZ,IAAKqH,EAAW1D,GAChB0D,WAAYA,EACZ6O,iBAAkBA,EAClBiB,mBAAoBA,EACpBC,eAAe,qDAOE,IAAAiC,EAC2CvL,KAAKH,MAA7D2L,EADaD,EACbC,cAAepD,EADFmD,EACEnD,iBAAkBiB,EADpBkC,EACoBlC,mBAEzC,OAAOtX,OAAOC,KAAKwZ,GAAepZ,IAAI,SAAC2K,EAAWgO,GACjD,IAAMU,EAAwBD,EAAczO,GACxC+K,EAA2B,SAAd/K,EAAuB,0BAA4B,2BAEpE,OACCoE,EAAApD,EAAAqD,cAAA,OAAKlP,IAAK6Y,GACPU,EAAsB5W,OAAS,GAChCsM,EAAApD,EAAAqD,cAACiK,GAAD,CAAiBtO,UAAWA,EAAW+K,WAAYA,GACjD2D,EAAsBrZ,IAAI,SAAAmH,GAAU,OACpC4H,EAAApD,EAAAqD,cAACkK,GAAD,CACCpZ,IAAKqH,EAAW1D,GAChB0D,WAAYA,EACZ6O,iBAAkBA,EAClBiB,mBAAoBA,+CAW3B,OACClI,EAAApD,EAAAqD,cAAA,UAAID,EAAApD,EAAAqD,cAAA,UACHD,EAAApD,EAAAqD,cAAA,QACCC,UAAsC,cAA3BrB,KAAKH,MAAM6L,YAA6B,WAAa,GAChE7V,GAAG,YACH4L,QAASzB,KAAKH,MAAM8L,gBAHrB,oBAKAxK,EAAApD,EAAAqD,cAAA,QACCC,UAAsC,kBAA3BrB,KAAKH,MAAM6L,YAAiC,WAAa,GACpE7V,GAAG,gBACH4L,QAASzB,KAAKH,MAAM8L,gBAHrB,2DAUF,IAAI9D,EAgBAxL,EARJ,MAN+B,cAA3B2D,KAAKH,MAAM6L,YACd7D,EAAkB7H,KAAK4L,sBACc,kBAA3B5L,KAAKH,MAAM6L,cACrB7D,EAAkB7H,KAAK6L,2BAGpB7L,KAAKH,MAAM/I,UAEbqK,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,uBAAf,eAQDhF,EADG2D,KAAKH,MAAMkJ,sBACM5H,EAAApD,EAAAqD,cAAA,UACnBC,UAAU,oCACVI,QAASzB,KAAKmL,iBAFK,sBAIVnL,KAAKH,MAAMxM,KAAK0D,gBACNoK,EAAApD,EAAAqD,cAAA,6MAAoMD,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAG,YAAT,WAApM,UAEAL,EAAApD,EAAAqD,cAAA,2DAAkDD,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAG,UAAT,UAAlD,OAAqFL,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAG,aAAT,kCAArF,KAIpBL,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,oBACdF,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KACCjF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAMlF,UAAU,iCACfF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOoF,OAAK,GACX3K,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,WACLya,eAAgB/L,KAAKH,MAAM9D,wBAC3B6F,SAAU5B,KAAKH,MAAMmM,4BAA6B,IAJpD,uCASF7K,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACElK,KAIH2D,KAAKH,MAAMxM,KAAK0D,iBAAmBoK,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,QACjDrB,KAAKiM,aACN9K,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cAEhBF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,eACbwG,GAEF1G,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aACdF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,eACdF,EAAApD,EAAAqD,cAAC8K,GAAD,CACCzS,MAAOuG,KAAKH,MAAMpG,MAClBwQ,SAAUjK,KAAKH,MAAMoK,SACrBN,YAAa3J,KAAKH,MAAM8J,YACxBW,aAActK,KAAKH,MAAMyK,0BApIFxI,aA6IfqB,gBAAW+H,ICpIpBiB,eACL,SAAAA,EAAYtM,GAAO,IAAAC,EAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAmM,IAClBrM,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAoa,GAAAhM,KAAAH,KAAMH,KAmEPmC,SAAW,SAAAxK,GAEVyK,aAAanC,EAAKoC,eAClBpC,EAAKoC,cAAgBC,WAAW,WAC/BrC,EAAKD,MAAM5K,SAASmN,EAAuB5K,KACzC,MAzEesI,EA4EnBsI,iBAAmB,SAAA5V,GAAuB,IAApBqD,EAAoBrD,EAApBqD,GAAIkH,EAAgBvK,EAAhBuK,UACzB+C,EAAKD,MAAM5K,SAASmX,GAAwC,CAAEvW,KAAIkH,gBA7EhD+C,EAgFnBuJ,mBAAqB,SAAArQ,GAAkB,IAAfnD,EAAemD,EAAfnD,GAAIQ,EAAW2C,EAAX3C,KACvBgW,QAAO,kDAAAnZ,OAAmDmD,KAE7DyJ,EAAKD,MAAM5K,SAASmX,GAAmCvW,KAnFtCiK,EAqGnB6L,eAAiB,SAACtL,GACjB,IAAMqL,EAAcrL,EAAEG,OAAO3K,GAEzBiK,EAAK/F,MAAM2R,cAAgBA,IAC9B5L,EAAKmB,SAAS,CACbyK,YAAeA,IAGhB5L,EAAKwM,cAAcjM,EAAEG,OAAO3K,IAC5BiK,EAAKlE,iBAAiB,CAAEE,QAAW4P,MA9GlB5L,EAkHnByM,oBAAsB,WACrBzM,EAAKD,MAAM5K,SAASzD,MAhHpBqO,EAAM5K,SAASzD,KAKf,IAAIsK,EAAU,gBACV+D,EAAMxM,KAAK0D,kBAEd+E,EADkB,IAAI0Q,gBAAgB3M,EAAM4M,SAASC,QACjC5Y,IAAI,YAAc,aAXrB,OAclBgM,EAAKwM,cAAcxQ,GAEnBgE,EAAK/F,MAAQ,CACZ2R,YAAe5P,EACfC,yBAA2B,EAC3B4N,YAAe,GAGhB7J,EAAKwK,aAAexK,EAAKwK,aAAa3J,KAAlB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACpBA,EAAK6M,gCAAkC7M,EAAK6M,gCAAgChM,KAArC5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACvCA,EAAK6L,eAAiB7L,EAAK6L,eAAehL,KAApB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAxBJA,mFA4BlBE,KAAKpE,iBAAiB,+CAGJkO,GAEfA,EAAUzW,KAAKC,KAAKC,QAAUyM,KAAKH,MAAMxM,KAAKC,KAAKC,OACrDyM,KAAKpE,iBAAiB,IAInBkO,EAAUzW,KAAK0D,kBAAoBiJ,KAAKH,MAAMxM,KAAK0D,kBACtDiJ,KAAKiB,SAAS,CACbyK,YAAe,kBAGhB1L,KAAKsM,cAAc,8DAKwI,IAAAM,EAAA5P,EAA1IlB,eAA0I,IAAA8Q,EAAhI5M,KAAKjG,MAAM8S,cAAqHD,EAAAE,EAAA9P,EAAtGjB,+BAAsG,IAAA+Q,EAA5E9M,KAAKjG,MAAMgC,wBAAiE+Q,EAAAC,EAAA/P,EAAxC2M,mBAAwC,IAAAoD,EAA1B/M,KAAKjG,MAAM4P,YAAeoD,EAG5J/M,KAAKH,MAAM5K,SAASmX,GAAmC,CACtDtQ,UACAC,0BACAC,MpBzEsB,GoB0EtBC,OpB1EsB,IoB0EX0N,EAAc,2CAIdA,GAEZ3J,KAAKiB,SAAS,CAAE0I,YAAeA,IAE3BA,IAAgB3J,KAAKjG,MAAM4P,aAC9B3J,KAAKpE,iBAAiB,CAAE+N,0EAwBzB,IAAM5N,GAA2BiE,KAAKjG,MAAMgC,wBAC5CiE,KAAKiB,SAAS,CACblF,wBAA2BA,IAG5BiE,KAAKpE,iBAAiB,CAAEG,kEAGXD,GACb,IAAIkR,EAAG,GAAA9Z,OAAM8M,KAAKH,MAAM4M,SAASQ,SAA1B,aAAA/Z,OAA8C4I,GACrDkE,KAAKH,MAAMvK,QAAQnD,KAAK6a,oCAqBxB,OACC7L,EAAApD,EAAAqD,cAAA,YACG1M,EAAQsL,KAAKH,MAAMhO,SAAYsP,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KAChCjF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAACkG,GAAD,CACCjT,QAASzC,EAAoBoO,KAAKH,MAAMhO,QACxCP,KAAK,QACLmQ,QAASzB,KAAKuM,yBAKjBvM,KAAKH,MAAM/I,WAAaqK,EAAApD,EAAAqD,cAAC8L,GAAD,MACzB/L,EAAApD,EAAAqD,cAAC+L,GAAD,CACC9Z,KAAM2M,KAAKH,MAAMxM,KACjBmY,cAAexL,KAAKH,MAAM2L,cAC1BJ,kBAAmBpL,KAAKH,MAAMuL,kBAC9BrC,oBAAqBG,GACrBkE,mBAAoBpN,KAAKoN,mBACzBhF,iBAAkBpI,KAAKoI,iBACvBiB,mBAAoBrJ,KAAKqJ,mBACzBvS,UAAWkJ,KAAKH,MAAM/I,UACtBiF,wBAAyBiE,KAAKjG,MAAMgC,wBACpC4Q,gCAAiC3M,KAAK2M,gCACtChB,eAAgB3L,KAAK2L,eACrBD,YAAa1L,KAAKjG,MAAM2R,YACxBjS,MAAOuG,KAAKH,MAAMpG,MAClBwQ,SpBtKoB,GoBuKpBN,YAAa3J,KAAKjG,MAAM4P,YACxBW,aAActK,KAAKsK,uBAtJLxI,aA4LJoB,eAdS,SAACnJ,GAAD,MAAY,CACnC1G,KAAQ0G,EAAM1G,KACdxB,OAAUkI,EAAMlI,OAChBiF,UAAaiD,EAAMR,WAAWzC,UAC9BsU,kBAAqB7N,GAAqBxD,GAC1CyR,cAAiB/N,GAAwB1D,GACzCN,MAASM,EAAMR,WAAWE,MAC1BC,KAAQK,EAAMR,WAAWG,KACzBC,SAAYI,EAAMR,WAAWI,WAMfuJ,CAAyBC,aAAWgJ,KC9L7CkB,uBACL,SAAAA,EAAYxN,GAAO,IAAAC,EAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAqN,IAClBvN,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAsb,GAAAlN,KAAAH,KAAMH,KAmEPuN,mBAAqB,SAACE,GACrBxN,EAAKD,MAAM5K,SAASoH,GAAiBiR,EAAexN,EAAKD,MAAMvK,WArE7CwK,EAoFnByM,oBAAsB,WACrBzM,EAAKD,MAAM5K,SAASzD,MAlFpBsO,EAAK/F,MAAQ,CACZ1D,KAAQ,GACR4I,YAAe,IAEhB,IAAK,IAAI9E,EAAE,EAAGA,GAAGpC,EAA+BoC,IAC/C2F,EAAK/F,MAAL,aAAA7G,OAAwBiH,EAAxB,UAAoC,GACpC2F,EAAK/F,MAAL,aAAA7G,OAAwBiH,EAAxB,iBAA2C,GAQ5C,GANA2F,EAAKiG,kBAAoBjG,EAAKiG,kBAAkBpF,KAAvB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACzBA,EAAK6E,aAAe7E,EAAK6E,aAAahE,KAAlB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACpBA,EAAKyN,OAASzN,EAAKyN,OAAO5M,KAAZ5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAEdD,EAAM5K,SAASzD,KAEXqO,EAAMxM,KAAK0D,gBAAiB,CAC/B,IAAMyW,EAAY,IAAIhB,gBAAgB3M,EAAM4M,SAASC,QACrD5M,EAAK/F,MAAM0T,mBAAqBD,EAAU1Z,IAAI,wBAC9CgM,EAAK/F,MAAM2T,qBAAuBF,EAAU1Z,IAAI,0BAChDgM,EAAK/F,MAAM4T,qBAAuBH,EAAU1Z,IAAI,0BAChDgM,EAAK/F,MAAM6T,mBAAqBJ,EAAU1Z,IAAI,wBAtB7B,OA0BdgM,EAAK/F,MAAM2T,uBACd5N,EAAK/F,MAAM1D,KAAOyJ,EAAK/F,MAAM2T,sBA3BZ5N,iFA+BDO,GACjBL,KAAKiB,SAALlP,OAAA0G,EAAA,EAAA1G,CAAA,GACEsO,EAAEG,OAAOnK,KAAOgK,EAAEG,OAAO7L,uCAIrB0L,GACNL,KAAKH,MAAMvK,QAAQnD,KAAK,0CAGZkO,GACZA,EAAEiC,iBAQF,IANA,IAAIgL,EAAgB,CACnBjX,KAAQ2J,KAAKjG,MAAM1D,KACnB4I,YAAee,KAAKjG,MAAMkF,YAC1BhG,WAAc,IAGNkB,EAAE,EAAGA,GAAGpC,EAA+BoC,IAC/C,GAAqC,KAAjC6F,KAAKjG,MAAL,aAAA7G,OAAwBiH,IAAa,CACxC,IAAM0T,EAAgB,CACrBxX,KAAQ2J,KAAKjG,MAAL,aAAA7G,OAAwBiH,EAAxB,UACR8E,YAAee,KAAKjG,MAAL,aAAA7G,OAAwBiH,EAAxB,iBACfd,MAASc,GAEVmT,EAAcrU,WAAW9G,KAAK0b,GAI5B7N,KAAKjG,MAAM0T,qBACdH,EAAcjT,kBAAoB2F,KAAKjG,MAAM0T,oBAG9CzN,KAAKoN,mBAAmBE,2FAYNxD,GAEdZ,MAAsClJ,KAAKH,MAAMxM,KAAKyD,WACzDkJ,KAAKH,MAAMvK,QAAQnD,KAAK,sDAWzB,IAFA,IAAI2b,EAAW,GAEN3T,EAAE,EAAGA,GAAGpC,EAA+BoC,IAC/C2T,EAAS3b,KACRgP,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aAAanP,IAAG,aAAAgB,OAAeiH,IAC7CgH,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKE,GAAG,IAAIpF,UAAU,mBACrBF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAG,aAAAzT,OAAeiH,EAAf,UAAV,gBAAiDA,GACjDgH,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,OACL+E,KAAI,aAAAnD,OAAeiH,EAAf,SACJtE,GAAE,aAAA3C,OAAeiH,EAAf,SACFyH,SAAW5B,KAAK+F,kBAChBpR,MAAQqL,KAAKjG,MAAL,aAAA7G,OAAwBiH,EAAxB,UACR0H,YAAY,gCAEbV,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,uBAGjBF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKE,GAAG,IAAIpF,UAAU,0BACrBF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAG,aAAAzT,OAAeiH,EAAf,iBAAV,gBAAwDA,EAAxD,gBACAgH,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,WACL+E,KAAI,aAAAnD,OAAeiH,EAAf,gBACJtE,GAAE,aAAA3C,OAAeiH,EAAf,gBACFyH,SAAW5B,KAAK+F,kBAChBpR,MAAQqL,KAAKjG,MAAL,aAAA7G,OAAwBiH,EAAxB,iBACR0H,YAAY,0BAEbV,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,yBAKpB,OAAOyM,mCAIP,OACC3M,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,CAAW/E,UAAU,sBAClB3M,EAAQsL,KAAKH,MAAMhO,SAAYsP,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KAChCjF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAACkG,GAAD,CACCjT,QAASzC,EAAoBoO,KAAKH,MAAMhO,QACxCP,KAAK,QACLmQ,QAASzB,KAAKuM,yBAKlBpL,EAAApD,EAAAqD,cAAA,uCACCpB,KAAKjG,MAAM2T,sBACXvM,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,qBAAoBF,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAE,eAAAtO,OAAiB8M,KAAKjG,MAAM6T,qBAAuB5N,KAAKjG,MAAM4T,sBAAzG,MAAyI3N,KAAKjG,MAAM2T,sBAErJvM,EAAApD,EAAAqD,cAACiF,GAAD,CAAezB,SAAW5E,KAAK2E,cAC9BxD,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKE,GAAG,IAAIpF,UAAU,mBACrBF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAI,QAAX,qBACAxF,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,OACL+E,KAAK,OACLuQ,UAAU,EACV/Q,GAAG,OACH+L,SAAW5B,KAAK+F,kBAChBpR,MAAQqL,KAAKjG,MAAM1D,KACnBwL,YAAY,8BAEbV,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,qBACfF,EAAApD,EAAAqD,cAAA,SAAOC,UAAU,wBAChBF,EAAApD,EAAAqD,cAAA,iCAKJD,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKE,GAAG,IAAIpF,UAAU,0BACrBF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAI,YAAX,eACAxF,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,WACL+E,KAAK,cACLR,GAAG,cACH+L,SAAW5B,KAAK+F,kBAChBpR,MAAQqL,KAAKjG,MAAMkF,YACnB4C,YAAY,qCAEbV,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,wBAIjBrB,KAAK+N,yBACN5M,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKE,GAAG,KACPtF,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,oBAAmBI,QAASzB,KAAKuN,QAAjE,UAGApM,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,mBAAhC,eAKEF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACHnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKE,GAAG,KACNzG,KAAKH,MAAMhO,OAAOmI,aAAemH,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,oBAAoB2F,MAAO,CAAEC,QAAW,UAAYjH,KAAKH,MAAMhO,OAAOmI,wBApM/F8H,cAuNhBoB,eALS,SAAAnJ,GAAK,MAAK,CACjC1G,KAAQ0G,EAAM1G,KACdxB,OAAUkI,EAAMlI,SAGFqR,CAAyBC,aAAWkK,mCC0CpCW,eArQd,SAAAA,EAAYnO,GAAO,IAAAC,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAgO,IAClBlO,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAic,GAAA7N,KAAAH,QAkFDuN,OAAS,WAER,IAAMU,EAAY,CACjBzN,OAAU,CACT0H,QAAW,CAAEnO,MAAS+F,EAAKD,MAAM,eACjClL,MAASmL,EAAK/F,MAAMmU,eAGtBpO,EAAKD,MAAMkG,kBAAkBkI,GAC7BnO,EAAKqO,eA5FarO,EA+FnBgE,SAAW,WAEV,IACMN,EADSQ,IAASC,YAATlS,OAAA6O,GAAA,EAAA7O,CAAA+N,IACKwE,cAAcxE,EAAK/F,MAAMzI,MACvC8S,EAAaZ,EAAKa,WAAWC,cAAc,qBAEjD,GAAKd,EAAKC,SAASgB,MAQlB,OAFAL,EAAWM,YAAc,IAElB,EAPP,IAAIrQ,EAAUmP,EAAKG,kBAGnB,OAFAS,EAAWM,YAAcrQ,GAElB,GAvGRyL,EAAK/F,MAAQ,CACZqU,WAAa,EACb/K,aAAe,EACf6K,aAAgB,GAChBG,gBAAkB,EAClB/c,KAAQuO,EAAMyO,SAAW,WAAa,UAGhB,IAAnBzO,EAAMyO,WACTxO,EAAK/F,MAAMwU,UAAW,GAGvBzO,EAAKsO,UAAYtO,EAAKsO,UAAUzN,KAAf5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACjBA,EAAK0O,QAAU1O,EAAK0O,QAAQ7N,KAAb5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACfA,EAAK2O,WAAa3O,EAAK2O,WAAW9N,KAAhB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAClBA,EAAK6E,aAAe7E,EAAK6E,aAAahE,KAAlB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAjBFA,kFAsBlB,IAAKE,KAAKH,MAAMyO,SACf,OAAO,EAGR,IAAMI,EAAU1O,KAAK2O,YACrB,IAAKD,EACJ,OAAO,EAGR,IAAML,EAAiBK,EAAQE,aAAeF,EAAQG,aAElDR,IAAmBrO,KAAKjG,MAAMsU,gBACjCrO,KAAKiB,SAAS,CAAEoN,eAAkBA,yCAKnCrO,KAAKiB,SAAS,CACbsN,UAAavO,KAAKjG,MAAMwU,uDAKzBvO,KAAK8O,gEAIL9O,KAAK8O,mDAGEzO,GAEK,MADDA,EAAE0O,SAAW1O,EAAE2O,QAEzBhP,KAAKoO,UAAU/N,qCAIPA,GACaA,EAAEG,OAAOyO,UAAU1O,SAAS,gBAGjDP,KAAKiB,SAAS,CACbiN,aAAgB7N,EAAEG,OAAOkE,cAG3B1E,KAAKmO,oDAIL,IAAMe,GAAqBlP,KAAKjG,MAAMqU,UAGF,oBAAzBpO,KAAKH,MAAMsP,WACrBnP,KAAKH,MAAMsP,UAAUD,GAGtBlP,KAAKiB,SAAS,CACbmN,UAAac,yCAkCF7O,GACZA,EAAEiC,iBAIF,IAAM8M,EAAe/O,EAAEG,OAAO8D,cAActE,KAAKjG,MAAMzI,MAEnD0O,KAAK8D,aACR9D,KAAKH,MAAMwP,eAAeD,GAC1BpP,KAAKmO,eAGNnO,KAAKiB,SAAS,CAAEoC,aAAe,0CAGlB,IAAAnC,EAAAlB,KAETuO,EAAW,GACXvO,KAAKjG,MAAMwU,WACdA,EAAW,YAGZ,IAAIe,GAAiB,GAEjBtP,KAAKjG,MAAMsU,gBAAkBrO,KAAKjG,MAAMwU,YAC3Ce,GAAiB,GAGlB,IAKI7N,EACA+M,EANAe,EAAiB,UACjBvP,KAAKjG,MAAMwU,WACdgB,EAAiB,WAKlB,IAAIC,EAAW,GAyBf,OAvBIxP,KAAKH,MAAMoJ,UACduG,EAAW,IACX/N,EAAQzB,KAAKoO,UACbI,EAAQxO,KAAKwO,SAIbrN,EAAApD,EAAAqD,cAAA,YACCD,EAAApD,EAAAqD,cAAA,QAAMC,UAAS,QAAAnO,OAAUqb,GACxB7M,IAAK,SAAAA,GAAG,OAAKR,EAAKyN,YAAcjN,GAChC8M,QAASA,EACT/M,QAASA,EACT+N,SAAUA,GAEVrO,EAAApD,EAAAqD,cAACqO,GAAA1R,EAAD,CACC2R,YAAY,EACZC,OAAQ3P,KAAKH,MAAMlL,QAEnB2a,GAAkBnO,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,WACnCiO,GAAkBnO,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,YAAYI,QAASzB,KAAKyO,YAAac,qCAQ5F,IAAIje,EAAO,OACP0O,KAAKH,MAAMyO,WACdhd,EAAO,YAGR,IAAIkU,EAAa,GACbxF,KAAKH,MAAMwB,YACdmE,EAAUzT,OAAA0M,EAAA,EAAA1M,CAAOiO,KAAKH,MAAMwB,kBACrBrB,KAAKH,MAAMwB,WAGfrB,KAAKjG,MAAMsJ,aACdmC,EAAWrT,KAAK,iBAGjB,IACIE,EADE+b,EAAYpO,KAAKjG,MAAMqU,UA6D7B,OA1DIpO,KAAKH,MAAMoJ,QAEb5W,EADG+b,EAEFjN,EAAApD,EAAAqD,cAAA,QACCsE,YAAU,EACVd,SAAU5E,KAAK2E,aACftD,UAAWmE,GAEXrE,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAK3G,KAAKH,MAAMhK,IAAKmK,KAAKH,MAAM+P,OACvCzO,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CAAOkO,WAAS,EACfve,KAAMA,EACN+E,KAAM2J,KAAKH,MAAMhK,GACjB+Q,SAAU5G,KAAKH,MAAM+G,SACrBkJ,aAAY9P,KAAKH,MAAM,cACvBkQ,gBAAe/P,KAAKH,MAAM,iBAC1BhK,GAAImK,KAAKH,MAAMhK,GACf+L,SAAU5B,KAAKH,MAAMkG,kBACrBpR,MAAOqL,KAAKH,MAAMlL,MAClBkN,YAAa7B,KAAKH,MAAMgC,cAEzBV,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,wBAIlBF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKlF,UAAU,YACdF,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,oBAAoBI,QAASzB,KAAKuN,QAAlE,UAGApM,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,mBAAhC,QAGAF,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,QAAhB,eAAmCF,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAG,yEAAT,gBAKd,KAArBxB,KAAKH,MAAMlL,MACPqL,KAAKgQ,cAGX7O,EAAApD,EAAAqD,cAAA,QACCC,UAAU,cACVmO,SAAS,IACT/N,QAASzB,KAAKoO,UACdI,QAASxO,KAAKwO,SACbxO,KAAKH,MAAMgC,aAKS,KAArB7B,KAAKH,MAAMlL,QACdtC,EAAO2N,KAAKgQ,eAIb7O,EAAApD,EAAAqD,cAAA,OAAKC,UAAS,uBAAAnO,OAAyBkb,GAAa,YACjD/b,UAhQ0ByP,aC4HjBmO,uBA5Hd,SAAAA,EAAYpQ,GAAO,IAAAC,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAiQ,IAClBnQ,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAke,GAAA9P,KAAAH,QAkBDkQ,wBAA0B,WACzBpQ,EAAKD,MAAMqQ,wBAAwBpQ,EAAKD,MAAM5G,aApB5B6G,EAuBnBqQ,SAAW,WACVrQ,EAAKD,MAAMuQ,mBAAmBtQ,EAAKD,MAAM5G,WAAWpD,KAxBlCiK,EA2BnBuQ,WAAa,WACZvQ,EAAKD,MAAMyQ,qBAAqBxQ,EAAKD,MAAM5G,WAAWpD,KAzBtDiK,EAAK/F,MAAQ,CACZwW,eAAiB,GAGlBzQ,EAAKoQ,wBAA0BpQ,EAAKoQ,wBAAwBvP,KAA7B5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAC/BA,EAAK0Q,iBAAmB1Q,EAAK0Q,iBAAiB7P,KAAtB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACxBA,EAAKqQ,SAAWrQ,EAAKqQ,SAASxP,KAAd5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAChBA,EAAKuQ,WAAavQ,EAAKuQ,WAAW1P,KAAhB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAVAA,gFAaFsO,GAChBpO,KAAKiB,SAAS,CACbsP,cAAiBnC,qCAiBlB,IAAIqC,GAAkB,EACa,KAA/BzQ,KAAKH,MAAM5G,WAAW5C,KACzBoa,GAAkB,EACRzQ,KAAKjG,MAAMwW,eAAiBpd,GAAMC,WAAW6F,WAAWC,OAAO8G,KAAKH,MAAM5G,WAAWpD,KAA6E,KAAtE1C,GAAMC,WAAW6F,WAAWC,OAAO8G,KAAKH,MAAM5G,WAAWpD,IAAIQ,OACnKoa,GAAkB,GAGnB,IAAIC,GAA2B,GAE3B1Q,KAAKH,MAAM5G,WAAWmF,iBACM,KAA/B4B,KAAKH,MAAM5G,WAAW5C,MACtB2J,KAAKjG,MAAMwW,gBACVvQ,KAAKH,MAAMoJ,WACZyH,GAA2B,GAG5B,IAOItS,EAPAuS,GAAyB,EAGzB3Q,KAAKH,MAAM5G,WAAWmF,iBAAmB8K,GAA8BlJ,KAAKH,MAAM5G,WAAWmF,gBAAgBvI,MAChH8a,GAAyB,GAKtBD,EACHtS,EAAmB+C,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,yCAAyCI,QAASzB,KAAKkQ,yBAAzE,6BACTS,IACVvS,EACC+C,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,oBACdF,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAE,eAAAtO,OAAiB8M,KAAKH,MAAM5G,WAAWmF,gBAAgBvI,KAAOmK,KAAKH,MAAM5G,WAAWmF,gBAAgB/H,KAA5G,QAIH,IAAIua,GAAS,EACTC,GAAW,EAaf,OAXK7Q,KAAKH,MAAMoJ,SACgB,KAA/BjJ,KAAKH,MAAM5G,WAAW5C,MACrBoa,EAGyC,IAAhCzQ,KAAKH,MAAM5G,WAAWI,MAChCuX,GAAS,EACC5Q,KAAKH,MAAM5G,WAAWI,QAAUtB,IAC1C8Y,GAAW,IALXD,GAAS,EACTC,GAAW,GAQX1P,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,wBACdF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,qBACdF,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,SAASrB,KAAKH,MAAM5G,WAAWI,MAA/C,KAA6D8H,EAAApD,EAAAqD,cAAC0P,GAAD,CAC5D7H,QAASjJ,KAAKH,MAAMoJ,QACpB5S,KAAI,GAAAnD,OAAK8M,KAAKH,MAAM5G,WAAWI,MAA3B,SACJuW,MAAM,YACN/N,YAAY,kCACZiO,aAAA,GAAA5c,OAAe8M,KAAKH,MAAM5G,WAAWI,MAArC,SACA0W,gBAAe/P,KAAKH,MAAM5G,WAAWpD,GACrCA,GAAE,GAAA3C,OAAK8M,KAAKH,MAAM5G,WAAWI,MAA3B,SACF0M,kBAAmB/F,KAAKH,MAAMkG,kBAC9BsJ,eAAgBrP,KAAKH,MAAMwP,eAC3BF,UAAWnP,KAAKwQ,iBAChB7b,MAAOqL,KAAKH,MAAM5G,WAAW5C,QAG9B+H,EACAqS,GACAtP,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,mBACdF,EAAApD,EAAAqD,cAAC0P,GAAD,CACCxC,UAAU,EACVrF,QAASjJ,KAAKH,MAAMoJ,QACpB5S,KAAI,GAAAnD,OAAK8M,KAAKH,MAAM5G,WAAWI,MAA3B,gBACJwI,YAAY,kCACZ+N,MAAM,mBACNE,aAAA,GAAA5c,OAAe8M,KAAKH,MAAM5G,WAAWI,MAArC,gBACA0W,gBAAe/P,KAAKH,MAAM5G,WAAWpD,GACrCA,GAAE,GAAA3C,OAAK8M,KAAKH,MAAM5G,WAAWI,MAA3B,gBACF0M,kBAAmB/F,KAAKH,MAAMkG,kBAC9BsJ,eAAgBrP,KAAKH,MAAMwP,eAC3B1a,MAAOqL,KAAKH,MAAM5G,WAAWgG,eAI/B2R,GAAUzP,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,4BAA4BI,QAASzB,KAAKmQ,UAA5D,MAEVU,GAAY1P,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,8BAA8BI,QAASzB,KAAKqQ,YAA9D,gBAtHEvO,cCHbiP,eACL,SAAAA,EAAYlR,GAAO,IAAAC,EAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAA+Q,IAClBjR,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAgf,GAAA5Q,KAAAH,KAAMH,KAgCPuQ,mBAAqB,SAAChY,GACrB0H,EAAKD,MAAM5K,SAAS+b,GAAoC,CAAE5Y,mBAlCxC0H,EAqCnBwQ,qBAAuB,SAAClY,GACvB0H,EAAKD,MAAM5K,SAAS+b,GAAsC,CAAE5Y,mBAtC1C0H,EAqEnBiG,kBAAoB,SAAC1F,GACpBP,EAAKmB,SAALlP,OAAA0G,EAAA,EAAA1G,CAAA,GACEsO,EAAEG,OAAO0H,QAAQnO,MAAQsG,EAAEG,OAAO7L,SAvElBmL,EA2EnBuP,eAAiB,SAACX,GACjB,IAAMtW,EAAesW,EAAQxG,QAAQ+I,SAI/B5Y,EADcqW,EAAQxG,QAAQnO,MAAMmX,MAAM,KACf,GAC3Bvc,EAAQ+Z,EAAQ/Z,MAEtBmL,EAAKD,MAAM5K,SAAS+b,GAAoC5Y,EAAcC,EAAc1D,KAnFlEmL,EAsFnBqR,WAAa,WACZrR,EAAKmB,SAAS,CAAEmQ,uBAA0BtR,EAAK/F,MAAMqX,yBApFrDtR,EAAK/F,MAAQ,GAKb,IAAK,IAAII,EAAE,EAAGA,GAAIpC,EAA+BoC,IAChD2F,EAAK/F,MAAL,GAAA7G,OAAciH,EAAd,UAA0B,GAC1B2F,EAAK/F,MAAL,GAAA7G,OAAciH,EAAd,iBAAiC,GAKlC,IAAMtB,EAAciH,EAAKD,MAAMhH,YAfb,OAiBlB9G,OAAOC,KAAK6G,GAAa5G,QAAQ,SAACC,GACjC,GAAI2G,EAAY3G,GAAKmH,OAASR,EAAY3G,GAAKmH,OAAStB,EAA+B,CACtF,IAAMsB,EAAQR,EAAY3G,GAAKmH,MAE/ByG,EAAK/F,MAAL,GAAA7G,OAAcmG,EAAd,QAA4BR,EAAY3G,GAAK2D,GAC7CiK,EAAK/F,MAAL,GAAA7G,OAAcmG,EAAd,UAA8BR,EAAY3G,GAAKmE,KAC/CyJ,EAAK/F,MAAL,GAAA7G,OAAcmG,EAAd,iBAAqCR,EAAY3G,GAAK+M,YAGlDpG,EAAY3G,GAAKkM,kBACpB0B,EAAK/F,MAAL,GAAA7G,OAAcmG,EAAd,qBAAyCR,EAAY3G,GAAKkM,oBA3B3C0B,kFAyCAgK,GAElB,IADA,IAAI9K,EAAS,GACJ7E,EAAE,EAAGA,EAAE6F,KAAKH,MAAMhH,YAAYhE,OAAQsF,IAAK,CACnD,IAAMlB,EAAa+G,KAAKH,MAAMhH,YAAYsB,GAI1C,GAAI2P,EAAUjR,YAAYsB,GAAGtE,KAAOmK,KAAKH,MAAMhH,YAAYsB,GAAGtE,IAC7DiU,EAAUjR,YAAYsB,GAAGiE,kBAAoB4B,KAAKH,MAAMhH,YAAYsB,GAAGiE,gBAAiB,CACxF,IAAM/E,EAAQJ,EAAWI,MAGzB2F,EAAM,GAAA9L,OAAImG,EAAJ,QAAkBJ,EAAWpD,GACnCmJ,EAAM,GAAA9L,OAAImG,EAAJ,UAAoBJ,EAAW5C,KACrC2I,EAAM,GAAA9L,OAAImG,EAAJ,iBAA2BJ,EAAWgG,YAI5CD,EAAM,GAAA9L,OAAImG,EAAJ,qBAA+BJ,EAAWmF,iBAK9CrM,OAAOC,KAAKgN,GAAQnK,OAAS,GAChCmL,KAAKiB,SAASjC,mDA2Bf,IADA,IAAI8O,EAAW,GACN3T,EAAE,EAAGA,GAAGpC,EAA+BoC,IAAK,CACpD,IAAM9D,EAAO2J,KAAKjG,MAAL,GAAA7G,OAAciH,EAAd,UACP8O,EAAUjJ,KAAKH,MAAMoJ,SACvB5S,GAAQ4S,IACX6E,EAAS3b,KACRgP,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,CAAKpU,IAAG,aAAAgB,OAAeiH,IACtBgH,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAACiQ,GAAD,CACCnf,IAAG,aAAAgB,OAAeiH,GAClBlB,WAAY,CACXpD,GAAMmK,KAAKjG,MAAL,GAAA7G,OAAciH,EAAd,QACNd,MAASc,EACT9D,KAAQA,EACR4I,YAAee,KAAKjG,MAAL,GAAA7G,OAAciH,EAAd,iBACfiE,gBAAmB4B,KAAKjG,MAAL,GAAA7G,OAAciH,EAAd,sBAEpB4L,kBAAmB/F,KAAK+F,kBACxBsJ,eAAgBrP,KAAKqP,eACrB9V,WAAYyG,KAAKH,MAAMtG,WACvB0P,QAASA,EACTiH,wBAAyBlQ,KAAKH,MAAMqQ,wBACpCE,mBAAoBpQ,KAAKoQ,mBACzBE,qBAAsBtQ,KAAKsQ,0BAOjC,OAAOxC,mCAIP,OACC3M,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,oBACbrB,KAAKsR,gCAhIoBxP,aAsIfoB,iBAAU6N,ICvDVQ,eAhFd,SAAAA,EAAY1R,GAAO,IAAAC,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAuR,IAClBzR,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAwf,GAAApR,KAAAH,QAEKjG,MAAQ,CACZyX,gBAAmB3R,EAAM2R,iBAG1B1R,EAAK2R,mBAAqB3R,EAAK2R,mBAAmB9Q,KAAxB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAC1BA,EAAK4R,kBAAoB5R,EAAK4R,kBAAkB/Q,KAAvB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IARPA,mFAYlBE,KAAKiB,SAAS,CACbuQ,iBAAoBxR,KAAKjG,MAAMyX,6DAIbnR,GACnBL,KAAKH,MAAM4R,mBAAmB,CAAElY,WAAcyG,KAAKH,MAAMtG,WAAYF,MAASgH,EAAEG,OAAO0H,QAAQ7O,MAAOmB,kBAAqB6F,EAAEG,OAAO0H,QAAQyJ,gEAGzH,IAAAzQ,EAAAlB,KACb4R,EAA0BC,SAAS7R,KAAKH,MAAM+R,yBAC9CzY,EAAe6G,KAAKH,MAAMtG,WAAW1D,GACrCic,EAAuB9R,KAAKH,MAAMiS,qBAExC,OACC3Q,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,eACbrB,KAAKH,MAAMkS,wBAAwB5Y,GAAc/G,IAAI,SAAC6G,GACtD,IAEI+Y,EAFEC,EAAyB9Y,IAAiB2Y,GAA0B7Y,EAAWI,QAAUuY,EAI/F,GAAI3Y,EAAWuB,kBAAmB,CACjC,IAAM4D,EAAkB8C,EAAKrB,MAAMqS,wBAAwB3X,KAAK,SAAChB,GAAD,OAAgBA,EAAW1D,KAAOoD,EAAWuB,oBAC7GwX,EACC7Q,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,oBAAhB,KAAsCjD,EAAgB/H,MAIxD,GAAI4C,EAAW5C,KACd,OAAQ8K,EAAApD,EAAAqD,cAAA,OAAKlP,IAAK+G,EAAWpD,GAAIwL,UAAS,cAAAnO,OAAgB+e,EAAuB,WAAa,KAC7F9Q,EAAApD,EAAAqD,cAAA,QACCK,QAASP,EAAKuQ,mBACdU,aAAYlZ,EAAWI,MACvB+Y,yBAAwBnZ,EAAWuB,mBACnC2G,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,SAASpI,EAAWI,MAApC,KAAmDJ,EAAW5C,MAAa2b,uCAUjF,IAAM3b,EAAO2J,KAAKH,MAAMtG,WAAWlD,KAG7Bgc,EAAwBrS,KAAKH,MAAMtG,WAAW1D,KAAOmK,KAAKH,MAAMiS,qBAGlEQ,EAA4B,IAMhC,OAJItS,KAAKjG,MAAMyX,kBACdc,EAA4B,KAI5BnR,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,CAAKjF,UAAS,kBAAAnO,OAAoBmf,EAAuB,WAAa,KACrElR,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,iCAAiCI,QAASzB,KAAK0R,mBAAoBY,GACrFnR,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,QAAQhL,GACtB2J,KAAKjG,MAAMyX,iBAAmBxR,KAAKuS,6BA1EbzQ,aCMtB0Q,uBACL,SAAAA,EAAY3S,GAAO,IAAAC,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAwS,IAClB1S,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAygB,GAAArS,KAAAH,KAAMH,KAgBP4S,mBAAqB,SAAC3I,IAEhBA,EAAUvQ,WAAWc,oBAAsByF,EAAKD,MAAMtG,WAAWc,mBAExB,IAA7CyP,EAAUoI,wBAAwBrd,QAA8D,IAA9CiL,EAAKD,MAAMqS,wBAAwBrd,SACrFiL,EAAK4S,kBAtBY5S,EAmCnB6S,gBAAkB,WACjB7S,EAAKmB,SAAS,CACb2R,eAAiB,IAGlBzQ,WAAW,WACV,IACMuM,EADU1K,IAASC,YAATlS,OAAA6O,GAAA,EAAA7O,CAAA+N,IACQwE,cAAc,kCAClCoK,GACHA,EAAQmE,kBAEP,MA9Ce/S,EAiDnBgT,cAAgB,WACfhT,EAAK4S,kBAlDa5S,EAqDnBiT,YAAc,WAGb,GAAIjT,EAAK/F,MAAM6T,qBAAuB9N,EAAKD,MAAMtG,WAAW1D,GAI5D,GAAKiK,EAAK/F,MAAM0T,mBAQhB,GAAI3N,EAAK/F,MAAMiZ,oCAAf,CACC,IAAM5U,EAAkB0B,EAAKD,MAAMqS,wBAAwB3X,KAAK,SAAChB,GAAD,OAAgBA,EAAW1D,KAAOiK,EAAK/F,MAAMiZ,sCAG7G,GAAIlT,EAAK/F,MAAM0T,qBAAuB3N,EAAKD,MAAMtG,WAAWc,kBAC3D,OAEIgS,QAAO,2BAAAnZ,OAA4BkL,EAAgB/H,KAA5C,wEACVyJ,EAAKmT,2BAMRnT,EAAKmT,2BArBA5G,QAAO,IAAAnZ,OAAK4M,EAAKD,MAAMtG,WAAWlD,KAA3B,8EACVyJ,EAAKmT,uBA9DWnT,EA6FnBoT,yBAA2B,SAAA1gB,GAA8C,IAA3C+G,EAA2C/G,EAA3C+G,WAAYF,EAA+B7G,EAA/B6G,MAAOmB,EAAwBhI,EAAxBgI,kBAG5CjB,EAAW1D,KAAOiK,EAAK/F,MAAM6T,oBAAsBrU,EAAWN,WAAWI,EAAM,KAAOyG,EAAK/F,MAAM0T,mBACpG3N,EAAKmB,SAAS,CACbwM,mBAAsB,KACtBG,mBAAsB,KACtBoF,oCAAuC,KACvCpB,wBAA2B,OAG5B9R,EAAKmB,SAAS,CACbwM,mBAAsBlU,EAAWN,WAAWI,EAAM,GAClDuU,mBAAsBrU,EAAW1D,GACjCmd,oCAAuCxY,EACvCoX,wBAA2BvY,KAzG7ByG,EAAK/F,MAAQ,CACZiZ,oCAAuC,MAGxClT,EAAKoT,yBAA2BpT,EAAKoT,yBAAyBvS,KAA9B5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAChCA,EAAKgT,cAAgBhT,EAAKgT,cAAcnS,KAAnB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACrBA,EAAKiT,YAAcjT,EAAKiT,YAAYpS,KAAjB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACnBA,EAAK6S,gBAAkB7S,EAAK6S,gBAAgBhS,KAArB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAVLA,mFAclBE,KAAK0S,0DAaL1S,KAAKiB,SAAS,CACb2R,eAAiB,EACjBhB,wBAA2B5R,KAAK4R,0BAChCnE,mBAAsBzN,KAAKH,MAAMtG,WAAWc,kBAC5CuT,mBAAsB5N,KAAKH,MAAM+N,mEAuDlC5N,KAAKH,MAAM5K,SAASmX,GACnBpM,KAAKH,MAAMtG,WAAW1D,GACtB,uBACAmK,KAAKjG,MAAM0T,qBACZzN,KAAK0S,mEAuBoB,IAErBrZ,EAFqB6H,EAAAlB,KAGzB,GAAIA,KAAKH,MAAM+N,mBAAoB,CAClC,IAAIH,EAAqBzN,KAAKH,MAAMtG,WAAWc,mBAOhC,KAFfhB,EAJyB2G,KAAKH,MAAMqS,wBAAwB3X,KAAK,SAAAhB,GAAU,OAAIA,EAAW1D,KAAOqL,EAAKrB,MAAM+N,qBAEzD3U,WAEfka,QAAQ1F,MAG3CpU,GAAS,GAIX,OAAOA,8CAGY,IAAA+Z,EAAApT,KACnB,OACCmB,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,eACdF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAAA,wEACCpB,KAAKH,MAAMqS,wBAAwB9f,IAAI,SAAAmH,GAKvC,GAJ4B6Z,EAAKvT,MAAMkS,wBAAwBxY,EAAW1D,IAAIhB,OAIpD,GAAM0E,EAAW1D,KAAOud,EAAKvT,MAAMtG,WAAW1D,GAAK,CAC5E,IAAM2b,EAAmBjY,EAAW1D,KAAOud,EAAKrZ,MAAM6T,mBAEtD,OAAQzM,EAAApD,EAAAqD,cAACiS,GAAD,CACP9Z,WAAYA,EACZ2Y,wBAAyBkB,EAAKvT,MAAMqS,wBACpCH,wBAAyBqB,EAAKvT,MAAMkS,wBACpC7f,IAAKqH,EAAW1D,GAChBic,qBAAsBsB,EAAKrZ,MAAM6T,mBACjCgE,wBAAyBwB,EAAKrZ,MAAM6X,wBACpCH,mBAAoB2B,EAAKF,yBACzB1B,gBAAiBA,0CAavB,IAAI8B,EAuBJ,OApBCA,EADGtT,KAAKjG,MAAM6Y,cAEbzR,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,YACdF,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,oBAAoBI,QAASzB,KAAK8S,eAApD,UACA3R,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,kBAAkBI,QAASzB,KAAK+S,aAAlD,WAMH5R,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,YACdF,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,2BAA2BI,QAASzB,KAAK2S,iBAA3D,UAOJxR,EAAApD,EAAAqD,cAAA,OAAKC,UAAS,aAAAnO,OAAe8M,KAAKjG,MAAM6Y,cAAgB,OAAS,KAC/DU,EACAtT,KAAKjG,MAAM6Y,eAAiB5S,KAAKuT,4BAjMdzR,cAuMToB,iBAAUsP,IC1LnBgB,uBACL,SAAAA,EAAY3T,GAAO,IAAAC,EAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAwT,IAClB1T,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAyhB,GAAArT,KAAAH,QAuDDyT,kBAAoB,SAAC5T,GACpB,IAAMhK,EAAKgK,EAAM6T,MAAMC,OAAO9d,GAI9B,OAFAgK,EAAM5K,SAASmX,GAAwCvW,IACvDgK,EAAM5K,SAASzD,KACRqE,GA7DWiK,EAgEnB8T,iBAAmB,WAGb9T,EAAKD,MAAMtG,aAGhBuG,EAAKD,MAAM5K,SAASmX,GAAqCtM,EAAKD,MAAMtG,WAAWkD,aAC/EqD,EAAKD,MAAM5K,SAASzD,OAvEFsO,EA0EnBsI,iBAAmB,SAAA5V,GAAuB,IAApBqD,EAAoBrD,EAApBqD,GAAIkH,EAAgBvK,EAAhBuK,UACzB+C,EAAKD,MAAM5K,SAASmX,GAAwC,CAAEvW,KAAIkH,gBA3EhD+C,EA8EnBuJ,mBAAqB,WACpB,IAAMxT,EAAKiK,EAAKD,MAAMtG,WAAW1D,GAC3BQ,EAAOyJ,EAAKD,MAAMtG,WAAWlD,KAEnC,GAAIgW,QAAO,kDAAAnZ,OAAmDmD,EAAnD,MACX,CAIE,GAHAyJ,EAAKD,MAAM5K,SAASmX,GAAmCvW,IAGnDiK,EAAKD,MAAMvB,kBACV4K,GAA8BpJ,EAAKD,MAAMvB,iBAAiBzI,IAE7D,YADAiK,EAAKD,MAAMvK,QAAQnD,KAAnB,eAAAe,OAAuC4M,EAAKD,MAAMvB,iBAAiBzI,KAMrEiK,EAAKD,MAAMvK,QAAQnD,KAAK,OA/FR2N,EAmGnBiG,kBAAoB,SAAC1F,GACpBP,EAAKmB,SAALlP,OAAA0G,EAAA,EAAA1G,CAAA,GACEsO,EAAEG,OAAO0H,QAAQnO,MAAQsG,EAAEG,OAAO7L,SArGlBmL,EAyGnBuP,eAAiB,SAACX,GACjB,IAAMvV,EAAeuV,EAAQxG,QAAQ+I,SAK/B5Y,EADcqW,EAAQxG,QAAQnO,MAAMmX,MAAM,KACf,GAC3Bvc,EAAQ+Z,EAAQ/Z,MAEtBmL,EAAKD,MAAM5K,SAASmX,GAAmCjT,EAAcd,EAAc1D,KAlHjEmL,EAqHnBoQ,wBAA0B,SAACjX,GAC1B6G,EAAKD,MAAMvK,QAAQnD,KAAnB,uCAAAe,OAA+D+F,EAAWpD,GAA1E,4BAAA3C,OAAuG+F,EAAW5C,KAAlH,4BAAAnD,OAAiJ4M,EAAKD,MAAMtG,WAAWlD,KAAvK,0BAAAnD,OAAoM4M,EAAKD,MAAMtG,WAAW1D,MAtHxMiK,EAyHnBsI,iBAAmB,SAAApP,GAAuB,IAApBnD,EAAoBmD,EAApBnD,GAAIkH,EAAgB/D,EAAhB+D,UACzB+C,EAAKD,MAAM5K,SAASmX,GAAwC,CAAEvW,KAAIkH,gBA1HhD+C,EA6HnByM,oBAAsB,WACrBzM,EAAKD,MAAM5K,SAASzD,MA1HpBsO,EAAK2T,kBAAoB3T,EAAK2T,kBAAkB9S,KAAvB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACzB,IAAMjK,EAAKiK,EAAK2T,kBAAkB5T,GALhB,OAOlBC,EAAK/F,MAAQ,CACZlE,KACA+c,eAAiB,GAGlB9S,EAAKuJ,mBAAqBvJ,EAAKuJ,mBAAmB1I,KAAxB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IAZRA,kFAeAgK,GAClB,GAAIA,EAAUhT,YAAckJ,KAAKH,MAAM/I,UAAW,CAEjD,IAAMgS,EAAoBI,GAA8BlJ,KAAKjG,MAAMlE,IAC7DgT,EAAoBK,GAA8BlJ,KAAKjG,MAAMlE,IAE9DgT,GACJ7I,KAAKH,MAAMvK,QAAQnD,KAAK,KAGzB6N,KAAK4T,mBAEL5T,KAAKiB,SAAS,CACb4S,QAAWhL,EACXI,QAAWH,IAGTD,GACF7I,KAAKiB,SAAS,CACb6S,gBAAmB9T,KAAKH,MAAMtG,WAAWlD,KACzC0d,uBAA0B/T,KAAKH,MAAMtG,WAAW0F,cAMnD,GAAI6K,EAAU4J,MAAMC,OAAO9d,KAAOmK,KAAKH,MAAM6T,MAAMC,OAAO9d,GAAI,CAC7D,IAAMA,EAAKmK,KAAKyT,kBAAkBzT,KAAKH,OACvCG,KAAKiB,SAAS,CACbpL,OAMEiU,EAAUzW,KAAK0D,kBAAoBiJ,KAAKH,MAAMxM,KAAK0D,kBACtDiJ,KAAKH,MAAM5K,SAASmX,GAAwCpM,KAAKjG,MAAMlE,KACvEmK,KAAKH,MAAM5K,SAASzD,2CA8ErB,GAAKwO,KAAKH,MAAMtG,WAAhB,CAIA,IAAIya,GAAqB,EACrBC,EAAqB,GAErBjU,KAAKjG,MAAMkP,SAAWjJ,KAAKH,MAAMvB,mBAChC0B,KAAKH,MAAMtG,WAAWwD,YAAciD,KAAKH,MAAMvB,iBAAiBvB,WACnEkX,EAAqB,yDACrBD,GAAqB,IACVhU,KAAKH,MAAMtG,WAAWwD,WAAaiD,KAAKH,MAAMvB,iBAAiBvB,YAC1EkX,EAAqB,yDACrBD,GAAqB,IAIvB,IAEIpG,EAFAsG,EAAc/S,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,eAAf,kBAQlB,OALIrB,KAAKH,MAAMvB,mBACdsP,EAAqB5N,KAAKH,MAAMvB,iBAAiBzI,GAEjDqe,EAAc/S,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,eAAcF,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAE,eAAAtO,OAAiB8M,KAAKH,MAAMvB,iBAAiBzI,KAAOmK,KAAKH,MAAMvB,iBAAiBjI,MAArH,MAAqI2J,KAAKH,MAAMvF,iBAAiBjE,OAG/K8K,EAAApD,EAAAqD,cAAA,YACG1M,EAAQsL,KAAKH,MAAMhO,SAAYsP,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KAChCjF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAACkG,GAAD,CACCjT,QAASzC,EAAoBoO,KAAKH,MAAMhO,QACxCP,KAAK,QACLmQ,QAASzB,KAAKuM,yBAKjBvM,KAAKH,MAAM/I,WAAaqK,EAAApD,EAAAqD,cAAC8L,GAAD,MACxBlN,KAAKH,MAAMtG,aAAeyG,KAAKH,MAAM/I,WACrCqK,EAAApD,EAAAqD,cAAA,WACCD,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KACCjF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKlF,UAAU,mBACdF,EAAApD,EAAAqD,cAAC0P,GAAD,CACC7H,QAASjJ,KAAKjG,MAAMkP,QACpBrC,UAAU,EACVvQ,KAAM,kBACNwL,YAAY,wCACZ+N,MAAM,oBACNE,aAAY,kBACZC,gBAAe/P,KAAKH,MAAMtG,WAAW1D,GACrCA,GAAG,kBACHkQ,kBAAmB/F,KAAK+F,kBACxBsJ,eAAgBrP,KAAKqP,eACrB1a,MAAOqL,KAAKjG,MAAM+Z,kBAElB9T,KAAKjG,MAAMkP,SACX9H,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,8BACdF,EAAApD,EAAAqD,cAACgI,GAAD,CACCjQ,aAAc6G,KAAKH,MAAMtG,WAAW1D,GACpCmS,SAAUhI,KAAKH,MAAMtG,WAAWwD,UAChCqL,iBAAkBpI,KAAKoI,mBAExBjH,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,iBAAiBI,QAASzB,KAAKqJ,oBAAjD,QAKJlI,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACEvG,KAAKjG,MAAMkP,SAAWjJ,KAAKH,MAAMqS,wBAAwBrd,OAAS,GACnEsM,EAAApD,EAAAqD,cAAC+S,GAAD,CACC5a,WAAYyG,KAAKH,MAAMtG,WACvBqU,mBAAoBA,EACpBsE,wBAAyBlS,KAAKH,MAAMqS,wBACpCH,wBAAyB/R,KAAKH,MAAMkS,0BAEpCmC,IAGFF,GACA7S,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,mBAAmB4S,KAIrC9S,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKlF,UAAU,0BACdF,EAAApD,EAAAqD,cAAC0P,GAAD,CACCxC,UAAU,EACVrF,QAASjJ,KAAKjG,MAAMkP,QACpB5S,KAAM,yBACNwL,YAAY,qDACZ+N,MAAM,cACNE,aAAY,yBACZC,gBAAe/P,KAAKH,MAAMtG,WAAW1D,GACrCA,GAAG,yBACHkQ,kBAAmB/F,KAAK+F,kBACxBsJ,eAAgBrP,KAAKqP,eACrB1a,MAAOqL,KAAKjG,MAAMga,4BAKtB5S,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KACEpG,KAAKH,MAAMuU,2BACXjT,EAAApD,EAAAqD,cAACiT,GAAD,CACCxb,YAAamH,KAAKH,MAAMuU,0BACxB7a,WAAYyG,KAAKH,MAAMtG,WAAW1D,GAClCoT,QAASjJ,KAAKjG,MAAMkP,QACpBiH,wBAAyBlQ,KAAKkQ,wBAC9BE,mBAAoBpQ,KAAKoQ,mBACzBE,qBAAsBtQ,KAAKsQ,4DAalC,IAAIgE,EAOJ,OAJCA,EADGtU,KAAKjG,MAAM8Z,QACJ7T,KAAKuU,aAELpT,EAAApD,EAAAqD,cAAA,2FAGVD,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,qBACZiT,UA3Q0BxS,cA+SjBoB,eArBS,SAACnJ,EAAOya,GAC/B,IAGMjb,EAAakP,GAAqB,CAAEC,aAHtB3O,EAAMR,WAAWL,OAGkCyP,SAAY,KAAMhU,MAAS6f,EAASd,MAAMC,OAAO9d,KAElH4e,EAAgCrI,GAAmDrS,EAAnDqS,CAA0D7S,GAEhG,MAAQ,CACPlG,KAAQ0G,EAAM1G,KACdxB,OAAUkI,EAAMlI,OAChBiF,UAAaiD,EAAMR,WAAWzC,UAC9ByC,WAAcA,EACd6a,0BAA6BhI,GAA8CrS,EAA9CqS,CAAqD7S,GAClF+E,iBAAoBmW,EAA8BnW,iBAClDhE,iBAAoBma,EAA8Bna,iBAClD4X,wBAA2B9F,GAAgDrS,GAC3EgY,wBAA2B2C,GAAqC3a,KAInDmJ,CAAyBsQ,IC1TlCmB,eACL,SAAAA,IAAc,IAAA7U,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAA2U,IACb7U,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAA4iB,GAAAxU,KAAAH,QACKjG,MAAQ,CACZlI,OAAU,IAGXiO,EAAKnJ,sBAAwBmJ,EAAKnJ,sBAAsBgK,KAA3B5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IANhBA,yFASYqG,GACrBA,EAAU9S,KAAK0D,iBAClBiJ,KAAKH,MAAMvK,QAAQnD,KAAK,iDAKrB6N,KAAKH,MAAMxM,KAAK0D,iBACnBiJ,KAAKH,MAAMvK,QAAQnD,KAAK,KAEzB6N,KAAKH,MAAM5K,S9BuML,CACN3D,KAvNoC,2E8BmBpC0O,KAAKH,MAAM5K,SAAS5B,sCAIpB,IAAMyC,EAAgBkK,KAAKH,MAAMxM,KAAKC,KAAKwC,cACrC8e,EAAe9e,EAAgB,WAAY,aACjD,OACCqL,EAAApD,EAAAqD,cAAA,YACG1M,EAAQsL,KAAKH,MAAMhO,SAAYsP,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KAChCjF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAACkG,GAAD,CACCjT,QAASzC,EAAoBoO,KAAKH,MAAMhO,QACxCP,KAAK,QACLmQ,QAASzB,KAAKuM,yBAKlBpL,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KACEpG,KAAKH,MAAM/I,WAAaqK,EAAApD,EAAAqD,cAAC8L,GAAD,MACzB/L,EAAApD,EAAAqD,cAAA,wBACAD,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAAA,wBAAgBpB,KAAKH,MAAMxM,KAAKC,KAAKqC,YAGvCwL,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAG,mBAAT,qBAGFL,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAAA,6BAAqBpB,KAAKH,MAAMxM,KAAKC,KAAKsC,OAC1CuL,EAAApD,EAAAqD,cAAA,sBAAcwT,IACZ9e,GAAiBqL,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,kBAAiBI,QAASzB,KAAKrJ,uBAA/D,+BAKpBqJ,KAAKH,MAAMxM,KAAK6D,kBAAqBiK,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,kBAAf,yCAAuErB,KAAKH,MAAMxM,KAAKC,KAAKsC,MAA5F,kGACrCoK,KAAKH,MAAMxM,KAAKsL,6BAAgCwC,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,kBAAf,qBAAmDrB,KAAKH,MAAMxM,KAAKC,KAAKsC,MAAxE,wCAlEhCkM,aAyFPoB,eARS,SAACnJ,GAAD,MAAY,CACnC1G,KAAQ0G,EAAM1G,KACdxB,OAAUkI,EAAMlI,OAChBiF,UAAaiD,EAAMR,WAAWzC,UAC9BH,sBAAyBtD,EACzBqD,oBAAuBrD,IAGT6P,CAAyByR,IC1FlCE,eACL,SAAAA,EAAYhV,GAAO,IAAAC,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAA6U,IAClB/U,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAA8iB,GAAA1U,KAAAH,QA6BDuM,oBAAsB,WACrBzM,EAAKD,MAAM5K,SAASzD,MA7BpBsO,EAAK/F,MAAQ,CACZnE,MAAS,GACT/D,OAAU,IAEXiO,EAAKiG,kBAAoBjG,EAAKiG,kBAAkBpF,KAAvB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACzBA,EAAK6E,aAAe7E,EAAK6E,aAAahE,KAAlB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACpBD,EAAM5K,SAASzD,KARGsO,yFAWOqG,GACtBA,EAAU9S,KAAK0D,iBACjBiJ,KAAKH,MAAMvK,QAAQnD,KAAK,iDAKtB6N,KAAKH,MAAMxM,KAAK0D,iBAClBiJ,KAAKH,MAAMvK,QAAQnD,KAAK,KAEzB6N,KAAKH,MAAM5K,S/BqHL,CACN3D,KAvI4C,6E+BoB3B+O,GACjBL,KAAKiB,SAALlP,OAAA0G,EAAA,EAAA1G,CAAA,GACEsO,EAAEG,OAAOnK,KAAOgK,EAAEG,OAAO7L,6CAQf0L,GACZA,EAAEiC,iBACF,IAAMhP,EAAO,CACZsC,MAASoK,KAAKjG,MAAMnE,OAErBoK,KAAKH,MAAM5K,SAAS5B,EAAoBC,qCAIxC,OACC6N,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,MACG1R,EAAQsL,KAAKH,MAAMhO,SACrBsP,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAACkG,GAAD,CACCjT,QAASzC,EAAoBoO,KAAKH,MAAMhO,QACxCP,KAAK,QACLmQ,QAASzB,KAAKuM,wBAIjBpL,EAAApD,EAAAqD,cAAA,mCACAD,EAAApD,EAAAqD,cAAA,oFACAD,EAAApD,EAAAqD,cAACiF,GAAD,CAAezB,SAAW5E,KAAK2E,cAC9BxD,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAI,SAAX,iBACAxF,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,QACL+E,KAAK,QACLuQ,UAAU,EACV/Q,GAAG,QACH+L,SAAW5B,KAAK+F,kBAChBpR,MAAQqL,KAAKjG,MAAMnE,MACnBiM,YAAY,6BAEbV,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,wBAIlBF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,mBAAhC,oCAKFF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACEvG,KAAKH,MAAMhO,OAAO+D,OAASuL,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,mBAAmB2F,MAAO,CAAEC,QAAW,UAAYjH,KAAKH,MAAMhO,OAAO+D,UAIlHoK,KAAKH,MAAMxM,KAAK2D,yBAA4BmK,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,kBAAf,2CAAyErB,KAAKjG,MAAMnE,MAApF,2FAzFpBkM,aA6GdoB,eAPS,SAACnJ,GAAD,MAAY,CACnC1G,KAAQ0G,EAAM1G,KACdxB,OAAUkI,EAAMlI,OAChBqE,eAAkB7C,EAClB4C,2BAA8B5C,IAGhB6P,CAAyB2R,ICnHlCC,eACL,SAAAA,IAAc,IAAAhV,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAA8U,IACbhV,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAA+iB,GAAA3U,KAAAH,QACKjG,MAAQ,CACZgb,aAAgB,GAChBC,aAAgB,GAChBC,qBAAwB,IAEzBnV,EAAKiG,kBAAoBjG,EAAKiG,kBAAkBpF,KAAvB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IACzBA,EAAK6E,aAAe7E,EAAK6E,aAAahE,KAAlB5O,OAAA6O,GAAA,EAAA7O,CAAA+N,IARPA,iFAWIO,GACjBL,KAAKiB,SAALlP,OAAA0G,EAAA,EAAA1G,CAAA,GACEsO,EAAEG,OAAOnK,KAAOgK,EAAEG,OAAO7L,6CAIf0L,GACZA,EAAEiC,iBAEF,IAAM5P,EAAO,CACZqiB,aAAgB/U,KAAKjG,MAAMgb,aAC3BG,cAAiBlV,KAAKjG,MAAMib,aAC5BG,cAAiBnV,KAAKjG,MAAMkb,sBAG7BjV,KAAKH,MAAMuV,eAAe1iB,EAAMsN,KAAKH,MAAMvK,2DAGlB6Q,GACrBA,EAAU9S,KAAK0D,iBAClBiJ,KAAKH,MAAMvK,QAAQnD,KAAK,iDAKrB6N,KAAKH,MAAMxM,KAAK0D,iBACnBiJ,KAAKH,MAAMvK,QAAQnD,KAAK,sCAOzB,OACCgP,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KACCjF,EAAApD,EAAAqD,cAAA,kCACAD,EAAApD,EAAAqD,cAACiF,GAAD,CAAezB,SAAW5E,KAAK2E,aAAeG,gBAAkB,CAC/DE,OAAU,eACVE,OAAU,uBACV7Q,QAAW,6BAEX8M,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACdtF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAI,gBAAX,gBACAxF,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,WACL+E,KAAK,eACLR,GAAG,eACH+Q,UAAU,EACVC,UAAW,EACXC,QAAQ,aACRnS,MAAQqL,KAAKjG,MAAMgb,aACnBlT,YAAY,0BACZD,SAAW5B,KAAK+F,oBAEjB5E,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,wBAIlBF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACdtF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAI,gBAAX,gBACAxF,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,WACL+E,KAAK,eACLR,GAAG,eACH+Q,UAAU,EACVC,UAAW,EACXC,QAAQ,aACRnS,MAAQqL,KAAKjG,MAAMib,aACnBnT,YAAY,sBACZD,SAAW5B,KAAK+F,oBAEjB5E,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,wBAIlBF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACdtF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACdF,EAAApD,EAAAqD,cAACsF,GAAA,EAAD,CAAOC,IAAI,wBAAX,6BACAxF,EAAApD,EAAAqD,cAACO,GAAA,EAAD,CACCrQ,KAAK,WACL+E,KAAK,uBACLR,GAAG,uBACH+Q,UAAU,EACVC,UAAW,EACXC,QAAQ,aACRnS,MAAQqL,KAAKjG,MAAMkb,qBACnBpT,YAAY,wBACZD,SAAW5B,KAAK+F,oBAEjB5E,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,qBACfF,EAAApD,EAAAqD,cAAA,SAAOC,UAAU,wBAAuBF,EAAApD,EAAAqD,cAAA,UACvCD,EAAApD,EAAAqD,cAAA,oFACAD,EAAApD,EAAAqD,cAAA,+DACAD,EAAApD,EAAAqD,cAAA,8DACAD,EAAApD,EAAAqD,cAAA,2DAKJD,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACdtF,EAAApD,EAAAqD,cAAA,UAAQ9P,KAAK,SAAS+P,UAAU,mBAAhC,yBAKEF,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACHnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACbzG,KAAKH,MAAMhO,OAAOujB,gBAAkBjU,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,mBAAmB2F,MAAO,CAAEC,QAAW,UAAYjH,KAAKH,MAAMhO,OAAOujB,mBAIxHpV,KAAKH,MAAMxM,KAAKoD,wBAA2B0K,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,kBAAf,4CAjItBS,aAmJdoB,eALS,SAAAnJ,GAAK,MAAK,CACjC1G,KAAQ0G,EAAM1G,KACdxB,OAAUkI,EAAMlI,SAGsB,CAAEujB,ehCwCX,SAAC1iB,GAAD,OAAU,SAACuC,GACxCA,EAASzD,KACTyD,EAASuB,KAET,IAAIL,EAAY,IAAIC,SAGpB,IAAI,IAAIC,KAAQ3D,EACfyD,EAASG,OAAOD,EAAM3D,EAAK2D,IAG5B,OAAO9D,EAAS,CACfE,IAAO,qCACPC,KAAQyD,EACRvD,OAAU,OACVE,SAAW,IACTY,KAAK,SAAAC,GAEP,OADAsB,EAASwB,KACF9C,IACLM,MAAM,SAAA5C,GACR,OAAO4D,EAAS7D,EAAU,CAAEgkB,eAAkB/jB,EAAMgD,egC5DGmC,sBAA1C0M,CAAgEC,aAAW2R,KCjJpFO,eACL,SAAAA,EAAYxV,GAAO,IAAAC,EAAA,OAAA/N,OAAAgO,EAAA,EAAAhO,CAAAiO,KAAAqV,IAClBvV,EAAA/N,OAAAkO,EAAA,EAAAlO,CAAAiO,KAAAjO,OAAAmO,EAAA,EAAAnO,CAAAsjB,GAAAlV,KAAAH,QACKjG,MAAQ,CACZlI,OAAU,IAHOiO,mFAQlBE,KAAKqC,4CAGGhC,GAGJL,KAAKH,MAAMxM,KAAK0D,iBACnBiJ,KAAKH,MAAMxK,WAAW2K,KAAKH,MAAMvK,0CAKlC,OACC6L,EAAApD,EAAAqD,cAACgF,GAAA,EAAD,KACCjF,EAAApD,EAAAqD,cAAA,kDACAD,EAAApD,EAAAqD,cAACkF,GAAA,EAAD,KACCnF,EAAApD,EAAAqD,cAACmF,GAAA,EAAD,KACCpF,EAAApD,EAAAqD,cAACG,GAAA,EAAD,CAAMC,GAAG,SAASH,UAAU,YAA5B,mBA1BiBS,aA0CRoB,eAJS,SAACnJ,GAAD,MAAY,CACnC1G,KAAQ0G,EAAM1G,OAGyB,CAAEgC,cAA3B6N,CAAyCC,aAAWkS,mBC3BnE,GlCCQngB,aAAaogB,QAAQ,qBkCDV,CAClBniB,GAAM8B,SAASD,EAAeE,aAAaqgB,oBAC3CpiB,GAAM8B,SAASQ,KAEf,IAAM+f,GAAcC,KAAKC,MAAQ,IAC9BxgB,aAAaqgB,kBAAkBI,IAAMH,IACvCriB,GAAM8B,SAASI,SA8BFugB,oLAxBb,OACCzU,EAAApD,EAAAqD,cAACyU,EAAA,EAAD,CAAU1iB,MAAUA,IACnBgO,EAAApD,EAAAqD,cAAC0U,EAAA,EAAD,KACC3U,EAAApD,EAAAqD,cAAA,WACCD,EAAApD,EAAAqD,cAAC2U,GAAD,MACA5U,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aACdF,EAAApD,EAAAqD,cAAC4U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYhK,KAClChL,EAAApD,EAAAqD,cAAC4U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAY9I,KAC/ClM,EAAApD,EAAAqD,cAAC4U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAY3C,KAChDrS,EAAApD,EAAAqD,cAAC4U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAYvQ,KAC1CzE,EAAApD,EAAAqD,cAAC4U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAYjP,KACzC/F,EAAApD,EAAAqD,cAAC4U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAYhP,KACvChG,EAAApD,EAAAqD,cAAC4U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAYtB,KAChD1T,EAAApD,EAAAqD,cAAC4U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAYxB,KACzCxT,EAAApD,EAAAqD,cAAC4U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAYrB,KAChD3T,EAAApD,EAAAqD,cAAC4U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAYd,gBAjB/BvT,aCvBEsU,QACW,cAA7BC,OAAO5J,SAAS6J,UAEe,UAA7BD,OAAO5J,SAAS6J,UAEhBD,OAAO5J,SAAS6J,SAAS5C,MACvB,2DA+GA,kBAAmB6C,WACrBA,UAAUC,cAAcC,MAAM/iB,KAAK,SAAAqT,GACjCA,EAAa2P,eCrHlB1S,IAAS2S,OACRxV,EAAApD,EAAAqD,cAACwV,GAAD,MAAS9V,SAAS+V,eAAe","file":"static/js/main.fcfaf81c.chunk.js","sourcesContent":["// errorReducer.js\n\nconst GET_ERRORS = 'GET_ERRORS';\nconst CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const getErrors = error => {\n\t// error is an object, e.g. { 'registration': error.message }\n\treturn {\n\t\t'type': GET_ERRORS,\n\t\t'payload': error,\n\t};\n};\n\nexport const clearErrors = () => {\n\treturn {\n\t\t'type': CLEAR_ERRORS,\n\t};\n};\n\nvar updeep = require('updeep');\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase GET_ERRORS: {\n\t\t\t// ensure we have an array of strings to allow multiple errors to be displayed\n\t\t\tlet errors = {};\n\n\t\t\tObject.keys(action.payload).forEach((key) => {\n\t\t\t\tif (typeof action.payload[key] === 'string') {\n\t\t\t\t\t// a string is simply copied\n\t\t\t\t\terrors[key] = [action.payload[key]];\n\t\t\t\t} else {\n\t\t\t\t\terrors[key] = [...action.payload[key]];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn updeep(errors, {}); // clear any existing errors\n\t\t}\n\n\t\tcase CLEAR_ERRORS: {\n\t\t\treturn {};\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","// join arrays of error messages from different errors, into a single string.\n// it is expected that there will only ever be one type of error, e.g. 'register', but the object is parsed to be on the safe side.\n/*\n{ {'register': [\n\t\t'email already in use',\n\t\t'username already in use'\n\t\t]},\n\t{'login': [\n\t\t'could not log in'\n\t]\n}\n*/\n\nexport default function (errors) {\n\tlet messageArray = [];\n\tObject.keys(errors).forEach((key) => {\n\t\tif (typeof errors[key] === 'string') {\n\t\t\tmessageArray.push(errors[key]); // plain string error\n\t\t} else { // arary of errors\n\t\t\terrors[key].map((item) => { // eslint-disable-line array-callback-return\n\t\t\t\tmessageArray.push(item);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst message = messageArray.join(' ');\n\n\treturn message;\n};\n","// uses fetch to get or post data.\n// passes up useful errors to the calling function.\n// set useAuth to true for validating logged-in user: token will be sent in header\nimport store from '../store';\nimport formatErrorMessages from '../modules/formatErrorMessages';\n\nexport default function fetchAPI({ url, data, method = 'GET', useAuth = false, headers = {} }) {\n\tif (useAuth) {\n\t\theaders.Authorization = `Token ${store.getState().auth.user.token}`;\n\t}\n\n\treturn fetch(url, { headers, 'method': method, 'body': data })\n\t\t.then(response => {\n\t\t\t// fetch returns ok true / false in most situations\n\t\t\t// true is a successful response\n\t\t\tif (response.ok) {\n\t\t\t\tconst contentType = response.headers.get('Content-Type') || '';\n\n\t\t\t\tif (contentType.includes('application/json')) {\n\t\t\t\t\treturn response.json().catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('Invalid JSON: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (contentType.includes('text/html')) {\n\t\t\t\t\treturn response.text().then(html => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'page_type': 'generic',\n\t\t\t\t\t\t\t'html': html\n\t\t\t\t\t\t};\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treturn Promise.reject(new Error('HTML error: ' + error.message));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// ok == false means some problem to display\n\t\t\t\t// even though no error was returned\n\t\t\t\tif (response.status === 404) {\n\t\t\t\t\treturn Promise.reject(new Error('Page not found: ' + url));\n\t\t\t\t}\n\n\t\t\t\tif (response.status === 500) {\n\t\t\t\t\treturn Promise.reject(new Error('Internal server error: ' + url));\n\t\t\t\t}\n\n\t\t\t\treturn response.json().then(response => {\n\t\t\t\t\t// the server rejected the request, e.g. because of a wrong password, we want to display the reason\n\t\t\t\t\t// the information is contained in the json()\n\t\t\t\t\t// there may be more than one error, so join them into a single string.\n\t\t\t\t\t// multiline display would be more elegant but this will do for now and makes all errors consistent (one message string)\n\n\t\t\t\t\treturn Promise.reject(new Error(formatErrorMessages(response))\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\t// fetch returned an error\n\t\t\treturn Promise.reject(new Error(error.message));\n\t\t});\n};\n","// check for a null, empty, undefined object\n\nconst isEmpty = (value) => {\n\treturn (\n\t\tvalue === undefined ||\n\t\tvalue === null ||\n\t\t(typeof value === 'object' && Object.keys(value).length === 0) ||\n\t\t(typeof value === 'string' && value.trim().length === 0)\n\t);\n};\n\nexport default isEmpty;\n","// authReducer.js\n\nimport store from '../store';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors, clearErrors } from '../modules/errors';\nimport isEmpty from '../modules/isEmpty';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER_COMPLETE = 'LOGOUT_USER_COMPLETE';\nexport const FORGOT_PASSWORD_EMAIL_SENT = 'FORGOT_PASSWORD_EMAIL_SENT';\nexport const RESET_PASSWORD_COMPLETE = 'RESET_PASSWORD_COMPLETE';\nexport const PASSWORD_NOT_CHANGED = 'PASSWORD_NOT_CHANGED';\nexport const CHANGE_PASSWORD_COMPLETE = 'CHANGE_PASSWORD_COMPLETE';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const FORGOT_PASSWORD_EMAIL_NOT_SENT = 'FORGOT_PASSWORD_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_NOT_SENT = 'CONFIRM_EMAIL_NOT_SENT';\nexport const CONFIRM_EMAIL_SENT = 'CONFIRM_EMAIL_SENT';\nexport const CONFIRM_EMAIL_ALREADY_VERIFIED = 'CONFIRM_EMAIL_ALREADY_VERIFIED';\n\n// Side effects Services\nexport const getAuthToken = () => {\n\treturn localStorage.getItem('mytoptensJwtToken');\n};\n\nfunction setAuthToken(token) {\n\tlocalStorage.setItem('mytoptensJwtToken', token);\n\treturn;\n}\n\nfunction removeAuthToken() {\n\tlocalStorage.removeItem('mytoptensJwtToken');\n\treturn;\n}\n\nexport const registerUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\t/*\n\tfor (var pair of formData.entries()) {\n\t\tconsole.log(pair[0]+ ', ' + pair[1]); \n\t} */\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/registration/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t}).then(response => {\n\t\thistory.push('/welcome');\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'registration': error.message }));\n\t});\n};\n\nexport const loginUser = (user, history) => dispatch => {\n\tdispatch(clearErrors());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in user) {\n\t\tformData.append(name, user[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/login/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\treturn dispatch(setCurrentUser(response.key));\n\t}).then(() => {\n\t\thistory.push('/');\n\t\t// after store has been updated with token, we can query the server for current user info\n\t\treturn store.dispatch(getUserInfo());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'authentication': 'Unable to log in with the provided credentials, please try again.' }));\n\t});\n};\n\nexport const setCurrentUser = (token, dispatch) => {\n\tsetAuthToken(token);\n\treturn {\n\t\t'type': SET_CURRENT_USER,\n\t\t'payload': { token },\n\t};\n};\n\nexport const logoutUserComplete = token => {\n\treturn {\n\t\t'type': LOGOUT_USER_COMPLETE,\n\t};\n};\n\nexport const logoutUser = (history) => dispatch => {\n\tdispatch(clearErrors());\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/logout/',\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\tremoveAuthToken();\n\t\treturn dispatch(logoutUserComplete());\n\t}).then(() => {\n\t\t// ensure token is removed from localStorage and store before redirecting\n\t\t// history.push('/');\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'logout user': 'Unable to logout' }));\n\t});\n};\n\n///////////////////////////////\n// get user info\n// http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/\nexport const setUserInfo = user => {\n\treturn {\n\t\t'type': SET_USER_INFO,\n\t\t'payload': user,\n\t};\n};\n\nexport const getUserInfo = () => (dispatch) => {\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/user/',\n\t\t'method': 'GET',\n\t\t'useAuth': true,\n\t}).then(user => {\n\t\treturn dispatch(setUserInfo({\n\t\t\t'username': user.username,\n\t\t\t'email': user.email,\n\t\t\t'id': user.id,\n\t\t\t'emailVerified': user.email_verified,\n\t\t}));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'get user info': 'Unable to get user info' }));\n\t});\n};\n\n///////////////////////////////\n// reset password\nexport const forgotPasswordEmailNotSent = token => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_NOT_SENT\n\t};\n};\n\nexport const forgotPasswordEmailSent = () => {\n\treturn {\n\t\t'type': FORGOT_PASSWORD_EMAIL_SENT\n\t};\n};\n\nexport const forgotPassword = (email) => dispatch => {\n\tdispatch(clearErrors());\n\tdispatch(forgotPasswordEmailNotSent());\n\n\tvar formData  = new FormData();\n\n\tfor(var name in email) {\n\t\tformData.append(name, email[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/reset/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': false,\n\t}).then(response => {\n\t\t return dispatch(forgotPasswordEmailSent());\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'sendPasswordResetEmail': error.message }));\n\t});\n};\n\nexport const resetPasswordComplete = (token) => {\n\treturn {\n\t\t'type': RESET_PASSWORD_COMPLETE,\n\t\t'token': token,\n\t};\n};\n\n//////////////////////////////////\n// change password\nexport const changePassword = (data) => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(passwordNotChanged());\n\n\tvar formData  = new FormData();\n\n\t// Push our data into our FormData object\n\tfor(var name in data) {\n\t\tformData.append(name, data[name]);\n\t}\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/rest-auth/password/change/',\n\t\t'data': formData,\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tdispatch(changePasswordComplete());\n\t\treturn response;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'changePassword': error.message }));\n\t});\n};\n\nexport const passwordNotChanged = token => {\n\treturn {\n\t\t'type': PASSWORD_NOT_CHANGED,\n\t};\n};\n\nexport const changePasswordComplete = (token) => {\n\treturn {\n\t\t'type': CHANGE_PASSWORD_COMPLETE,\n\t};\n};\n\n//////////////////////////////////\n// Email confirmation\nexport const confirmEmailNotSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_NOT_SENT\n\t};\n};\n\nexport const confirmEmailSent = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_SENT\n\t};\n};\n\nexport const confirmEmailAlreadyVerified = token => {\n\treturn {\n\t\t'type': CONFIRM_EMAIL_ALREADY_VERIFIED\n\t};\n};\n\n//////////////////////////////////\n\nexport const sendConfirmationEmail = () => (dispatch) => {\n\tdispatch(clearErrors());\n\tdispatch(confirmEmailNotSent());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/sendconfirmationemail/',\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tif (response.message === 'Email confirmation sent') {\n\t\t\treturn dispatch(confirmEmailSent());\n\t\t} else if (response.message === 'Email already verified') {\n\t\t\treturn dispatch(confirmEmailAlreadyVerified());\n\t\t}\n\t}).catch(error => {\n\t\tconsole.log('sendConfirmationEmail error ', error);\n\t\tconst message = 'Unable to send confirmation email. This probably means that there is no user registered with that email address.';\n\t\treturn dispatch(getErrors({ 'sendConfirmationEmail': message }));\n\t});\n};\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'isLoading': false,\n\t'isAuthenticated': false,\n\t'forgotPasswordEmailSent': false,\n\t'resetPasswordComplete': false,\n\t'changePasswordComplete': false,\n\t'confirmEmailSent': false,\n\t'user': {}\n};\n\nexport default function(state = initialState, action ) {\n\tswitch(action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': !isEmpty(action.payload.token),\n\t\t\t\t'isLoading': true,\n\t\t\t\t'user': updeep.constant({ 'token': action.payload.token }) // remove user info\n\t\t\t}, state);\n\n\t\tcase SET_USER_INFO: // update user info\n\t\t\treturn updeep({\n\t\t\t\t'isLoading': false,\n\t\t\t\t'user': {\n\t\t\t\t\t'username': action.payload.username,\n\t\t\t\t\t'email': action.payload.email,\n\t\t\t\t\t'id': action.payload.id,\n\t\t\t\t\t'emailVerified': action.payload.emailVerified,\n\t\t\t\t}\n\t\t\t}, state);\n\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'isAuthenticated': false,\n\t\t\t\t'user': updeep.constant({}) // remove user profile\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// forgot password\n\t\tcase FORGOT_PASSWORD_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FORGOT_PASSWORD_EMAIL_SENT :{\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': true,\n\t\t\t\t'resetPasswordComplete': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase RESET_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'forgotPasswordEmailSent': false,\n\t\t\t\t'resetPasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase PASSWORD_NOT_CHANGED: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': false,\n\t\t\t\t'errors': {}\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CHANGE_PASSWORD_COMPLETE: {\n\t\t\treturn updeep({\n\t\t\t\t'changePasswordComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\t/////////////////////////\n\t\t// confirm email\n\t\tcase CONFIRM_EMAIL_NOT_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': false,\n\t\t\t\t'confirmEmailAlreadyVerified': false,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_SENT: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailSent': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase CONFIRM_EMAIL_ALREADY_VERIFIED: {\n\t\t\treturn updeep({\n\t\t\t\t'confirmEmailAlreadyVerified': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n","import fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\n\nexport const SEARCH_HOME_STARTED = 'SEARCH_HOME_STARTED';\nexport const SEARCH_HOME_SUCCEEDED = 'SEARCH_HOME_SUCCEEDED';\nexport const SEARCH_HOME_FAILED = 'SEARCH_HOME_FAILED';\nexport const SEARCH_HOME_CLEAR = 'SEARCH_HOME_CLEAR';\n\n///////////////////////////////////\n// Home page search function\nexport function searchHomeStarted(searchTerm) {\n\treturn {\n\t\t'type': SEARCH_HOME_STARTED,\n\t\t'payload': { searchTerm },\n\t};\n}\n\nfunction searchHomeSucceeded(results) {\n\t// TODO notify if no results\n\treturn {\n\t\t'type': SEARCH_HOME_SUCCEEDED,\n\t\t'payload': { results },\n\t};\n}\n\nfunction searchHomeFailed() {\n\treturn {\n\t\t'type': SEARCH_HOME_FAILED,\n\t};\n}\n\n// reset if there is no searchTerm\nexport function searchHomeClear() {\n\treturn {\n\t\t'type': SEARCH_HOME_CLEAR,\n\t};\n}\n\nexport function searchHome(searchTerm) {\n\treturn (dispatch, getState) => {\n\t\t// don't search on empty string\n\t\tif(!searchTerm || searchTerm === '') {\n\t\t\treturn dispatch(searchHomeClear());\n\t\t}\n\n\t\tdispatch(searchHomeStarted(searchTerm));\n\n\t\t// if the user is not logged in, don't use auth. The server should return the topTenList if a non-authenticated user should see it.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/searchhome/?search=${searchTerm}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\treturn dispatch(searchHomeSucceeded(response.results));\n\t\t}).catch(error => {\n\t\t\tdispatch(searchHomeFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch topTenLists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////////\n// reducer\nvar updeep = require('updeep');\n\nconst initialState = {\n\t'searchTerm': '',\n\t'searchComplete': false,\n\t'searchResults': [],\n};\n\nexport default function page(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SEARCH_HOME_STARTED\t: {\n\t\t\treturn updeep({\n\t\t\t\t'searchTerm': action.payload.searchTerm,\n\t\t\t\t'searchComplete': false,\n\t\t\t\t'searchResults': updeep.constant([]),\n\t\t\t}, state);\n\t\t}\n\n\t\tcase SEARCH_HOME_SUCCEEDED\t: {\n\t\t\treturn updeep({\n\t\t\t\t'searchComplete': true,\n\t\t\t\t'searchResults': updeep.constant(action.payload.results),\n\t\t\t}, state);\n\t\t}\n\n\t\tcase SEARCH_HOME_FAILED\t: {\n\t\t\treturn updeep({\n\t\t\t\t'searchComplete': true,\n\t\t\t}, state);\n\t\t}\n\n\t\tcase SEARCH_HOME_CLEAR\t: {\n\t\t\treturn updeep({\n\t\t\t\t'searchTerm': updeep.constant(''),\n\t\t\t\t'searchComplete': false,\n\t\t\t\t'searchResults': updeep.constant([]),\n\t\t\t}, state);\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n","export const TOPTENLIST_IS_PUBLIC_VALUES = [false, true];\nexport const MAX_TOPTENITEMS_IN_TOPTENLIST = 10;\nexport const PAGE_SIZE = 10;\n","import { createSelector } from 'reselect';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport store from '../store';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tRECEIVE_ENTITIES,\n\tFETCH_TOPTENLIST_DETAIL_STARTED,\n\tRECEIVE_ORGANIZER_DATA,\n} from './topTenList';\n\n//////////////////////////////////\n// Action creators\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const CREATE_TOPTENITEM_REQUESTED = 'CREATE_TOPTENITEM_REQUESTED';\nexport const CREATE_TOPTENITEM_SUCCEEDED = 'CREATE_TOPTENITEM_SUCCEEDED';\nexport const UPDATE_TOPTENITEM_SUCCEEDED = 'UPDATE_TOPTENITEM_SUCCEEDED';\nexport const MOVE_TOPTENITEM_UP_SUCCEEDED = 'MOVE_TOPTENITEM_UP_SUCCEEDED';\n\n////////////////////////////////////\n// create topTenItem\nexport const createTopTenItem = topTenItem => dispatch => {\n\tdispatch(createTopTenItemRequested());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/toptenitem/',\n\t\t'data': JSON.stringify(topTenItem),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\treturn dispatch(createTopTenItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create topTenItem': error.message }));\n\t});\n};\n\nexport function createTopTenItemRequested() {\n\treturn {\n\t\t'type': 'CREATE_TOPTENITEM_REQUESTED',\n\t};\n}\n\nexport function createTopTenItemSucceeded(topTenItem) {\n\treturn {\n\t\t'type': 'CREATE_TOPTENITEM_SUCCEEDED',\n\t\t'payload': {\n\t\t\ttopTenItem\n\t\t}\n\t};\n}\n\n////////////////////////////////////\n// update topTenItem\nexport const updateTopTenItem = (topTenItemId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/toptenitem/${topTenItemId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(updateTopTenItemSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update topTenItem': error.message }));\n\t});\n};\n\nexport function updateTopTenItemSucceeded(response) {\n\treturn {\n\t\t'type': UPDATE_TOPTENITEM_SUCCEEDED,\n\t\t'payload': response,\n\t};\n}\n\n//////////////////////////////////\n// move topTenItem up\nexport const moveTopTenItemUp = ({ topTenItemId }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/toptenitem/${topTenItemId}/moveup/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(moveTopTenItemUpSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'move topTenItem up error ': error.message }));\n\t});\n};\n\nexport const moveTopTenItemDown = ({ topTenItemId }) => dispatch => {\n\t// to move an topTenItem down, we move the topTenItem below up\n\t// find the topTenItem\n\tconst topTenItem = store.getState().topTenItem.things[topTenItemId];\n\n\t// find its parent topTenList\n\tconst topTenListId = topTenItem.topTenList_id;\n\n\t// find the topTenItem's order\n\tconst order = topTenItem.order;\n\n\t// find the topTenItem below it in the parent topTenList\n\tconst topTenItem_below_id = store.getState().topTenList.things[topTenListId].topTenItem[order];\n\n\tdispatch(moveTopTenItemUp({ 'topTenItemId': topTenItem_below_id }));\n};\n\nexport function moveTopTenItemUpSucceeded(topTenItems) {\n\treturn {\n\t\t'type': 'MOVE_TOPTENITEM_UP_SUCCEEDED',\n\t\t'payload': {\n\t\t\ttopTenItems,\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\nconst initialTopTenItemsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'count': null,\n\t'next': null,\n\t'previous': null,\n\t'things': {},\n\t'organizerData': {},\n};\n\n/////////////////////////////\n// organizer data\n// all topTenItems and topTenLists, for selector to use\nexport const getOrganizerTopTenItems = state => state.topTenItem.organizerData;\nconst getOrganizerTopTenLists = state => state.topTenList.organizerData;\n\nexport const groupedTopTenItems = createSelector(\n\t[getOrganizerTopTenItems, getOrganizerTopTenLists],\n\t(topTenItems, topTenLists) => {\n\t\tlet topTenItemsByTopTenList = {};\n\n\t\t// find the topTenItems for each topTenList\n\t\tObject.keys(topTenLists).map(topTenListId => { // eslint-disable-line array-callback-return\n\t\t\tconst topTenList = topTenLists[topTenListId];\n\n\t\t\tlet topTenItemsArray = [];\n\n\t\t\tfor (let i=0; i<topTenList.topTenItem.length; i++) {\n\t\t\t\tlet topTenItem = { ...topTenItems[topTenList.topTenItem[i]] };\n\n\t\t\t\tif (topTenItem.name !== '') {\n\t\t\t\t\ttopTenItemsArray.push(topTenItem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttopTenItemsByTopTenList[topTenList.id] = topTenItemsArray;\n\t\t});\n\t\t// note the parent_topTenItem, if any, of each topTenList\n\t\t// add the topTenList's id to the topTenItem as childTopTenListId\n\t\tObject.keys(topTenLists).map(topTenListId => { // eslint-disable-line array-callback-return\n\t\t\tconst topTenList = topTenLists[topTenListId];\n\n\t\t\tif (topTenList.parent_topTenItem) {\n\t\t\t\tconst parentTopTenItem = topTenItems[topTenList.parent_topTenItem];\n\n\t\t\t\tif (parentTopTenItem) {\n\t\t\t\t\t// can't use array order to pull out topTenItem, because topTenItems with no name have been removed\n\t\t\t\t\t// instead, explicitly find the topTenItem object in the array by its 'order' property\n\n\t\t\t\t\tlet topTenItemsArray2 = topTenItemsByTopTenList[parentTopTenItem.topTenList_id];\n\t\t\t\t\tlet topTenItem = topTenItemsArray2.find(topTenItem => topTenItem.order === parentTopTenItem.order);\n\t\t\t\t\ttopTenItem.childTopTenListId = topTenList.id;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn topTenItemsByTopTenList;\n\t}\n\n);\n\n/////////////////////////////\n// state updates\n\nexport default function topTenItem(state = initialTopTenItemsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialTopTenItemsState, {}); // constant provides placement instead of update, so all previous entries are removed\n\t\t}\n\t\t\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\tconst { entities } = action.payload;\n\n\t\t\tlet things = {};\n\n\t\t\tif (entities && entities.topTenItem) {\n\t\t\t\tthings = entities.topTenItem;\n\t\t\t}\n\n\t\t\treturn updeep({\n\t\t\t\t'things': updeep.constant(things),\n\t\t\t\t'organizerData': updeep.constant({}), // new topTenList data so clear out old organizer data, this must be loaded separately\n\t\t\t\t'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_TOPTENLIST_DETAIL_STARTED: {\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase CREATE_TOPTENITEM_SUCCEEDED: {\n\t\t\tconst topTenItem = action.payload.topTenItem;\n\t\t\treturn updeep({ 'things': { [topTenItem.id]: topTenItem } }, state);\n\t\t}\n\n\t\tcase UPDATE_TOPTENITEM_SUCCEEDED: {\n\t\t\t// update editable properties\n\t\t\tconst update = {\n\t\t\t\t'name': action.payload.name,\n\t\t\t\t'description': action.payload.description,\n\t\t\t\t'modified_at': action.payload.modified_at,\n\t\t\t\t'order': action.payload.order,\n\t\t\t};\n\n\t\t\treturn updeep({ 'things': { [action.payload.id]: update } }, state);\n\t\t}\n\n\t\tcase MOVE_TOPTENITEM_UP_SUCCEEDED: {\n\t\t\tconst topTenItemsArray = action.payload.topTenItems; // array containing the two topTenItems that have been swapped\n\n\t\t\tlet topTenItemsObject = {};\n\t\t\ttopTenItemsArray.map((topTenItem) => { // eslint-disable-line array-callback-return\n\t\t\t\ttopTenItemsObject[topTenItem.id] = topTenItem;\n\t\t\t});\n\t\t\treturn updeep({ 'things': topTenItemsObject }, state);\n\t\t}\n\n\t\tcase RECEIVE_ORGANIZER_DATA: {\n\t\t\tconst { entities } = action.payload;\n\n\t\t\tif (entities && entities.topTenItem) {\n\t\t\t\treturn updeep({ 'organizerData': updeep.constant(entities.topTenItem), 'isLoading': false }, state);\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","import { createSelector } from 'reselect';\nimport { TOPTENLIST_IS_PUBLIC_VALUES } from '../constants';\nimport fetchAPI from '../modules/fetchAPI';\nimport { getErrors } from '../modules/errors';\nimport { normalize, schema } from 'normalizr';\nimport store from '../store';\n\nimport {\n\tLOGOUT_USER_COMPLETE\n} from './auth';\n\nimport {\n\tCREATE_TOPTENITEM_SUCCEEDED,\n\tMOVE_TOPTENITEM_UP_SUCCEEDED,\n} from './topTenItem';\n\n// define action types so they are visible\n// and export them so other reducers can use them\nexport const RECEIVE_ENTITIES = 'RECEIVE_ENTITIES';\nexport const FETCH_TOPTENLISTS_STARTED = 'FETCH_TOPTENLISTS_STARTED';\nexport const FETCH_TOPTENLISTS_FAILED = 'FETCH_TOPTENLISTS_FAILED';\nexport const FETCH_TOPTENLIST_DETAIL_STARTED = 'FETCH_TOPTENLIST_DETAIL_STARTED';\nexport const FETCH_TOPTENLIST_DETAIL_FAILED = 'FETCH_TOPTENLIST_DETAIL_FAILED';\nexport const CREATE_TOPTENLIST_STARTED = 'CREATE_TOPTENLIST_STARTED';\nexport const CREATE_TOPTENLIST_SUCCEEDED = 'CREATE_TOPTENLIST_SUCCEEDED';\nexport const DELETE_TOPTENLIST_SUCCEEDED = 'DELETE_TOPTENLIST_SUCCEEDED';\nexport const SET_TOPTENLIST_IS_PUBLIC_SUCCEEDED = 'SET_TOPTENLIST_IS_PUBLIC_SUCCEEDED';\nexport const UPDATE_TOPTENLIST_SUCCEEDED = 'UPDATE_TOPTENLIST_SUCCEEDED';\n\nexport const RECEIVE_ORGANIZER_DATA = 'RECEIVE_ORGANIZER_DATA';\nexport const FETCH_ORGANIZER_DATA_STARTED = 'FETCH_ORGANIZER_DATA_STARTED';\nexport const FETCH_ORGANIZER_DATA_FAILED = 'FETCH_ORGANIZER_DATA_FAILED';\n\nconst topTenItemSchema = new schema.Entity('topTenItem', {\n\t'topTenList': ['topTenListSchema'],\n});\nconst topTenListSchema = new schema.Entity('topTenList', {\n\t'topTenItem': [topTenItemSchema],\n});\n\nfunction receiveEntities(entities) {\n\treturn {\n\t\t'type': RECEIVE_ENTITIES,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchTopTenListsStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_TOPTENLISTS_STARTED,\n\t};\n}\n\nfunction fetchTopTenListsFailed() {\n\treturn {\n\t\t'type': FETCH_TOPTENLISTS_FAILED\n\t};\n}\n\nexport function fetchTopTenLists({ listset, topLevelTopTenListsOnly, limit, offset } = {}) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchTopTenListsStarted());\n\t\t// if the user is not logged in, don't use auth. The server should return only the topTenLists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\tlet url = `/api/v1/content/toptenlist/?`;\n\n\t\tif (topLevelTopTenListsOnly) {\n\t\t\turl += '&toplevel=1';\n\t\t}\n\n\t\tif (listset) {\n\t\t\turl += `&listset=${listset}`;\n\t\t}\n\n\t\tif (limit) {\n\t\t\turl += `&limit=${limit}`;\n\t\t}\n\n\t\tif (offset) {\n\t\t\turl += `&offset=${offset}`;\n\t\t}\n\t\treturn fetchAPI({\n\t\t\t'url': url,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tlet data = {\n\t\t\t\t'count': response.count,\n\t\t\t\t'next': response.next,\n\t\t\t\t'previous': response.previous,\n\t\t\t\t'entities': normalize(response.results, [topTenListSchema]).entities,\n\t\t\t};\n\n\t\t\treturn dispatch(receiveEntities(data));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchTopTenListsFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch topTenLists': error.message }));\n\t\t});\n\t};\n}\n\n///////////////////////////////\n// fetch a single topTenList with is parent and children, if any\nexport function fetchTopTenListDetailStarted() {\n\treturn {\n\t\t'type': FETCH_TOPTENLIST_DETAIL_STARTED,\n\t};\n}\n\nfunction fetchTopTenListDetailFailed() {\n\treturn {\n\t\t'type': FETCH_TOPTENLIST_DETAIL_FAILED\n\t};\n}\n\nexport function fetchTopTenListDetail(id) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchTopTenListDetailStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return the topTenList if a non-authenticated user should see it.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/toptenlistdetail/?id=${id}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [topTenListSchema]);\n\n\t\t\treturn dispatch(receiveEntities(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchTopTenListDetailFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch topTenLists': error.message }));\n\t\t});\n\t};\n}\n\n/////////////////////////////\n// create topTenList\nexport const createTopTenList = (topTenList, history) => dispatch => {\n\tdispatch(createTopTenListStarted());\n\n\treturn fetchAPI({\n\t\t'url': '/api/v1/content/toptenlist/',\n\t\t'data': JSON.stringify(topTenList),\n\t\t'method': 'POST',\n\t\t'useAuth': true,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t}).then(response => {\n\t\tdispatch(createTopTenListSucceeded(response));\n\n\t\thistory.push(`/topTenList/${response.id}`);\n\t\treturn;\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'create topTenList': error.message }));\n\t});\n};\n\nexport function createTopTenListStarted() {\n\treturn {\n\t\t'type': CREATE_TOPTENLIST_STARTED,\n\t};\n}\n\nexport function createTopTenListSucceeded(topTenList) {\n\treturn {\n\t\t'type': CREATE_TOPTENLIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\ttopTenList\n\t\t}\n\t};\n}\n\n///////////////////////////\n// update topTenList\nexport const updateTopTenList = (topTenListId, propertyName, value) => dispatch => {\n\t// should be able to update any simple property e.g. name, description\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/toptenlist/${topTenListId}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ [propertyName]: value }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\tdispatch(fetchOrganizerData(response.created_by));\n\t\treturn dispatch(updateTopTenListSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'update topTenItem': error.message }));\n\t});\n};\n\nexport function updateTopTenListSucceeded(response) {\n\treturn {\n\t\t'type': UPDATE_TOPTENLIST_SUCCEEDED,\n\t\t'payload': response,\n\t};\n}\n\n///////////////////////////\n// delete topTenList\nexport const deleteTopTenList = id => (dispatch, getState) => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/toptenlist/${id}/`,\n\t\t'method': 'DELETE',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(deleteTopTenListSucceeded(id));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'delete topTenList': error.message }));\n\t});\n};\n\nexport function deleteTopTenListSucceeded(id) {\n\treturn {\n\t\t'type': DELETE_TOPTENLIST_SUCCEEDED,\n\t\t'payload': {\n\t\t\tid\n\t\t}\n\t};\n}\n\nexport const setTopTenListIsPublic = ({ id, is_public }) => dispatch => {\n\treturn fetchAPI({\n\t\t'url': `/api/v1/content/toptenlist/${id}/`,\n\t\t'headers': { 'Content-Type': 'application/json' },\n\t\t'data': JSON.stringify({ is_public }),\n\t\t'method': 'PATCH',\n\t\t'useAuth': true,\n\t}).then(response => {\n\t\treturn dispatch(setTopTenListIsPublicSucceeded(response));\n\t}).catch(error => {\n\t\treturn dispatch(getErrors({ 'set topTenList is public': error.message }));\n\t});\n};\n\nexport function setTopTenListIsPublicSucceeded({ id, is_public }) {\n\treturn {\n\t\t'type': SET_TOPTENLIST_IS_PUBLIC_SUCCEEDED,\n\t\t'payload': {\n\t\t\t'id': id,\n\t\t\tis_public\n\t\t}\n\t};\n}\n\n//////////////////////////////////\n// fetch the names of my topTenLists and their topTenItems\n// for displaying and managing topTenList hierarchy i.e. topTenList parent_topTenItem\n// returns only the fields that are required for this function\nfunction receiveOrganizerData(entities) {\n\treturn {\n\t\t'type': RECEIVE_ORGANIZER_DATA,\n\t\t'payload': entities,\n\t};\n}\n\nexport function fetchOrganizerDataStarted(is_public) {\n\treturn {\n\t\t'type': FETCH_ORGANIZER_DATA_STARTED,\n\t};\n}\n\nfunction fetchOrganizerDataFailed() {\n\treturn {\n\t\t'type': FETCH_ORGANIZER_DATA_FAILED\n\t};\n}\n\nexport function fetchOrganizerData(userId) {\n\t// get minimal information about all topTenLists owned by one user\n\t// for use in organizer\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchOrganizerDataStarted());\n\n\t\t// if the user is not logged in, don't use auth. The server should return only the topTenLists a non-authenticated user should see.\n\t\tlet useAuth = false;\n\n\t\tif (getState().auth.user.token) {\n\t\t\tuseAuth = true;\n\t\t}\n\n\t\treturn fetchAPI({\n\t\t\t'url': `/api/v1/content/toptenlist/?expand=topTenItem&fields=id,name,topTenItem,is_public,order,parent_topTenItem&created_by=${userId}`,\n\t\t\t'method': 'GET',\n\t\t\t'useAuth': useAuth,\n\t\t}).then(response => {\n\t\t\tconst normalizedData = normalize(response, [topTenListSchema]);\n\n\t\t\treturn dispatch(receiveOrganizerData(normalizedData));\n\t\t}).catch(error => {\n\t\t\tdispatch(fetchOrganizerDataFailed());\n\n\t\t\treturn dispatch(getErrors({ 'fetch my topTenList names': error.message }));\n\t\t});\n\t};\n}\n\n//////////////////////////////////\n// Reducer\nvar updeep = require('updeep');\n\n// this is initial state of topTenLists and the topTenList loading states\n// note that the topTenLists's list of topTenItems is called 'topTenItem' for consistency with the database.\nconst initialTopTenListsState = {\n\t'isLoading': false,\n\t'error': null,\n\t'count': 0,\n\t'next': '',\n\t'previous': '',\n\t'things': {},\n\t'organizerData': {},\n};\n\n// 'state' here is global state\nexport const getSearchTerm = state => {\n\treturn state.page.searchTerm;\n};\n\n// returns topTenLists as an array not an object\nexport const getTopTenLists = state => {\n\treturn Object.keys(state.topTenList.things).map(id => {\n\t\treturn state.topTenList.things[id];\n\t});\n};\n\nconst getTopTenItems = state => state.topTenItem.things;\n\nexport const getPublicTopTenLists = createSelector(\n\t[getTopTenLists],\n\ttopTenLists => {\n\t\treturn topTenLists.filter(topTenList => {\n\t\t\treturn topTenList.is_public;\n\t\t});\n\t}\n); \n\nexport const getMyGroupedTopTenLists = createSelector(\n\t[getTopTenLists],\n\ttopTenLists => {\n\t\tconst grouped = {};\n\n\t\tTOPTENLIST_IS_PUBLIC_VALUES.forEach(is_public => {\n\t\t\tgrouped[is_public] = topTenLists.filter(topTenList => (topTenList.created_by === store.getState().auth.user.id) && (topTenList.is_public === is_public));\n\t\t});\n\n\t\treturn grouped;\n\t}\n);\n\n/////////////////////////////\n// organizer data\nexport const getOrganizerTopTenLists = state => state.topTenList.organizerData;\nconst getOrganizerTopTenItems = state => state.topTenItem.organizerData;\n\n// returns topTenLists in an array, sorted by name\n// instead of the state.topTenList.organizerData object, keyed by id\nexport const getSortedOrganizerTopTenLists = createSelector(\n\t[getOrganizerTopTenLists],\n\t(topTenLists) => {\n\t\tconst topTenListsArray = Object.keys(topTenLists).map(id => {\n\t\t\treturn topTenLists[id];\n\t\t});\n\n\t\ttopTenListsArray.sort(function (a, b) {\n\t\t\treturn a.name.localeCompare(b.name);\n\t\t});\n\n\t\treturn topTenListsArray;\n\t}\n);\n\n// topTenLists, topTenItems should be memoized\n// even though the rest of the selector will be rerun, it's still a gain\nexport const getTopTenItemsForTopTenList = createSelector(\n\t[getTopTenLists, getTopTenItems],\n\t(topTenLists, topTenItems) => (topTenList) => {\n\t\tlet topTenListTopTenItems = [];\n\n\t\tif (topTenList) {\n\t\t\ttopTenList.topTenItem.map((topTenItemId) => { // eslint-disable-line array-callback-return\n\t\t\t\tlet topTenItem = { ...topTenItems[topTenItemId] }; // shallow copy is extensible\n\n\t\t\t\tconst childTopTenList = topTenLists.find(topTenList => topTenList.parent_topTenItem === topTenItemId);\n\n\t\t\t\tif (childTopTenList) {\n\t\t\t\t\ttopTenItem.childTopTenList = { ...childTopTenList };\n\t\t\t\t}\n\n\t\t\t\ttopTenListTopTenItems.push(topTenItem);\n\t\t\t});\n\t\t}\n\t\treturn topTenListTopTenItems;\n\t}\n);\n\n// topTenLists, topTenItems should be memoized\n// even though the rest of the selector will be rerun, it's still a gain\nexport const getParentTopTenItemAndTopTenList = createSelector(\n\t[getOrganizerTopTenLists, getOrganizerTopTenItems],\n\t// find a topTenLists's parent topTenItem and the parent topTenList, if any\n\t// uses the organizer data which has minimal data for all topTenLists belonging to that user\n\t(topTenLists, topTenItems) => (topTenList) => {\n\t\tlet parentTopTenItem;\n\t\tlet parentTopTenList;\n\n\t\tif (topTenList && topTenList.parent_topTenItem) {\n\t\t\tif (topTenItems) {\n\t\t\t\tparentTopTenItem = topTenItems[topTenList.parent_topTenItem];\n\n\t\t\t\tif (parentTopTenItem) {\n\t\t\t\t\tparentTopTenList = topTenLists[parentTopTenItem.topTenList_id];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { parentTopTenItem, parentTopTenList };\n\t}\n);\n\n/////////////////////////////\n// state updates\n\n// state here is the substate state.topTenLists\n// the book uses 'topTenItems' for the list of things i.e. topTenLists. topTenItems\n// as 'topTenItems' for us is a specific thing, we need another name for the set of entities to be displayed i.e. the topTenLists themselves\n// so those are globalState.topTenLists.things\n// i.e. state.things here\nexport default function topTenList(state = initialTopTenListsState, action) {\n\tswitch (action.type) {\n\t\tcase LOGOUT_USER_COMPLETE: {\n\t\t\treturn updeep(initialTopTenListsState, {});\n\t\t}\n\n\t\tcase RECEIVE_ENTITIES: {\n\t\t\t// load topTenLists data into store\n\t\t\tconst { count, previous, next, entities } = action.payload;\n\n\t\t\tlet things = {};\n\n\t\t\tif (entities && entities.topTenList) {\n\t\t\t\tthings = entities.topTenList;\n\t\t\t}\n\n\t\t\treturn updeep({\n\t\t\t\t'count': count,\n\t\t\t\t'previous': previous,\n\t\t\t\t'next': next,\n\t\t\t\t'things': updeep.constant(things), // constant provides placement instead of update, so all previous entries are removed\n\t\t\t\t'organizerData': updeep.constant({}), // new topTenList data so clear out old organizer data, this must be loaded separately\n\t\t\t\t'isLoading': false\n\t\t\t}, state);\n\t\t}\n\n\t\tcase FETCH_TOPTENLISTS_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true }, state);\n\t\t}\n\n\t\tcase FETCH_TOPTENLISTS_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_TOPTENLIST_DETAIL_STARTED: {\n\t\t\treturn updeep({ 'isLoading': true\t}, state);\n\t\t}\n\n\t\tcase FETCH_TOPTENLIST_DETAIL_FAILED: {\n\t\t\treturn updeep({ 'isLoading': false }, state);\n\t\t}\n\n\t\tcase CREATE_TOPTENLIST_STARTED: {\n\t\t\t// at present this does nothing, it's really just to track that the action happened\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase CREATE_TOPTENLIST_SUCCEEDED: {\n\t\t\tconst topTenList = action.payload.topTenList;\n\t\t\treturn updeep({ 'things': { [topTenList.id]: topTenList } }, state);\n\t\t}\n\n\t\tcase DELETE_TOPTENLIST_SUCCEEDED: {\n\t\t\treturn updeep({ 'things': updeep.omit([action.payload.id]) }, state);\n\t\t}\n\n\t\tcase SET_TOPTENLIST_IS_PUBLIC_SUCCEEDED: {\n\t\t\tconst topTenListId = action.payload.id;\n\n\t\t\treturn updeep({ 'things': { [topTenListId]: { 'is_public': action.payload.is_public } } }, state);\n\t\t\t// reminder of another way to update nested arrays\n\t\t\t/* const index = state.things.findIndex((topTenList) => topTenList.id === action.payload.id);\n\n\t\t\tif (index !== -1) {\n\t\t\t\treturn updeep.updateIn(`things.${index}.is_public`, action.payload.is_public, state);\n\t\t\t} \n\n\t\t\treturn state; // in case topTenList was not found\n\t\t\t*/\n\t\t}\n\n\t\tcase CREATE_TOPTENITEM_SUCCEEDED: {\n\t\t\tconst topTenItem = action.payload.topTenItem;\n\n\t\t\tfunction addTopTenItem(topTenItems) {\n\t\t\t\treturn [].concat(topTenItems, topTenItem.id);\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${topTenItem.topTenList}.topTenItem`, addTopTenItem, state);\n\t\t}\n\n\t\tcase UPDATE_TOPTENLIST_SUCCEEDED: {\n\t\t\t// update editable properties\n\t\t\tconst update = {\n\t\t\t\t'name': action.payload.name,\n\t\t\t\t'description': action.payload.description,\n\t\t\t\t'is_public': action.payload.is_public,\n\t\t\t\t'modified_by': action.payload.modified_by,\n\t\t\t\t'modified_at': action.payload.modified_at,\n\t\t\t\t'parent_topTenItem': action.payload.parent_topTenItem,\n\t\t\t};\n\n\t\t\treturn updeep({ 'things': { [action.payload.id]: update } }, state);\n\t\t}\n\n\t\tcase MOVE_TOPTENITEM_UP_SUCCEEDED: {\n\t\t\tconst topTenItemsArray = action.payload.topTenItems; // array containing the two topTenItems that have been swapped\n\t\t\t// update the TopTenItems array in their parent topTenList, change order\n\t\t\tconst topTenListId = topTenItemsArray[0].topTenList_id;\n\n\t\t\tfunction replaceTopTenItems(topTenItems) {\n\t\t\t\tlet newTopTenItems = [].concat(state.things[topTenListId].topTenItem);\n\t\t\t\ttopTenItemsArray.map((topTenItem) => { // eslint-disable-line array-callback-return\n\t\t\t\t\tnewTopTenItems[topTenItem.order-1] = topTenItem.id;\n\t\t\t\t});\n\n\t\t\t\treturn newTopTenItems;\n\t\t\t}\n\n\t\t\treturn updeep.updateIn(`things.${topTenListId}.topTenItem`, replaceTopTenItems, state);\n\t\t}\n\n\t\tcase RECEIVE_ORGANIZER_DATA: {\n\t\t\t// load topTenLists data into store\n\t\t\tconst { entities } = action.payload;\n\t\t\tlet topTenLists = {};\n\n\t\t\tif (entities && entities.topTenList) {\n\t\t\t\ttopTenLists = entities.topTenList; // there is at least one topTenList\n\t\t\t}\n\n\t\t\treturn updeep({ 'organizerData': updeep.constant(topTenLists), 'isLoading': false }, state);\n\t\t}\n\n\t\tcase FETCH_ORGANIZER_DATA_STARTED: {\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tcase FETCH_ORGANIZER_DATA_FAILED: {\n\t\t\treturn updeep(state, state);\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n","// note that the reducers are called 'topTenList', 'topTenItem' for consistency with the database and endpoints\n// this terminology is maintained in the store\n// in the UI components we use topTenListReducer, topTenItemReducer\n// this isn't ideal but absolute naming consistency seems to be required on the server for DRF FlexFields to work\n\n// import the partial reducers\nimport { combineReducers } from 'redux';\nimport errors from './errors';\nimport auth from './auth';\nimport page from './page';\nimport topTenList from './topTenList';\nimport topTenItem from './topTenItem';\n// by importing the actual reducer as the default, the state of each is initialised\n\nexport default combineReducers({\n\t'errors': errors,\n\t'auth': auth,\n\t'page': page,\n\t'topTenList': topTenList,\n\t'topTenItem': topTenItem,\n});\n","// store.js\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules/rootReducer';\n\nconst composeEnhancers = composeWithDevTools({\n\t// options like actionSanitizer, stateSanitizer\n});\n\nconst store = createStore(\n\trootReducer, \n\t// inititalState, // by not supplying initial state, we tell the store to use the defaults specified in the reducer\n\tcomposeEnhancers(\n\t\tapplyMiddleware(thunk),\n\t));\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./modules/rootReducer', () => store.replaceReducer(rootReducer));\n}\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport './Search.scss';\n\nclass Search extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\n\t\tthis.closeDropdown = this.closeDropdown.bind(this);\n\t\tthis.onFocus = this.onFocus.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener('click', this.handleClick, false);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener('click', this.handleClick, false);\n\t}\n\n\thandleClick = e => {\n\t\t// clicked inside component\n\t\tif (this.node.contains(e.target)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// clicked outside component\n\t\tthis.closeDropdown();\n\t}\n\n\tcloseDropdown() {\n\t\tthis.setState({\n\t\t\t'showDropdown': false,\n\t\t});\n\t}\n\n\tonFocus() {\n\t\tthis.setState({\n\t\t\t'showDropdown': true,\n\t\t});\n\t}\n\n\trender() {\n\t\tlet searchResults;\n\t\t\n\t\tif (this.props.searchComplete) {\n\t\t\tif (this.props.searchResults.length === 0) {\n\t\t\t\tsearchResults = <div className=\"hint\">{`no results found for ${this.props.searchTerm}`}</div>;\n\t\t\t} else {\n\t\t\t\tsearchResults = <div className=\"results\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{this.props.searchResults.map((result) => {\n\t\t\t\t\t\t\tlet type = '';\n\t\t\t\t\t\t\tconst url = `/topTenList/${result.id}`;\n\n\t\t\t\t\t\t\tif (result.type === 'List') {\n\t\t\t\t\t\t\t\ttype = 'List';\n\t\t\t\t\t\t\t} else if (result.type === 'Item') {\n\t\t\t\t\t\t\t\ttype = 'Item';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li className=\"result\" key={result.id}>\n\t\t\t\t\t\t\t\t\t<Link to={url} onClick={this.closeDropdown}><span className=\"type\">{type}: </span><span className=\"name\">{result.name}</span>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>;\n\t\t\t}\n\t\t}\n\n\t\treturn(\n\t\t\t<div className=\"search\" ref={node => this.node = node}>\n\t\t\t\t<Input className=\"form-control\"\n\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t\tonFocus={this.onFocus}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t/>\n\t\t\t\t{this.state.showDropdown && searchResults}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Search;\n","// Navbar.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport * as authReducer from '../modules/auth';\nimport * as pageReducer from '../modules/page';\n\nimport Search from '../components/Search';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'showDropdown': false,\n\t\t};\n\n\t\tthis.onLogout = this.onLogout.bind(this);\n\t}\n\tshowDropdown(e) {\n\t\te.preventDefault();\n\t\tthis.setState(prevState => ({\n\t\t\t'showDropdown': !prevState.showDropdown,\n\t\t}));\n\t}\n\n\tonLogout(e) {\n\t\te.preventDefault();\n\n\t\tthis.props.dispatch(authReducer.logoutUser(this.props.history));\n\t}\n\n\tonSearch = e => {\n\t\t// wait until the user stops typing before searching\n\t\tconst searchTerm = e.target.value;\n\t\tclearTimeout(this.searchTimeout);\n\n\t\tthis.searchTimeout = setTimeout(() => {\n\t\t\tthis.props.dispatch(pageReducer.searchHome(searchTerm));\n\t\t}, 500);\n\t}\n\n\trender() {\n\t\tconst { isAuthenticated, user } = this.props.auth;\n\n\t\tconst authLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t{user.username && <li className=\"nav-item\"><Link to=\"/account\" className=\"nav-link\">{user.username}</Link></li>}\n\t\t\t\t<li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\" onClick={this.onLogout}>Logout</Link></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst guestLinks = (\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Register</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">My Top Tens</Link>\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\tonClick={(e) => {this.showDropdown(e);}} >\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className={`collapse navbar-collapse ${this.state.showDropdown ? 'show' : ''}`} id=\"navbarSupportedContent\">\n\t\t\t\t\t{isAuthenticated ? authLinks : guestLinks}\n\t\t\t\t\t<Search\n\t\t\t\t\t\tonChange={this.onSearch}\n\t\t\t\t\t\tplaceholder=\"Search lists and items...\"\n\t\t\t\t\t\tsearchComplete={this.props.searchComplete}\n\t\t\t\t\t\tsearchResults={this.props.searchResults}\n\t\t\t\t\t\tsearchTerm={this.props.searchTerm}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNavbar.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'searchTerm': PropTypes.string.isRequired,\n\t'searchComplete': PropTypes.bool.isRequired,\n\t'searchResults': PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'searchTerm': state.page.searchTerm,\n\t'searchComplete': state.page.searchComplete,\n\t'searchResults': state.page.searchResults,\n});\n\nexport default connect(mapStateToProps)(withRouter(Navbar));\n","/**\n * A custom Form component that handles form validation errors.\n * It executes the form's checkValidity\n **/\n\n// https://dev.to/_arpy/html5-form-validation-in-react-3308\n/*\nIssues\nIn render function, const props = [...this.props];\nthis fails to compile, Invalid attempt to spread non-iterable instance\nseems to be trying to turn an object into an array\nworks in the codepen but not when copied into my code\nreplaced with const props = {...this.props};\n\nExample has 'submit' as name of property for submit function.\nThis shows an error in the console even though it works.\nI replaced with onSubmit\n*/\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class ValidatedForm extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.validate = this.validate.bind(this);\n\t\tthis.checkFieldMatch = this.checkFieldMatch.bind(this);\n\t}\n\n\tstate = {\n\t\t'isValidated': false\n\t};\n\n\tcomponentDidMount() {\n\t\tif(this.props.inputsmustmatch) {\n\t\t\t// there are two inputs whose values must match\n\t\t\t// specified by id\n\t\t\t// at present only one pair can be specified\n\t\t\t// as a property of the ValidatedForm\n\t\t\t/*\n\t\t\t\tinputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords should match',\n\t\t\t\t} }\n\n\t\t\t*/\n\t\t\t// this should be revisited if we ever need more than one matching pair in a form\n\t\t\t// the second is constrained to match the first\n\t\t\t// i.e. input2 will display the error message\n\t\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\n\t\t\tconst input1Id = this.props.inputsmustmatch.input1;\n\t\t\tconst input2Id = this.props.inputsmustmatch.input2;\n\n\t\t\tconst input1Element = formEl.querySelector(`#${input1Id}`);\n\n\t\t\tconst input2Element = formEl.querySelector(`#${input2Id}`);\n\n\t\t\tif (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t\t\tinput1Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t\tinput2Element.oninput = (e) => this.checkFieldMatch(input1Id, input2Id, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckFieldMatch(input1, input2, e) {\n\t\t// check whether the values of two inputs match\n\t\t// if they don't, add an HTML validity message to input2\n\t\tconst node = ReactDOM.findDOMNode(this);\n\n\t\tif (node instanceof HTMLElement) {\n\t    const input1Element = node.querySelector(`#${input1}`);\n\t    const input2Element = node.querySelector(`#${input2}`);\n\n\t    if (input1Element instanceof HTMLElement && input2Element instanceof HTMLElement) {\n\t\t    if (input1Element.value === input2Element.value) {\n\t\t    \t input2Element.setCustomValidity('');\n\t\t    } else {\n\t\t    \tinput2Element.setCustomValidity(this.props.inputsmustmatch.message);\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tcustomMessages = {\n\t\t// uncomment a message to use it in place of the HTML5 default\n\t  // 'valueMissing': 'Custom required!', // `required` attr\n\t  // 'emailMismatch': 'Custom email mismatch', // Invalid email\n\t  // 'patternMismatch': 'Custom pattern mismatch',// `pattern` attr\n\t}\n\n\t// https://pageclip.co/blog/2018-02-20-you-should-use-html5-form-validation.html\n\tgetCustomMessage = (elem)  => {\n\t\t// check for a custom validity type, e.g. to ensure two passwords match\n\t\tif (elem.validity.customError) {\n\t\t\treturn elem.validationMessage;\n\t\t}\n\n\t  // check for a specific type mismatch e.g. emailMismatch\n\t  if (elem.validity.typeMismatch) {\n\t    return  this.customMessages[`${elem.type}Mismatch`];\n\t  } else {\n\t  \tfor (const invalidKey in this.customMessages) {\n\t      if (elem.validity[invalidKey]) {\n\t        return this.customMessages[invalidKey];\n\t      }\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * The main function that validates the form and fills in the error messages.\n\t * @returns bool Returns a boolean showing if the form is valid for submission or not.\n\t **/\n\tvalidate = () => {\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst formLength = formEl.length;\n\n\t\t/*\n\t\t* The checkValidity() method on a form runs the \n\t\t* html5 form validation of its elements and returns the result as a boolean.\n\t\t* It returns 'false' if at least one of the form elements does not qualify,\n\t\t* and 'true', if all form elements are filled with valid values.\n\t\t*/\n\t\tif (formEl.checkValidity() === false) {\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\t//the i-th child of the form corresponds to the form's i-th input element\n\t\t\t\tconst elem = formEl[i];\n\n\t\t\t\t/*\n\t\t\t\t* errorLabel placed next to an element is the container we want to use \n\t\t\t\t* for validation error message for that element\n\t\t\t\t*/\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\t\t\t// don't validate buttons\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\tif (!elem.validity.valid) {\n\t\t\t\t\t\tlet message = this.getCustomMessage(elem) || elem.validationMessage; // use standard message if no custom message\n\t\t\t\t\t\terrorLabel.textContent = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\t//The form is valid, so we clear all the error messages\n\t\t\tfor (let i = 0; i < formLength; i++) {\n\t\t\t\tconst elem = formEl[i];\n\t\t\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\t\t\t\tif (errorLabel && elem.nodeName.toLowerCase() !== 'button') {\n\t\t\t\t\terrorLabel.textContent = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.onSubmit(e);\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t};\n\n\t/**\n\t* Render the component as a regular form element with appended children from props.\n\t**/\n\trender() {\n\t\tconst props = { ...this.props };\n\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (props.className) {\n\t\t\tclassNames = [...props.className];\n\t\t\tdelete props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\t//The form will have a reference in the component and a submit handler set to the component's handleSubmit\n\t\treturn (\n\t\t\t<form\n\t\t\t\t{...props}\n\t\t\t\tclassName={classNames}\n\t\t\t\tnoValidate\n\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</form>\n\t\t);\n\t}\n}\n","// Register.js\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Register extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'username': '',\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t\t'password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'username': this.state.username,\n\t\t\t'email': this.state.email,\n\t\t\t'password1': this.state.password,\n\t\t\t'password2': this.state.password_confirm\n\t\t};\n\n\t\tthis.props.registerUser(user, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\t/* Note on password validation. Password requirements for django.auth are\n\t\thttps://docs.djangoproject.com/en/2.1/topics/auth/passwords/\n\n\t\tUserAttributeSimilarityValidator, which checks the similarity between the password and a set of attributes of the user.\n\n\t\tMinimumLengthValidator, which simply checks whether the password meets a minimum length, default 8.\n\n\t\tCommonPasswordValidator, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.\n\n\t\tNumericPasswordValidator, which checks whether the password isn’t entirely numeric.\n\n\t*/\n\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Create an account</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'password',\n\t\t\t\t\t'input2': 'password_confirm',\n\t\t\t\t\t'message': 'Passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>You will use your email address to login. It will not be seen by other users.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.username }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Your username may be seen by other users, for example in comments.</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password_confirm\">Confirm your password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row md=\"9\" lg=\"6\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.registration && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.registration}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nRegister.propTypes = {\n\t'registerUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register));\n","// Shown after successful registration of a new user\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nclass Welcome extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Welcome to My Top Tens</h2>\n\t\t\t\t<p>Your account has been created.</p>\n\t\t\t\t<p>To create Top Ten lists, you will need to verify your email address. An email containing a verification link has been sent to the email address with which you registered. Please click the link to verify your email address.</p>\n\t\t\t\t<p>If you do not receive the email within a few minutes, please check your Junk or Spam folder.</p>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<p>You can request a new registration email by <Link to=\"/login\">Logging in</Link> and going to your user account (click your username in the header bar).</p>\n\t\t\t\t\t\t\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nWelcome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps)(Welcome);\n","// Login.js\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass Login extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'password': '',\n\t\t};\n\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t\t'password': this.state.password,\n\t\t};\n\t\tthis.props.loginUser(user, this.props.history);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<ValidatedForm onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address or username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.authentication && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.authentication}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t<Link className=\"nav-link\" to=\"/forgotpassword\">Forgot password?</Link>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nLogin.propTypes = {\n\t'loginUser': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport  default connect(mapStateToProps, { loginUser })(Login);\n","import React from 'react';\n\n// onClick should dismiss the condition that caused the FlashMessage to be displayed\n// it is the responsibility of the component that triggers the FlashMessage, to also provide the way to dismiss it\nexport default function FlashMessage({ message, type, onClick }) {\n\treturn (\n\t\t<div className={`flash-error ${type}`}>\n\t\t\t<span>{message}</span>\n\t\t\t<button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={onClick}>\n\t\t\t  <span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport './Loading.scss';\n\nfunction Loading() {\n\treturn (\n\t\t<div className='loading'>\n\t\t\t<div className='inner-tube'>\n\t\t\t\t<Spinner color='secondary' style={{ 'width': '3rem', 'height': '3rem' }} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Loading;\n","// List of all topTenLists\n\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst TopTenListsList = ({ children, is_public, headerText }) => {\n\treturn (\n\t\t<Container className=\"topTenLists-list\">\n\t\t\t{headerText &&\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h3 className=\"topTenLists-list-name\">\n\t\t\t\t\t\t{headerText}\n\t\t\t\t\t</h3>\n\t\t\t\t</Col>\n\t\t\t</Row>}\n\t\t\t<Row>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default TopTenListsList;\n","// Set whether the topTenList is public\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport React from 'react';\n\nimport './SetTopTenListIsPublic.scss';\n\nconst SetTopTenListIsPublic = props => {\n\tconst topTenListId = props.topTenListId;\n\tconst isPublic = props.isPublic ? 'public' : 'private';\n\tconst tooltip = props.isPublic ? 'Public' : 'Private';\n\n\n\tfunction onChangeIsPublic(e) {\n\t\t// map from button data to true / false\n\t\tconst value = e.target.dataset.ispublic === 'public' ? true : false;\n\t\tprops.onChangeIsPublic({ 'id': e.target.dataset.toptenlistid, 'is_public': !value });\n\t}\n\n\treturn (\n\t\t<div className=\"is-public\">\n\t\t\t<button\n\t\t\t\tonClick={onChangeIsPublic}\n\t\t\t\tdata-toptenlistid={topTenListId}\n\t\t\t\tdata-ispublic={isPublic}\n\t\t\t\tclassName={`${isPublic} btn btn-default`}\n\t\t\t\ttitle={tooltip}\n\t\t\t>&nbsp;</button>\n\t\t</div>\n\t);\n};\n\nexport default SetTopTenListIsPublic;\n","export default function findObjectByProperty({ parentObject, property, value }) {\n\t// e.g. find a topTenList in the store based on its id\n\t// it feels like there ought to be a smarter way to do this!\n\t// but this does work, and stops once the object is found\n\tconst keys = Object.keys(parentObject);\n\n\tfor (let i=0; i<keys.length; i++) {\n\t\tlet childObject = parentObject[keys[i]];\n\t\tif (childObject[property] === value) {\n\t\t\treturn childObject;\n\t\t}\n\t}\n\n\treturn;\n}\n","// check whether the user can perform actions on topTenLists, topTenItems\n// topTenItems inherit permissions from their topTenList\n\n// result depends on whether they are logged in:\n// whether they own the topTenList:\n// whether the topTenList is public\n\n// topTenList is identified by id (primary key)\n// for viewing, we could trust the server that if a topTenList is returned, it can be viewed.\n// but for editing, we need to check if the user created it\n\n// identifier should be like { 'id': 'efg' } i.e. an object with one property\n\nimport store from '../store';\nimport findObjectByProperty from './findObjectByProperty';\n\nexport function canViewTopTenList(id) {\n\t// a topTenList can be viewed if public or if created by user\n\t//const property = Object.keys(identifier)[0];\n\t//const value = identifier[property];\n\tconst state = store.getState();\n\tconst topTenLists = state.topTenList.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canViewTopTenList = false;\n\n\tif (Object.keys(topTenLists).length > 0) {\n\t\tlet topTenList = findObjectByProperty({ 'parentObject': topTenLists, 'property': 'id', 'value': id });\n\n\t\tif (topTenList && (topTenList.is_public || (topTenList.created_by === userId))) {\n\t\t\tcanViewTopTenList = true;\n\t\t}\n\t}\n\n\treturn canViewTopTenList;\n}\n\nexport function canEditTopTenList(id) {\n\t// a topTenList can be edited if created by user\n\tconst state = store.getState();\n\tconst topTenLists = state.topTenList.things;\n\tconst userId = state.auth.user.id;\n\n\tlet canEditTopTenList = false;\n\n\tif (Object.keys(topTenLists).length > 0) {\n\t\tlet topTenList = findObjectByProperty({ 'parentObject': topTenLists, 'property': 'id', 'value': id });\n\n\t\tif (topTenList && (topTenList.created_by === userId)) {\n\t\t\tcanEditTopTenList = true;\n\t\t}\n\t}\n\n\treturn canEditTopTenList;\n}\n\nexport function canCreateTopTenList() {\n\t// the user can create a topTenList if they are logged in\n\t// and have verified their email address\n\tconst state = store.getState();\n\n\tif (state.auth.isAuthenticated && state.auth.user.emailVerified) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n","// Top-level summary of a topTenList\n\nimport React from 'react';\nimport { Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n// Note how the is_public is updated without making this into a React Component with state.\n// By using props to populate the UI, we enable time travel and a direct connection with the store.\n\nimport SetTopTenListIsPublic from './SetTopTenListIsPublic';\n\nimport * as permissions from '../modules/permissions';\n\nimport './TopTenListSummary.scss';\n\nconst TopTenListSummary = props => {\n\tlet canEdit = permissions.canEditTopTenList(props.topTenList.id);\n\n\treturn (\n\t\t<Col sm=\"12\" md=\"6\">\n\t\t\t<div className=\"topTenList-summary\">\n\t\t\t\t<Link to={`/topTenList/${props.topTenList.id}`}>\n\t\t\t\t\t<div className=\"topTenList-name\">\n\t\t\t\t\t\t<div>{props.topTenList.name}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\t\t\t\t{canEdit && (\n\t\t\t\t\t<div className=\"topTenList-summary-controls\">\n\t\t\t\t\t\t<SetTopTenListIsPublic\n\t\t\t\t\t\t\ttopTenListId={props.topTenList.id}\n\t\t\t\t\t\t\tisPublic={props.topTenList.is_public}\n\t\t\t\t\t\t\tonChangeIsPublic={props.onChangeIsPublic}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button className=\"btn btn-danger\" title=\"Delete\" onClick={onDeleteTopTenList}>X</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<Link to={`/topTenList/${props.topTenList.id}`}>\n\t\t\t\t\t<div className=\"topTenList-description\">{props.topTenList.description}</div>\n\t\t\t\t</Link>\n\t\t\t\t\n\t\t\t\t{props.showCreatedBy && \n\t\t\t\t\t<div className=\"topTenList-created-by\">{props.topTenList.created_by_username}</div>\n\n\t\t\t\t}\n\t\t\t</div>\n\t\t</Col>\n\t);\n\n\tfunction onDeleteTopTenList(e) {\n\t\tprops.onDeleteTopTenList({ 'id': props.topTenList.id, 'name': props.topTenList.name });\n\t}\n};\n\nexport default TopTenListSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.scss';\n// adapted from http://jasonwatmore.com/post/2017/03/14/react-pagination-example-with-logic-like-google\n// major changes to render only pagination controls, not data\n// replaced <a> with <button> for accessibility\n \nclass Pagination extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { 'pager': {} };\n\t}\n \n\tcomponentDidMount() {\n\t\t// set page if there is a count\n\t\t// also check for currentPage. Parent component may re-render, causing this component to be recreated.\n\t\tif (this.props.count) {\n\t\t\tconst initialPage = this.props.currentPage ? this.props.currentPage : this.props.defaultPage;\n\t\t\tthis.setPage(initialPage);\n\t\t}\n\t}\n \n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t// reset page if topTenItems array has changed\n\t\tif (this.props.count !== prevProps.count) {\n\t\t\tthis.setPage(this.props.defaultPage);\n\t\t}\n\t}\n \n\tsetPage(pageNumber) {\n\t\tvar { count, pageSize } = this.props;\n\t\tvar pager = this.state.pager;\n \n\t\t// get new pager object for specified page\n\t\tpager = this.getPager(count, pageNumber, pageSize);\n\n\t\tif (pageNumber < 1 || pageNumber > pager.totalPages) {\n\t\t\treturn;\n\t\t}\n\n\t\tpageNumber = Math.min(pageNumber, pager.totalPages);\n \n\t\t// update state\n\t\tthis.setState({ 'pager': pager });\n \n\t\tthis.props.onChangePage(pageNumber);\n\t}\n \n\tgetPager(totalTopTenItems, currentPage, pageSize) {\n\t\t// default to first page\n\t\tcurrentPage = currentPage || 1;\n \n\t\t// default page size is 10\n\t\tpageSize = pageSize || 10;\n \n\t\t// calculate total pages\n\t\tvar totalPages = Math.ceil(totalTopTenItems / pageSize);\n \n\t\tvar startPage, endPage;\n\t\tif (totalPages <= 10) {\n\t\t\t// less than 10 total pages so show all\n\t\t\tstartPage = 1;\n\t\t\tendPage = totalPages;\n\t\t} else {\n\t\t\t// more than 10 total pages so calculate start and end pages\n\t\t\tif (currentPage <= 6) {\n\t\t\t\tstartPage = 1;\n\t\t\t\tendPage = 10;\n\t\t\t} else if (currentPage + 4 >= totalPages) {\n\t\t\t\tstartPage = totalPages - 9;\n\t\t\t\tendPage = totalPages;\n\t\t\t} else {\n\t\t\t\tstartPage = currentPage - 5;\n\t\t\t\tendPage = currentPage + 4;\n\t\t\t}\n\t\t}\n \n\t\t// calculate start and end topTenItem indexes\n\t\tvar startIndex = (currentPage - 1) * pageSize;\n\t\tvar endIndex = Math.min(startIndex + pageSize - 1, totalTopTenItems - 1);\n \n\t\t// create an array of pages to ng-repeat in the pager control\n\t\tvar pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n \n\t\t// return object with all pager properties required by the view\n\t\treturn {\n\t\t\t'totalTopTenItems': totalTopTenItems,\n\t\t\t'currentPage': currentPage,\n\t\t\t'pageSize': pageSize,\n\t\t\t'totalPages': totalPages,\n\t\t\t'startPage': startPage,\n\t\t\t'endPage': endPage,\n\t\t\t'startIndex': startIndex,\n\t\t\t'endIndex': endIndex,\n\t\t\t'pages': pages\n\t\t};\n\t}\n \n\trender() {\n\t\tvar pager = this.state.pager;\n \n\t\tif (!pager.pages || pager.pages.length <= 1) {\n\t\t\t// don't display pager if there is only 1 page\n\t\t\treturn null;\n\t\t}\n \n\t\treturn (\n\t\t\t<ul className=\"pagination\">\n\t\t\t\t<li className={pager.currentPage === 1 ? 'disabled' : ''}>\n\t\t\t\t\t<button type=\"button\" className=\"btn pagination first\" onClick={() => this.setPage(1)}>First</button>\n\t\t\t\t</li>\n\t\t\t\t<li className={pager.currentPage === 1 ? 'disabled' : ''}>\n\t\t\t\t\t<button type=\"button\" className=\"btn pagination previous\" onClick={() => this.setPage(pager.currentPage - 1)}>Previous</button>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"spacer\"></li>\n\t\t\t\t{pager.pages.map((page, index) =>\n\t\t\t\t\t<li key={index} className={pager.currentPage === page ? 'active' : ''}>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn pagination page\" onClick={() => this.setPage(page)}>{page}</button>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t<li className=\"spacer\"></li>\n\t\t\t\t<li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n\t\t\t\t\t<button type=\"button\" className=\"btn pagination next\" onClick={() => this.setPage(pager.currentPage + 1)}>Next</button>\n\t\t\t\t</li>\n\t\t\t\t<li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n\t\t\t\t\t<button type=\"button\" className=\"btn pagination last\" onClick={() => this.setPage(pager.totalPages)}>Last</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nPagination.propTypes = {\n\t'count': PropTypes.number,\n\t'onChangePage': PropTypes.func.isRequired,\n\t'defaultPage': PropTypes.number,\n\t'pageSize': PropTypes.number\n};\n\nPagination.defaultProps = {\n\t'count': 0,\n\t'defaultPage': 1,\n\t'pageSize': 10\n};\n\nexport default Pagination;\n","// Page to display list of topTenLists\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport TopTenListsList from '../components/TopTenListsList';\nimport TopTenListSummary from '../components/TopTenListSummary';\nimport './TopTenListsPage.scss';\nimport Pagination from '../components/Pagination';\n//import Search from '../components/Search';\n\nclass TopTenListsPage extends Component {\n\t/*onSearch = e => {\n\t\tthis.props.onSearch(e.target.value);\n\t} */\n\n\tonAddTopTenList = () => {\n\t\tthis.props.history.push('/newtopTenList');\n\t}\n\n\trenderPublicTopTenLists() {\n\t\tconst { publicTopTenLists, onChangeIsPublic, onDeleteTopTenList } = this.props;\n\n\t\treturn (\n\t\t\t<TopTenListsList headerText=\"All public Top Ten lists\">\n\t\t\t\t{publicTopTenLists.map(topTenList => \n\t\t\t\t\t<TopTenListSummary\n\t\t\t\t\t\tkey={topTenList.id}\n\t\t\t\t\t\ttopTenList={topTenList}\n\t\t\t\t\t\tonChangeIsPublic={onChangeIsPublic}\n\t\t\t\t\t\tonDeleteTopTenList={onDeleteTopTenList}\n\t\t\t\t\t\tshowCreatedBy={true}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</TopTenListsList>\n\t\t);\n\t}\n\n\trenderMyTopTenLists() {\n\t\tconst { myTopTenLists, onChangeIsPublic, onDeleteTopTenList } = this.props;\n\n\t\treturn Object.keys(myTopTenLists).map((is_public, index) => {\n\t\t\tconst topTenListsByIsPublic = myTopTenLists[is_public];\n\t\t\tlet headerText = is_public === 'true' ? 'My public Top Ten lists' : 'My private Top Ten lists';\n\n\t\t\treturn (\n\t\t\t\t<div key={index}>\n\t\t\t\t\t{(topTenListsByIsPublic.length > 0) && (\n\t\t\t\t\t\t<TopTenListsList is_public={is_public} headerText={headerText}>\n\t\t\t\t\t\t\t{topTenListsByIsPublic.map(topTenList => \n\t\t\t\t\t\t\t\t<TopTenListSummary\n\t\t\t\t\t\t\t\t\tkey={topTenList.id}\n\t\t\t\t\t\t\t\t\ttopTenList={topTenList}\n\t\t\t\t\t\t\t\t\tonChangeIsPublic={onChangeIsPublic}\n\t\t\t\t\t\t\t\t\tonDeleteTopTenList={onDeleteTopTenList}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</TopTenListsList>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trenderTabs() {\n\t\treturn (\n\t\t\t<ul><li>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.props.selectedTab === 'mytoptens'? 'selected' : ''}\n\t\t\t\t\tid='mytoptens'\n\t\t\t\t\tonClick={this.props.handleTabClick}>My Top Ten lists\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tclassName={this.props.selectedTab === 'publictoptens'? 'selected' : ''}\n\t\t\t\t\tid='publictoptens'\n\t\t\t\t\tonClick={this.props.handleTabClick}>Public Top Ten lists\n\t\t\t\t</span>\n\t\t\t</li></ul>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet TopTenListsList;\n\n\t\tif (this.props.selectedTab === 'mytoptens') {\n\t\t\tTopTenListsList = this.renderMyTopTenLists();\n\t\t} else if (this.props.selectedTab === 'publictoptens') {\n\t\t\tTopTenListsList = this.renderPublicTopTenLists();\n\t\t}\n\n\t\tif (this.props.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"topTenLists-loading\">\n\t\t\t\t\tLoading...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet createTopTenList;\n\t\tif (this.props.canCreateTopTenList()) {\n\t\t\tcreateTopTenList = (<button\n\t\t\t\tclassName=\"btn btn-primary create-topTenList\"\n\t\t\t\tonClick={this.onAddTopTenList}\n\t\t\t>+ New Top Ten list</button>);\n\t\t} else if (this.props.auth.isAuthenticated) {\n\t\t\tcreateTopTenList = (<div>In order to create new Top Ten lists, please verify your email address by clicking the link in the email you were sent when you registered. You can request a new verification email from your <Link to=\"/account\">Account</Link> page.</div>);\n\t\t} else {\n\t\t\tcreateTopTenList = (<div>In order to create new Top Ten lists, please <Link to=\"/login\">log in</Link> or <Link to=\"/register\">register a My Top Tens account</Link>.</div>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"topTenLists-list\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col  className=\"top-level-topTenLists-control\">\n\t\t\t\t\t\t\t<Label check>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tdefaultChecked={this.props.topLevelTopTenListsOnly}\n\t\t\t\t\t\t\t\t\tonChange={this.props.handleTopLevelListsChange}/>{' '}\n\t\t\t\t\t\t\t\tShow top level Top Ten lists only\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{createTopTenList}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t{this.props.auth.isAuthenticated && <div className=\"tabs\">\n\t\t\t\t\t{this.renderTabs()}\n\t\t\t\t\t<div className=\"clearing\"></div>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"topTenLists\">\n\t\t\t\t\t{TopTenListsList}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tcount={this.props.count}\n\t\t\t\t\t\t\tpageSize={this.props.pageSize}\n\t\t\t\t\t\t\tcurrentPage={this.props.currentPage}\n\t\t\t\t\t\t\tonChangePage={this.props.onChangePage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(TopTenListsPage);\n","// Home.js\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as topTenListReducer from '../modules/topTenList';\nimport * as pageReducer from '../modules/page';\nimport { getPublicTopTenLists, getMyGroupedTopTenLists } from '../modules/topTenList';\n\nimport FlashMessage from '../components/FlashMessage';\nimport Loading from '../components/Loading';\nimport TopTenListsPage from '../components/TopTenListsPage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\nimport { PAGE_SIZE } from '../constants';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tprops.dispatch(clearErrors());\n\n\t\t// which set of topTenLists to view\n\t\t// if logged in, default my-topTenLists\n\t\t// if not logged in, only show publictoptens\n\t\tlet listset = 'publictoptens';\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(props.location.search);\n\t\t\tlistset = urlParams.get('listset') || 'mytoptens';\n\t\t}\n\n\t\tthis.setListSetURL(listset);\n\n\t\tthis.state = {\n\t\t\t'selectedTab': listset,\n\t\t\t'topLevelTopTenListsOnly': true,\n\t\t\t'currentPage': 1,\n\t\t};\n\n\t\tthis.onChangePage = this.onChangePage.bind(this);\n\t\tthis.handleTopLevelTopTenListsChange = this.handleTopLevelTopTenListsChange.bind(this);\n\t\tthis.handleTabClick = this.handleTabClick.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchTopTenLists({});\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user's status has changed, refresh TopTenLists\n\t\tif(prevProps.auth.user.token !== this.props.auth.user.token){\n\t\t\tthis.fetchTopTenLists({});\n\t\t}\n\n\t\t// user has just logged out\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': 'publictoptens',\n\t\t\t});\n\n\t\t\tthis.setListSetURL('publictoptens');\n\t\t}\n\t}\n\n\t// refresh topTenLists based on user choices\n\tfetchTopTenLists({ listset = this.state.topTenListset, topLevelTopTenListsOnly = this.state.topLevelTopTenListsOnly, currentPage = this.state.currentPage }) {\n\t\t// use state values by default\n\t\t// however these may be passed in by functions that set state because setState is not synchronous\n\t\tthis.props.dispatch(topTenListReducer.fetchTopTenLists({\n\t\t\tlistset,\n\t\t\ttopLevelTopTenListsOnly,\n\t\t\t'limit': PAGE_SIZE,\n\t\t\t'offset': (currentPage - 1) * PAGE_SIZE,\n\t\t}));\n\t}\n\n\tonChangePage(currentPage) {\n\t\t// update state with new page of topTenLists\n\t\tthis.setState({ 'currentPage': currentPage });\n\n\t\tif (currentPage !== this.state.currentPage) {\n\t\t\tthis.fetchTopTenLists({ currentPage });\n\t\t}\n\t}\n\n\tonSearch = searchTerm => {\n\t\t// wait until the user pauses in typing before searching\n\t\tclearTimeout(this.searchTimeout);\n\t\tthis.searchTimeout = setTimeout(() => {\n\t\t\tthis.props.dispatch(pageReducer.searchHome(searchTerm));\n\t\t}, 500);\n\t}\n\n\tonChangeIsPublic = ({ id, is_public }) => {\n\t\tthis.props.dispatch(topTenListReducer.setTopTenListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteTopTenList = ({ id, name }) => {\n\t\tif (confirm(`Are you sure you want to delete the topTenList ${name}`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t\tthis.props.dispatch(topTenListReducer.deleteTopTenList(id));\n\t\t}\n\t}\n\n\thandleTopLevelTopTenListsChange() {\n\t\tconst topLevelTopTenListsOnly = !this.state.topLevelTopTenListsOnly;\n\t\tthis.setState({\n\t\t\t'topLevelTopTenListsOnly': topLevelTopTenListsOnly,\n\t\t});\n\n\t\tthis.fetchTopTenLists({ topLevelTopTenListsOnly });\n\t}\n\n\tsetListSetURL(listset) { // indicate current topTenList set in URL; depends on selected tab\n\t\tlet URL = `${this.props.location.pathname}?listset=${listset}`;\n\t\tthis.props.history.push(URL);\n\t}\n\n\thandleTabClick = (e) => {\n\t\tconst selectedTab = e.target.id;\n\n\t\tif (this.state.selectedTab !== selectedTab) {\n\t\t\tthis.setState({\n\t\t\t\t'selectedTab': selectedTab,\n\t\t\t});\n\n\t\t\tthis.setListSetURL(e.target.id);\n\t\t\tthis.fetchTopTenLists({ 'listset': selectedTab });\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t{this.props.isLoading && <Loading />}\n\t\t\t\t<TopTenListsPage\n\t\t\t\t\tauth={this.props.auth}\n\t\t\t\t\tmyTopTenLists={this.props.myTopTenLists}\n\t\t\t\t\tpublicTopTenLists={this.props.publicTopTenLists}\n\t\t\t\t\tcanCreateTopTenList={permissions.canCreateTopTenList}\n\t\t\t\t\tonCreateTopTenList={this.onCreateTopTenList}\n\t\t\t\t\tonChangeIsPublic={this.onChangeIsPublic}\n\t\t\t\t\tonDeleteTopTenList={this.onDeleteTopTenList}\n\t\t\t\t\tisLoading={this.props.isLoading}\n\t\t\t\t\ttopLevelTopTenListsOnly={this.state.topLevelTopTenListsOnly}\n\t\t\t\t\thandleTopLevelTopTenListsChange={this.handleTopLevelTopTenListsChange}\n\t\t\t\t\thandleTabClick={this.handleTabClick}\n\t\t\t\t\tselectedTab={this.state.selectedTab}\n\t\t\t\t\tcount={this.props.count}\n\t\t\t\t\tpageSize={PAGE_SIZE}\n\t\t\t\t\tcurrentPage={this.state.currentPage}\n\t\t\t\t\tonChangePage={this.onChangePage}\n\t\t\t\t\t//searchTerm={this.props.searchTerm}\n\t\t\t\t\t//searchComplete={this.props.searchComplete}\n\t\t\t\t\t//searchResults={this.props.searchResults}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'publicTopTenLists': PropTypes.array.isRequired,\n\t'myTopTenLists': PropTypes.object.isRequired,\n\t'count': PropTypes.number, // data may not yet be loaded\n\t'next': PropTypes.string, // there may be no 'next' page\n\t'previous': PropTypes.string, // there may be no 'previous' page\n\t//'searchTerm': PropTypes.string.isRequired,\n\t//'searchComplete': PropTypes.bool.isRequired,\n\t//'searchResults': PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.topTenList.isLoading,\n\t'publicTopTenLists': getPublicTopTenLists(state),\n\t'myTopTenLists': getMyGroupedTopTenLists(state),\n\t'count': state.topTenList.count,\n\t'next': state.topTenList.next,\n\t'previous': state.topTenList.previous,\n\t//'searchTerm': state.page.searchTerm,\n\t//'searchComplete': state.page.searchComplete,\n\t//'searchResults': state.page.searchResults,\n});\n\nexport default connect(mapStateToProps)(withRouter(Home));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\nimport { createTopTenList } from '../modules/topTenList';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\nimport * as permissions from '../modules/permissions';\n\nimport ValidatedForm from '../components/ValidatedForm.js';\nimport { MAX_TOPTENITEMS_IN_TOPTENLIST } from '../constants';\n\nimport './CreateTopTenList.scss';\n\nclass CreateTopTenList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'name': '',\n\t\t\t'description': '',\n\t\t};\n\t\tfor (let i=1; i<=MAX_TOPTENITEMS_IN_TOPTENLIST; i++) {\n\t\t\tthis.state[`topTenItem${i}_name`] = '';\n\t\t\tthis.state[`topTenItem${i}_description`] = '';\n\t\t}\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\n\t\tprops.dispatch(clearErrors());\n\n\t\tif (props.auth.isAuthenticated) {\n\t\t\tconst urlParams = new URLSearchParams(props.location.search);\n\t\t\tthis.state.parentTopTenItemId = urlParams.get('parent-topTenItem-id');\n\t\t\tthis.state.parentTopTenItemName = urlParams.get('parent-topTenItem-name');\n\t\t\tthis.state.parentTopTenListName = urlParams.get('parent-topTenList-name');\n\t\t\tthis.state.parentTopTenListId = urlParams.get('parent-topTenList-id');\n\t\t}\n\n\t\t// use parent item name as default list name\n\t\tif (this.state.parentTopTenItemName) {\n\t\t\tthis.state.name = this.state.parentTopTenItemName;\n\t\t}\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tcancel(e) {\n\t\tthis.props.history.push('/');\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tlet newTopTenList = {\n\t\t\t'name': this.state.name,\n\t\t\t'description': this.state.description,\n\t\t\t'topTenItem': [],\n\t\t};\n\t\t\n\t\tfor (let i=1; i<=MAX_TOPTENITEMS_IN_TOPTENLIST; i++) {\n\t\t\tif (this.state[`topTenItem${i}`] !== '') {\n\t\t\t\tconst newTopTenItem = {\n\t\t\t\t\t'name': this.state[`topTenItem${i}_name`],\n\t\t\t\t\t'description': this.state[`topTenItem${i}_description`],\n\t\t\t\t\t'order': i,\n\t\t\t\t};\n\t\t\t\tnewTopTenList.topTenItem.push(newTopTenItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.state.parentTopTenItemId) {\n\t\t\tnewTopTenList.parent_topTenItem = this.state.parentTopTenItemId;\n\t\t}\n\n\t\tthis.onCreateTopTenList(newTopTenList);\n\t}\n\n\tonCreateTopTenList = (newTopTenList) => {\n\t\tthis.props.dispatch(createTopTenList(newTopTenList, this.props.history));\n\t}\n\n\n\tcomponentDidMount() {\n\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\t// If the user cannot create a topTenList, redirect to Home\n\t\tif(!permissions.canCreateTopTenList() && !this.props.auth.isLoading){\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderTopTenItemInputs() {\n\t\tlet elements = [];\n\n\t\tfor (let i=1; i<=MAX_TOPTENITEMS_IN_TOPTENLIST; i++) {\n\t\t\telements.push(\n\t\t\t\t<div className=\"form-group\" key={`topTenItem${i}`}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\" className=\"topTenItem-name\">\n\t\t\t\t\t\t\t<Label for={`topTenItem${i}_name`}>Top Ten item {i}</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname={`topTenItem${i}_name`}\n\t\t\t\t\t\t\t\tid={`topTenItem${i}_name`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`topTenItem${i}_name`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Enter the Top Ten item name\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\" className=\"topTenItem-description\">\n\t\t\t\t\t\t\t<Label for={`topTenItem${i}_description`}>Top Ten item {i} description</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\tname={`topTenItem${i}_description`}\n\t\t\t\t\t\t\t\tid={`topTenItem${i}_description`}\n\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\tvalue={ this.state[`topTenItem${i}_description`] }\n\t\t\t\t\t\t\t\tplaceholder=\"Enter the description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>);\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container className=\"create-topTenList\">\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<h2>Create a new Top Ten list</h2>\n\t\t\t\t{this.state.parentTopTenItemName && (\n\t\t\t\t\t<div className=\"parent-topTenItem\"><Link to={`/topTenList/${this.state.parentTopTenListId}`}>{this.state.parentTopTenListName}</Link> > {this.state.parentTopTenItemName}</div>\n\t\t\t\t)}\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\" className=\"topTenList-name\">\n\t\t\t\t\t\t\t\t<Label for=\"name\">Top Ten List name</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.name }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the topTenList name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'>\n\t\t\t\t\t\t\t\t\t<p>Name is required</p>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col lg=\"9\" className=\"topTenList-description\">\n\t\t\t\t\t\t\t\t<Label for=\"username\">Description</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.description }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter the topTenList description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.renderTopTenItemInputs()}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\"onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSave list\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t\t{this.props.errors.topTenLists && <div className=\"invalid-feedback \" style={{ 'display': 'block' }}>{this.props.errors.topTenLists}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nCreateTopTenList.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n});\n\nexport default connect(mapStateToProps)(withRouter(CreateTopTenList));\n","// An input or textarea that can be edited by clicking on it\n// It can be blank, or required\n// note custom property data-state which is the name of the property in this.state\n// Can be used with keyboard only\n// It is a regular form with cancel, submit. This allows keyboard navigation but the form stays open on blur - otherwise cancel would not be possible with keyboard.\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Row, Col, Label, Input } from 'reactstrap';\nimport './EditableTextField.scss';\nimport Markdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\n\nclass EditableTextField extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'showInput': false,\n\t\t\t'isValidated': false,\n\t\t\t'initialValue': '',\n\t\t\t'overflowActive': false,\n\t\t\t'type': props.textarea ? 'textarea' : 'input',\n\t\t};\n\n\t\tif (props.textarea === true) {\n\t\t\tthis.state.expanded = false;\n\t\t}\n\n\t\tthis.showInput = this.showInput.bind(this);\n\t\tthis.onKeyUp = this.onKeyUp.bind(this);\n\t\tthis.toggleMore = this.toggleMore.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\t// does the text overflow its container?\n\tisOverflowActive() {\n\t\tif (!this.props.textarea) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst element = this.textElement;\n\t\tif (!element) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst overflowActive = element.offsetHeight < element.scrollHeight;\n\n\t\tif (overflowActive !== this.state.overflowActive) {\n\t\t\tthis.setState({ 'overflowActive': overflowActive });\n\t\t}\n\t}\n\n\ttoggleMore() {\n\t\tthis.setState({\n\t\t\t'expanded': !this.state.expanded,\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.isOverflowActive();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.isOverflowActive();\n\t}\n\n\tonKeyUp(e) {\n\t\tvar code = e.keyCode || e.which;\n\t\tif(code === 13) { //13 is the enter keycode\n\t\t\tthis.showInput(e);\n\t\t}\n\t}\n\n\tshowInput(e) {\n\t\tconst isPlaceholder = e.target.classList.contains('placeholder');\n\n\t\tif (!isPlaceholder) {\n\t\t\tthis.setState({\n\t\t\t\t'initialValue': e.target.textContent,\n\t\t\t});\n\t\t}\n\t\tthis.toggleInput();\n\t}\n\n\ttoggleInput() {\n\t\tconst newShowInputValue = !this.state.showInput;\n\n\t\t// optionally, tell the parent component whether the field is being edited\n\t\tif (typeof this.props.isEditing === 'function') {\n\t\t\tthis.props.isEditing(newShowInputValue);\n\t\t}\n\n\t\tthis.setState({\n\t\t\t'showInput': newShowInputValue,\n\t\t});\n\t}\n\n\tcancel = () => {\n\t\t// restore the initial value of the field as though the user had just entered it\n\t\tconst fakeEvent = {\n\t\t\t'target': {\n\t\t\t\t'dataset': { 'state': this.props['data-state'] },\n\t\t\t\t'value': this.state.initialValue,\n\t\t\t}\n\t\t};\n\t\tthis.props.handleInputChange(fakeEvent);\n\t\tthis.toggleInput();\n\t}\n\n\tvalidate = () => {\n\t\t// custom validation for consistency with other forms\n\t\tconst formEl = ReactDOM.findDOMNode(this); // component parent node\n\t\tconst elem = formEl.querySelector(this.state.type);\n\t\tconst errorLabel = elem.parentNode.querySelector('.invalid-feedback');\n\n\t\tif (!elem.validity.valid) {\n\t\t\tlet message = elem.validationMessage;\n\t\t\terrorLabel.textContent = message;\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\terrorLabel.textContent = '';\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\t// the user has typed a new value and the parent component should be notified\n\t\t\n\t\tconst inputElement = e.target.querySelector(this.state.type);\n\n\t\tif (this.validate()) {\n\t\t\tthis.props.handleNewValue(inputElement);\n\t\t\tthis.toggleInput();\n\t\t}\n\n\t\tthis.setState({ 'isValidated': true });\n\t}\n\n\trenderValue() {\n\t\t// construct the display of the text value\n\t\tlet expanded = '';\n\t\tif (this.state.expanded) {\n\t\t\texpanded = 'expanded';\n\t\t}\n\n\t\tlet showMoreButton = false;\n\n\t\tif (this.state.overflowActive || this.state.expanded) {\n\t\t\tshowMoreButton = true;\n\t\t}\n\n\t\tlet moreButtonText = 'More...';\n\t\tif (this.state.expanded) {\n\t\t\tmoreButtonText = 'Less...';\n\t\t}\n\n\t\tlet onClick;\n\t\tlet onKeyUp;\n\t\tlet tabIndex = '';\n\n\t\tif (this.props.canEdit) {\n\t\t\ttabIndex = '0';\n\t\t\tonClick=this.showInput;\n\t\t\tonKeyUp=this.onKeyUp;\n\t\t}\n\n\t\tlet item = (\n\t\t\t<span>\n\t\t\t\t<span className={`text ${expanded}`}\n\t\t\t\t\tref={ref => (this.textElement = ref)}\n\t\t\t\t\tonKeyUp={onKeyUp}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\ttabIndex={tabIndex}\t\n\t\t\t\t>\n\t\t\t\t\t<Markdown \n\t\t\t\t\t\tescapeHtml={true}\n\t\t\t\t\t\tsource={this.props.value} \n\t\t\t\t\t/>\n\t\t\t\t\t{showMoreButton && <span className=\"fader\"></span>}</span>\n\t\t\t\t{showMoreButton && <button type=\"button\" className=\"show-more\" onClick={this.toggleMore}>{moreButtonText}</button>}\n\t\t\t</span>\n\t\t);\n\n\t\treturn item;\n\t}\n\n\trender() {\n\t\tlet type = 'text';\n\t\tif (this.props.textarea) {\n\t\t\ttype = 'textarea';\n\t\t}\n\t\t// Add bootstrap's 'was-validated' class to the forms classes to support its styling\n\t\tlet classNames = [];\n\t\tif (this.props.className) {\n\t\t\tclassNames = [...this.props.className];\n\t\t\tdelete this.props.className;\n\t\t}\n\n\t\tif (this.state.isValidated) {\n\t\t\tclassNames.push('was-validated');\n\t\t}\n\n\t\tconst showInput = this.state.showInput;\n\t\tlet item;\n\n\t\tif (this.props.canEdit) {\n\t\t\tif (showInput) {\t\t\t\n\t\t\t\titem = (\n\t\t\t\t\t<form\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\t\tclassName={classNames}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<Label for={this.props.id}>{this.props.label}</Label>\n\t\t\t\t\t\t\t\t\t<Input autoFocus\n\t\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\t\tname={this.props.id}\n\t\t\t\t\t\t\t\t\t\trequired={this.props.required}\n\t\t\t\t\t\t\t\t\t\tdata-state={this.props['data-state']}\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props['data-entityid']}\n\t\t\t\t\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\t\t\t\t\tonChange={this.props.handleInputChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"controls\">\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\" onClick={this.cancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tDone\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span className=\"hint\">You can use <Link to=\"https://help.github.com/articles/basic-writing-and-formatting-syntax/\">Markdown</Link></span>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</form>);\n\t\t\t} else {\n\t\t\t\tif (this.props.value !== '') {\n\t\t\t\t\titem = this.renderValue();\n\t\t\t\t} else {\n\t\t\t\t\titem = (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"placeholder\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\tonClick={this.showInput}\n\t\t\t\t\t\t\tonKeyUp={this.onKeyUp}\n\t\t\t\t\t\t>{this.props.placeholder}</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.props.value !== '') {\n\t\t\t\titem = this.renderValue();\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className={`editable-text-field ${showInput && 'editing'}`}>\n\t\t\t\t{ item }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditableTextField;\n","// An individual item\n// It is a stateful component so that the description field can be shown only if there is a name defined.\n\nimport store from '../store';\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport EditableTextField from './EditableTextField.js';\nimport * as permissions from '../modules/permissions';\nimport './TopTenItem.scss';\nimport { MAX_TOPTENITEMS_IN_TOPTENLIST } from '../constants';\n\nclass Item extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\t'isEditingName': false,\n\t\t};\n\t\t//console.log('topTenItem props, ', props);\n\t\tthis.onCreateChildTopTenList = this.onCreateChildTopTenList.bind(this);\n\t\tthis.setIsEditingName = this.setIsEditingName.bind(this);\n\t\tthis.onMoveUp = this.onMoveUp.bind(this);\n\t\tthis.onMoveDown = this.onMoveDown.bind(this);\n\t}\n\n\tsetIsEditingName(showInput) {\n\t\tthis.setState({\n\t\t\t'isEditingName': showInput,\n\t\t});\n\t}\n\n\tonCreateChildTopTenList = () => {\n\t\tthis.props.onCreateChildTopTenList(this.props.topTenItem);\n\t}\n\n\tonMoveUp = () => {\n\t\tthis.props.onMoveTopTenItemUp(this.props.topTenItem.id);\n\t}\n\n\tonMoveDown = () => {\n\t\tthis.props.onMoveTopTenItemDown(this.props.topTenItem.id);\n\t}\n\n\trender() {\n\t\tlet showDescription = true;\n\t\tif (this.props.topTenItem.name === '') {\n\t\t\tshowDescription = false;\n\t\t} else if (this.state.isEditingName && store.getState().topTenItem.things[this.props.topTenItem.id] && store.getState().topTenItem.things[this.props.topTenItem.id].name === '') {\n\t\t\tshowDescription = false;\n\t\t}\n\n\t\tlet canCreateChildTopTenList = true; // should the \"create child topTenList\" button be visible?\n\n\t\tif (this.props.topTenItem.childTopTenList || // there is already a child topTenList\n\t\t\tthis.props.topTenItem.name === '' || // there is no topTenItem\n\t\t\tthis.state.isEditingName || // the topTenItem name is being edited\n\t\t\t!this.props.canEdit) { // the user can't edit this topTenList\n\t\t\tcanCreateChildTopTenList = false;\n\t\t}\n\n\t\tlet canViewChildTopTenList = false;\n\n\t\t// child topTenList exists and user can view it\n\t\tif (this.props.topTenItem.childTopTenList && permissions.canViewTopTenList(this.props.topTenItem.childTopTenList.id)) {\n\t\t\tcanViewChildTopTenList = true;\n\t\t}\n\n\t\tlet childTopTenList;\n\n\t\tif (canCreateChildTopTenList) {\n\t\t\tchildTopTenList = (<button className=\"btn btn-primary create-childtopTenList\" onClick={this.onCreateChildTopTenList}>Create child Top Ten list</button>);\t\n\t\t} else if (canViewChildTopTenList) {\n\t\t\tchildTopTenList = (\n\t\t\t\t<div className=\"child-topTenList\">\t\n\t\t\t\t\t<Link to={`/topTenList/${this.props.topTenItem.childTopTenList.id}`}>{this.props.topTenItem.childTopTenList.name} ></Link>\n\t\t\t\t</div>);\n\t\t}\n\n\t\tlet showUp = true;\n\t\tlet showDown = true;\n\n\t\tif (!this.props.canEdit ||\n\t\t\tthis.props.topTenItem.name === '' ||\n\t\t\t!showDescription) { // assume that showDescription means there is a saved name i.e. the topTenItem exists\n\t\t\tshowUp = false;\n\t\t\tshowDown = false;\n\t\t} else if (this.props.topTenItem.order === 1) {\n\t\t\tshowUp = false;\n\t\t} else if (this.props.topTenItem.order === MAX_TOPTENITEMS_IN_TOPTENLIST) {\n\t\t\tshowDown = false;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"topTenItem-container\">\n\t\t\t\t<div className=\"topTenItem-header\">\n\t\t\t\t\t<span className=\"order\">{this.props.topTenItem.order}:</span><EditableTextField\n\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\tname={`${this.props.topTenItem.order}_name`}\n\t\t\t\t\t\tlabel=\"Item name\"\n\t\t\t\t\t\tplaceholder=\"Click here to add an topTenItem\"\n\t\t\t\t\t\tdata-state={`${this.props.topTenItem.order}_name`}\n\t\t\t\t\t\tdata-entityid={this.props.topTenItem.id} // database id of the topTenItem\n\t\t\t\t\t\tid={`${this.props.topTenItem.order}_name`} // id of the html element\n\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\tisEditing={this.setIsEditingName}\n\t\t\t\t\t\tvalue={this.props.topTenItem.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{childTopTenList}\n\t\t\t\t{showDescription &&\n\t\t\t\t\t<div className=\"topTenItem-body\">\n\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\t\tname={`${this.props.topTenItem.order}_description`}\n\t\t\t\t\t\t\tplaceholder=\"Click here to add a description\"\n\t\t\t\t\t\t\tlabel=\"Item description\"\n\t\t\t\t\t\t\tdata-state={`${this.props.topTenItem.order}_description`}\n\t\t\t\t\t\t\tdata-entityid={this.props.topTenItem.id} // database id of the topTenItem\n\t\t\t\t\t\t\tid={`${this.props.topTenItem.order}_description`} // id of the html element\n\t\t\t\t\t\t\thandleInputChange={this.props.handleInputChange}\n\t\t\t\t\t\t\thandleNewValue={this.props.handleNewValue}\n\t\t\t\t\t\t\tvalue={this.props.topTenItem.description}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{showUp && <button className=\"btn btn-secondary move-up\" onClick={this.onMoveUp}>Up</button>\n\t\t\t\t}\n\t\t\t\t{showDown && <button className=\"btn btn-secondary move-down\" onClick={this.onMoveDown}>Down</button>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Item;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\n\nimport * as topTenItemsReducer from '../modules/topTenItem';\n\nimport { MAX_TOPTENITEMS_IN_TOPTENLIST } from '../constants';\nimport TopTenItem from './TopTenItem';\n\nclass TopTenItemsPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\n\t\t// set up the state to hold each topTenItem's name and description\n\t\t// coded by order\n\t\t// this is not elegant but keeps state flat\n\t\tfor (let i=1; i<= MAX_TOPTENITEMS_IN_TOPTENLIST; i++) {\n\t\t\tthis.state[`${i}_name`] = '';\n\t\t\tthis.state[`${i}_description`] = '';\n\t\t}\n\n\t\t// build the topTenItems\n\t\t// each topTenItem's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst topTenItems = this.props.topTenItems;\n\n\t\tObject.keys(topTenItems).forEach((key) => {\n\t\t\tif (topTenItems[key].order && topTenItems[key].order <= MAX_TOPTENITEMS_IN_TOPTENLIST) {\n\t\t\t\tconst order = topTenItems[key].order;\n\n\t\t\t\tthis.state[`${order}_id`] = topTenItems[key].id;\n\t\t\t\tthis.state[`${order}_name`] = topTenItems[key].name;\n\t\t\t\tthis.state[`${order}_description`] = topTenItems[key].description;\n\n\t\t\t\t// child topTenLists\n\t\t\t\tif (topTenItems[key].childTopTenList) {\n\t\t\t\t\tthis.state[`${order}_childTopTenList`] = topTenItems[key].childTopTenList;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tonMoveTopTenItemUp = (topTenItemId) => {\n\t\tthis.props.dispatch(topTenItemsReducer.moveTopTenItemUp({ topTenItemId }));\n\t}\n\n\tonMoveTopTenItemDown = (topTenItemId) => {\n\t\tthis.props.dispatch(topTenItemsReducer.moveTopTenItemDown({ topTenItemId }));\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tlet update = {};\n\t\tfor (let i=0; i<this.props.topTenItems.length; i++) {\n\t\t\tconst topTenItem = this.props.topTenItems[i];\n\n\t\t\t// first the topTenList is loaded and this just gives ids\n\t\t\t// only when the full data are loaded and getTopTenItemsForTopTenList recalculated do we find the childTopTenList\n\t\t\tif (prevProps.topTenItems[i].id !== this.props.topTenItems[i].id ||\n\t\t\t\tprevProps.topTenItems[i].childTopTenList !== this.props.topTenItems[i].childTopTenList) {\n\t\t\t\tconst order = topTenItem.order;\n\n\t\t\t\t// update topTenItem properties\n\t\t\t\tupdate[`${order}_id`] = topTenItem.id;\n\t\t\t\tupdate[`${order}_name`] = topTenItem.name;\n\t\t\t\tupdate[`${order}_description`] = topTenItem.description;\n\n\t\t\t\t// set child topTenList if exists\n\t\t\t\t// or set to null if it does not\n\t\t\t\tupdate[`${order}_childTopTenList`] = topTenItem.childTopTenList;\n\t\t\t}\n\t\t}\n\t\t// only setState if there is a change to make\n\t\t// otherwise it triggers endless updates\n\t\tif (Object.keys(update).length > 0) {\n\t\t\tthis.setState(update);\n\t\t}\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst topTenItemId = element.dataset.entityid;\n\n\t\t// the topTenItem's order and the field to update are coded in the 'state' data e.g. '1_name'\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(topTenItemsReducer.updateTopTenItem(topTenItemId, propertyName, value));\n\t}\n\n\ttoggleForm = () => {\n\t\tthis.setState({ 'showNewTopTenItemForm': !this.state.showNewTopTenItemForm });\n\t}\n\n\trenderTopTenItemsList() {\n\t\tlet elements = [];\n\t\tfor (let i=1; i<=MAX_TOPTENITEMS_IN_TOPTENLIST; i++) {\n\t\t\tconst name = this.state[`${i}_name`];\n\t\t\tconst canEdit = this.props.canEdit;\n\t\t\tif (name || canEdit) {\n\t\t\t\telements.push(\n\t\t\t\t\t<Row key={`topTenItem${i}`}>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<TopTenItem\n\t\t\t\t\t\t\t\tkey={`topTenItem${i}`}\n\t\t\t\t\t\t\t\ttopTenItem={{\n\t\t\t\t\t\t\t\t\t'id': this.state[`${i}_id`],\n\t\t\t\t\t\t\t\t\t'order': i,\n\t\t\t\t\t\t\t\t\t'name': name,\n\t\t\t\t\t\t\t\t\t'description': this.state[`${i}_description`],\n\t\t\t\t\t\t\t\t\t'childTopTenList': this.state[`${i}_childTopTenList`],\n\t\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\ttopTenList={this.props.topTenList}\n\t\t\t\t\t\t\t\tcanEdit={canEdit}\n\t\t\t\t\t\t\t\tonCreateChildTopTenList={this.props.onCreateChildTopTenList}\n\t\t\t\t\t\t\t\tonMoveTopTenItemUp={this.onMoveTopTenItemUp}\n\t\t\t\t\t\t\t\tonMoveTopTenItemDown={this.onMoveTopTenItemDown}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn elements;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"topTenItems-list\">\n\t\t\t\t{this.renderTopTenItemsList()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(TopTenItemsPage);\n","// a single topTenList to be displayed in the Organizer\n// can be expanded to show topTenItems\n// an topTenItem can be selected\n\nimport React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\n\nclass OrganizerList extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\t'showTopTenItems': props.showTopTenItems,\n\t\t};\n\n\t\tthis.onSelectTopTenItem = this.onSelectTopTenItem.bind(this);\n\t\tthis.onShowTopTenItems = this.onShowTopTenItems.bind(this);\n\t}\n\n\tonShowTopTenItems() {\n\t\tthis.setState({\n\t\t\t'showTopTenItems': !this.state.showTopTenItems,\n\t\t});\n\t}\n\n\tonSelectTopTenItem (e) {\n\t\tthis.props.onSelectTopTenItem({ 'topTenList': this.props.topTenList, 'order': e.target.dataset.order, 'childTopTenListId': e.target.dataset.childtoptenlistid });\n\t}\n\n\trenderTopTenItems() {\n\t\tconst selectedTopTenItemOrder = parseInt(this.props.selectedTopTenItemOrder); // element property is a string. Order should be a number.\n\t\tconst topTenListId = this.props.topTenList.id;\n\t\tconst selectedTopTenListId = this.props.selectedTopTenListId;\n\n\t\treturn (\n\t\t\t<div className=\"topTenItems\">\n\t\t\t\t{this.props.topTenItemOrganizerData[topTenListId].map((topTenItem) => { // eslint-disable-line array-callback-return\n\t\t\t\t\tconst isSelectedTopTenItem = ((topTenListId === selectedTopTenListId) && (topTenItem.order === selectedTopTenItemOrder));\n\n\t\t\t\t\tlet childTopTenListElm;\n\n\t\t\t\t\tif (topTenItem.childTopTenListId) {\n\t\t\t\t\t\tconst childTopTenList = this.props.topTenListOrganizerData.find((topTenList) => topTenList.id === topTenItem.childTopTenListId);\n\t\t\t\t\t\tchildTopTenListElm = (\n\t\t\t\t\t\t\t<span className=\"child-topTenList\">> {childTopTenList.name}</span>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (topTenItem.name) {\n\t\t\t\t\t\treturn (<div key={topTenItem.id} className={`topTenItem ${isSelectedTopTenItem ? 'selected' : ''}`}>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tonClick={this.onSelectTopTenItem}\n\t\t\t\t\t\t\t\tdata-order={topTenItem.order}\n\t\t\t\t\t\t\t\tdata-childtoptenlistid={topTenItem.childTopTenListId}\n\t\t\t\t\t\t\t><span className=\"order\">{topTenItem.order}:</span>{topTenItem.name}</span>{childTopTenListElm}\n\t\t\t\t\t\t</div>);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst name = this.props.topTenList.name;\n\t\t//console.log('render. Props', this.props);\n\n\t\tconst isSelectedTopTenList = (this.props.topTenList.id === this.props.selectedTopTenListId);\n\t\t//console.log('render isSelectedTopTenList', isSelectedTopTenList);\n\n\t\tlet showTopTenItemsButtonText = '+';\n\n\t\tif (this.state.showTopTenItems) {\n\t\t\tshowTopTenItemsButtonText = '-';\n\t\t}\n\n\t\treturn (\n\t\t\t<Row className={`organizer-list ${isSelectedTopTenList ? 'selected' : ''}`}>\n\t\t\t\t<Col>\n\t\t\t\t\t<button className=\"btn btn-light show-topTenItems\" onClick={this.onShowTopTenItems}>{showTopTenItemsButtonText}</button>\n\t\t\t\t\t<div className=\"name\">{name}</div>\n\t\t\t\t\t{this.state.showTopTenItems && this.renderTopTenItems()}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default OrganizerList;\n","// Displays the user's topTenLists and topTenItems\n// Allows the parent topTenItem of a topTenList to be changed\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'reactstrap';\nimport ReactDOM from 'react-dom';\n\nimport * as topTenListReducer from '../modules/topTenList';\n\nimport OrganizerList from './OrganizerList';\nimport './Organizer.scss';\n\nclass Organizer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t'selectedTopTenItemChildTopTenListId': null,\n\t\t};\n\n\t\tthis.onSelectParentTopTenItem = this.onSelectParentTopTenItem.bind(this);\n\t\tthis.onClickCancel = this.onClickCancel.bind(this);\n\t\tthis.onClickDone = this.onClickDone.bind(this);\n\t\tthis.onClickOrganize = this.onClickOrganize.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.resetOrganizer();\n\t}\n\n\tcomponentDidUpdate = (prevProps) => {\n\t\t// data for new topTenList have loaded\n\t\tif ((prevProps.topTenList.parent_topTenItem !== this.props.topTenList.parent_topTenItem) ||\n\t\t// navigated to new topTenList\n\t\t(prevProps.topTenListOrganizerData.length === 0 && this.props.topTenListOrganizerData.length !== 0)) {\n\t\t\tthis.resetOrganizer();\n\t\t}\n\t}\n\n\tresetOrganizer() {\n\t\tthis.setState({ // reset component\n\t\t\t'showOrganizer': false,\n\t\t\t'selectedTopTenItemOrder': this.selectedTopTenItemOrder(),\n\t\t\t'parentTopTenItemId': this.props.topTenList.parent_topTenItem,\n\t\t\t'parentTopTenListId': this.props.parentTopTenListId,\n\t\t});\n\t}\n\n\tonClickOrganize = () => {\n\t\tthis.setState({\n\t\t\t'showOrganizer': true,\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tconst DOMNode = ReactDOM.findDOMNode(this); // component parent node\n\t\t\tconst element = DOMNode.querySelector('.organizer-topTenList.selected');\n\t\t\tif (element) {\n\t\t\t\telement.scrollIntoView();\n\t\t\t}\n\t\t}, 100);\n\t}\n\n\tonClickCancel = () => {\n\t\tthis.resetOrganizer();\n\t}\n\n\tonClickDone = () => {\n\t\t// Don't allow the user to select a topTenItem from the current topTenList.\n\t\t// this shouldn't happen as the current topTenList is not displayed in the organizer.\n\t\tif (this.state.parentTopTenListId === this.props.topTenList.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.parentTopTenItemId) {\n\t\t\tif (confirm(`'${this.props.topTenList.name}' will become a top level topTenList. Are you sure you want to continue?`)) { // eslint-disable-line no-restricted-globals\n\t\t\t\tthis.setParentTopTenItem();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// if the new parent topTenItem already has a child topTenList\n\t\tif (this.state.selectedTopTenItemChildTopTenListId) {\n\t\t\tconst childTopTenList = this.props.topTenListOrganizerData.find((topTenList) => topTenList.id === this.state.selectedTopTenItemChildTopTenListId);\n\n\t\t\t// no change\n\t\t\tif (this.state.parentTopTenItemId === this.props.topTenList.parent_topTenItem) {\n\t\t\t\treturn;\n\t\t\t} else { // will disconnect the existing child topTenList\n\t\t\t\tif (confirm(`The child Top Ten list '${childTopTenList.name}' will become a top level list. Are you sure you want to continue?`)) { // eslint-disable-line no-restricted-globals\n\t\t\t\t\tthis.setParentTopTenItem();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setParentTopTenItem();\n\t}\n\n\tsetParentTopTenItem() {\n\t\tthis.props.dispatch(topTenListReducer.updateTopTenList(\n\t\t\tthis.props.topTenList.id,\n\t\t\t'parent_topTenItem_id',\n\t\t\tthis.state.parentTopTenItemId));\n\t\tthis.resetOrganizer();\n\t}\n\n\tonSelectParentTopTenItem = ({ topTenList, order, childTopTenListId }) => {\n\t\t// if the user clicks the selected topTenItem, deselect it\n\t\t// i.e. make this a top-level topTenList\n\t\tif (topTenList.id === this.state.parentTopTenListId && topTenList.topTenItem[order-1] === this.state.parentTopTenItemId) {\n\t\t\tthis.setState({\n\t\t\t\t'parentTopTenItemId': null,\n\t\t\t\t'parentTopTenListId': null,\n\t\t\t\t'selectedTopTenItemChildTopTenListId': null,\n\t\t\t\t'selectedTopTenItemOrder': null,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\t'parentTopTenItemId': topTenList.topTenItem[order-1],\n\t\t\t\t'parentTopTenListId': topTenList.id,\n\t\t\t\t'selectedTopTenItemChildTopTenListId': childTopTenListId,\n\t\t\t\t'selectedTopTenItemOrder': order,\n\t\t\t});\n\t\t}\n\t}\n\n\tselectedTopTenItemOrder() {\n\t\t// find the order of the parent topTenItem\n\t\tlet order; // there may not be a parent topTenItem, so there may not be a default selection\n\t\tif (this.props.parentTopTenListId) {\n\t\t\tlet parentTopTenItemId = this.props.topTenList.parent_topTenItem;\n\t\t\tconst parentTopTenList = this.props.topTenListOrganizerData.find(topTenList => topTenList.id === this.props.parentTopTenListId);\n\n\t\t\tlet parentTopTenListTopTenItems = parentTopTenList.topTenItem;\n\n\t\t\torder = parentTopTenListTopTenItems.indexOf(parentTopTenItemId);\n\n\t\t\tif (order !== -1) { // topTenItem is found\n\t\t\t\torder += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn order;\n\t}\n\n\trenderTopTenLists() {\n\t\treturn (\n\t\t\t<div className=\"topTenLists\">\n\t\t\t\t<div className=\"inner-tube\">\n\t\t\t\t\t<span>Select a new parent Top Ten item for this Top Ten list: </span>\n\t\t\t\t\t{this.props.topTenListOrganizerData.map(topTenList => {\n\t\t\t\t\t\tconst numberOfTopTenItems = this.props.topTenItemOrganizerData[topTenList.id].length;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// only show topTenLists with at least one topTenItem\n\t\t\t\t\t\t// and don't show the page topTenList - it can't be its own parent\n\t\t\t\t\t\tif (numberOfTopTenItems > 0 && (topTenList.id !== this.props.topTenList.id)) {\n\t\t\t\t\t\t\tconst showTopTenItems = (topTenList.id === this.state.parentTopTenListId);\n\n\t\t\t\t\t\t\treturn (<OrganizerList\n\t\t\t\t\t\t\t\ttopTenList={topTenList}\n\t\t\t\t\t\t\t\ttopTenListOrganizerData={this.props.topTenListOrganizerData}\n\t\t\t\t\t\t\t\ttopTenItemOrganizerData={this.props.topTenItemOrganizerData}\n\t\t\t\t\t\t\t\tkey={topTenList.id}\n\t\t\t\t\t\t\t\tselectedTopTenListId={this.state.parentTopTenListId}\n\t\t\t\t\t\t\t\tselectedTopTenItemOrder={this.state.selectedTopTenItemOrder}\n\t\t\t\t\t\t\t\tonSelectTopTenItem={this.onSelectParentTopTenItem}\n\t\t\t\t\t\t\t\tshowTopTenItems={showTopTenItems}\n\t\t\t\t\t\t\t/>);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn; // eslint-disable-line array-callback-return\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet controls;\n\n\t\tif (this.state.showOrganizer) {\n\t\t\tcontrols = (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<button className=\"btn btn-secondary\" onClick={this.onClickCancel}>Cancel</button>\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={this.onClickDone}>Done</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>);\n\t\t} else {\n\t\t\tcontrols = (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t<button className=\"btn btn-default organize\" onClick={this.onClickOrganize}>...</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={`organizer ${this.state.showOrganizer ? 'open' : ''}`}>\n\t\t\t\t{controls}\n\t\t\t\t{this.state.showOrganizer && this.renderTopTenLists()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect()(Organizer);\n","// Full detail view of a topTenList\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport SetTopTenListIsPublic from '../components/SetTopTenListIsPublic';\nimport EditableTextField from '../components/EditableTextField.js';\nimport TopTenItemsPage from '../components/TopTenItemsPage';\nimport Organizer from '../components/Organizer';\nimport Loading from '../components/Loading';\n\nimport * as topTenListReducer from '../modules/topTenList';\nimport * as topTenItemReducer from '../modules/topTenItem';\nimport * as permissions from '../modules/permissions';\nimport findObjectByProperty from '../modules/findObjectByProperty';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nimport './TopTenListDetail.scss';\n\n\nclass TopTenListDetails extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\t// load the topTenList and any parent / children\n\t\tthis.getTopTenListData = this.getTopTenListData.bind(this);\n\t\tconst id = this.getTopTenListData(props);\n\n\t\tthis.state = {\n\t\t\tid,\n\t\t\t'showOrganizer': false,\n\t\t};\n\n\t\tthis.onDeleteTopTenList = this.onDeleteTopTenList.bind(this);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.isLoading && !this.props.isLoading) {\n\t\t\t// just finished loading; need to check if user should view this topTenList\n\t\t\tconst canEditTopTenList = permissions.canEditTopTenList(this.state.id);\n\t\t\tconst canViewTopTenList = permissions.canViewTopTenList(this.state.id);\n\n\t\t\tif (!canViewTopTenList) {\n\t\t\t\tthis.props.history.push('/');\n\t\t\t}\n\n\t\t\tthis.getOrganizerData();\n\n\t\t\tthis.setState({\n\t\t\t\t'canView': canViewTopTenList,\n\t\t\t\t'canEdit': canEditTopTenList,\n\t\t\t});\n\n\t\t\tif(canViewTopTenList) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t'topTenList_name': this.props.topTenList.name,\n\t\t\t\t\t'topTenList_description': this.props.topTenList.description,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// user has navigated to a different topTenList\n\t\tif (prevProps.match.params.id !== this.props.match.params.id) {\n\t\t\tconst id = this.getTopTenListData(this.props);\n\t\t\tthis.setState({\n\t\t\t\tid,\n\t\t\t});\n\t\t}\n\n\t\t// user has just logged out\n\t\t// store needs to be repopulated\n\t\tif (prevProps.auth.isAuthenticated && !this.props.auth.isAuthenticated) {\n\t\t\tthis.props.dispatch(topTenListReducer.fetchTopTenListDetail(this.state.id));\n\t\t\tthis.props.dispatch(clearErrors());\n\t\t}\n\t}\n\n\tgetTopTenListData = (props) => {\n\t\tconst id = props.match.params.id;\n\n\t\tprops.dispatch(topTenListReducer.fetchTopTenListDetail(id));\n\t\tprops.dispatch(clearErrors());\n\t\treturn id;\n\t}\n\n\tgetOrganizerData = () => {\n\t\t// minimal data for all my topTenLists and topTenItems to allow parent topTenList to be changed.\n\t\t// can't do this until the topTenList has been loaded, to find the owner\n\t\tif (!this.props.topTenList) { // probably the user does not have permission to view this topTenList\n\t\t\treturn;\n\t\t}\n\t\tthis.props.dispatch(topTenListReducer.fetchOrganizerData(this.props.topTenList.created_by));\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\tonChangeIsPublic = ({ id, is_public }) => {\n\t\tthis.props.dispatch(topTenListReducer.setTopTenListIsPublic({ id, is_public }));\n\t}\n\n\tonDeleteTopTenList = () => {\n\t\tconst id = this.props.topTenList.id;\n\t\tconst name = this.props.topTenList.name;\n\n\t\tif (confirm(`Are you sure you want to delete the topTenList ${name}?`)) // eslint-disable-line no-restricted-globals\n\t\t{\n\t\t  this.props.dispatch(topTenListReducer.deleteTopTenList(id));\n\n\t\t  // if there is a visible parent, navigate there\n\t\t  if (this.props.parentTopTenList) {\n\t\t  \tif (permissions.canViewTopTenList(this.props.parentTopTenList.id)) {\n\t\t  \t\tthis.props.history.push(`/topTenList/${this.props.parentTopTenList.id}`);\n\t\t  \t\treturn;\n\t\t  \t}\n\t\t  }\n\n\t\t  // otherwise navigate home\n\t\t  this.props.history.push('/');\n\t\t}\n\t}\n\n\thandleInputChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.dataset.state]: e.target.value\n\t\t});\n\t}\n\n\thandleNewValue = (element) => {\n\t\tconst topTenListId = element.dataset.entityid;\n\n\t\t// the topTenList field to update is coded in the 'state' data e.g. 'topTenList_name'\n\t\t// we want to keep topTenItem name and topTenList name clearly separate\n\t\tconst identifiers = element.dataset.state.split('_');\n\t\tconst propertyName = identifiers[1];\n\t\tconst value = element.value;\n\n\t\tthis.props.dispatch(topTenListReducer.updateTopTenList(topTenListId, propertyName, value));\n\t}\n\n\tonCreateChildTopTenList = (topTenItem) => {\n\t\tthis.props.history.push(`/newtopTenList?parent-topTenItem-id=${topTenItem.id}&parent-topTenItem-name=${topTenItem.name}&parent-topTenList-name=${this.props.topTenList.name}&parent-topTenList-id=${this.props.topTenList.id}`);\n\t}\n\n\tonChangeIsPublic = ({ id, is_public }) => {\n\t\tthis.props.dispatch(topTenListReducer.setTopTenListIsPublic({ id, is_public }));\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\trenderPage() {\n\t\tif (!this.props.topTenList) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet showPrivacyWarning = false;\n\t\tlet privacyWarningText = '';\n\n\t\tif (this.state.canEdit && this.props.parentTopTenList) {\n\t\t\tif (this.props.topTenList.is_public && !this.props.parentTopTenList.is_public) {\n\t\t\t\tprivacyWarningText = 'This public topTenList has a private parent topTenList';\n\t\t\t\tshowPrivacyWarning = true;\n\t\t\t} else if (!this.props.topTenList.is_public && this.props.parentTopTenList.is_public) {\n\t\t\t\tprivacyWarningText = 'This private topTenList has a public parent topTenList';\n\t\t\t\tshowPrivacyWarning = true;\n\t\t\t}\n\t\t}\n\n\t\tlet breadcrumbs = <div className=\"breadcrumbs\">Top level list</div>;\n\n\t\tlet parentTopTenListId;\n\t\tif (this.props.parentTopTenList) {\n\t\t\tparentTopTenListId = this.props.parentTopTenList.id;\n\n\t\t\tbreadcrumbs = <div className=\"breadcrumbs\"><Link to={`/topTenList/${this.props.parentTopTenList.id}`}>{this.props.parentTopTenList.name}</Link> > {this.props.parentTopTenItem.name}</div>;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t{this.props.isLoading && <Loading />}\n\t\t\t\t{this.props.topTenList && !this.props.isLoading && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"topTenList-name\">\n\t\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\tname={'topTenList_name'}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a name for the list\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Top Ten item name\"\n\t\t\t\t\t\t\t\t\t\tdata-state={'topTenList_name'} // this.state property\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props.topTenList.id} // database id of the topTenItem\n\t\t\t\t\t\t\t\t\t\tid='topTenList_name' // id of the html element\n\t\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.topTenList_name}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{this.state.canEdit && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"topTenList-detail-controls\">\n\t\t\t\t\t\t\t\t\t\t\t<SetTopTenListIsPublic\n\t\t\t\t\t\t\t\t\t\t\t\ttopTenListId={this.props.topTenList.id}\n\t\t\t\t\t\t\t\t\t\t\t\tisPublic={this.props.topTenList.is_public}\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeIsPublic={this.onChangeIsPublic}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={this.onDeleteTopTenList}>X</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t{this.state.canEdit && this.props.topTenListOrganizerData.length > 1 &&\n\t\t\t\t\t\t\t\t\t<Organizer\n\t\t\t\t\t\t\t\t\t\ttopTenList={this.props.topTenList}\n\t\t\t\t\t\t\t\t\t\tparentTopTenListId={parentTopTenListId}\n\t\t\t\t\t\t\t\t\t\ttopTenListOrganizerData={this.props.topTenListOrganizerData}\n\t\t\t\t\t\t\t\t\t\ttopTenItemOrganizerData={this.props.topTenItemOrganizerData}\n\t\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\t\t\t{breadcrumbs}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t{showPrivacyWarning && (\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<div className=\"privacy-warning\">{privacyWarningText}</div>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col className=\"topTenList-description\">\n\t\t\t\t\t\t\t\t\t<EditableTextField\n\t\t\t\t\t\t\t\t\t\ttextarea={true}\n\t\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\t\tname={'topTenList_description'}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Click here to add a description for the topTenList\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\t\t\t\tdata-state={'topTenList_description'} // this.state property\n\t\t\t\t\t\t\t\t\t\tdata-entityid={this.props.topTenList.id} // database id of the topTenItem\n\t\t\t\t\t\t\t\t\t\tid='topTenList_description' // id of the html element\n\t\t\t\t\t\t\t\t\t\thandleInputChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\thandleNewValue={this.handleNewValue}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.topTenList_description}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t{this.props.thisTopTenListTopTenItems && (\n\t\t\t\t\t\t\t\t<TopTenItemsPage\n\t\t\t\t\t\t\t\t\ttopTenItems={this.props.thisTopTenListTopTenItems}\n\t\t\t\t\t\t\t\t\ttopTenList={this.props.topTenList.id}\n\t\t\t\t\t\t\t\t\tcanEdit={this.state.canEdit}\n\t\t\t\t\t\t\t\t\tonCreateChildTopTenList={this.onCreateChildTopTenList}\n\t\t\t\t\t\t\t\t\tonMoveTopTenItemUp={this.onMoveTopTenItemUp}\n\t\t\t\t\t\t\t\t\tonMoveTopTenItemDown={this.onMoveTopTenItemDown}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t///////////////\n\n\trender() {\n\t\tlet content;\n\n\t\tif (this.state.canView) {\n\t\t\tcontent = this.renderPage();\n\t\t} else {\n\t\t\tcontent = <p>Either this topTenList does not exist or you do not have permission to view it</p>;\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"topTenList-detail\">\n\t\t\t\t{ content }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTopTenListDetails.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'thisTopTenListTopTenItems': PropTypes.array.isRequired, // topTenItems belonging to this topTenList\n\t'topTenListOrganizerData': PropTypes.array.isRequired, // minimal data for all topTenLists owned by the same user.\n\t'topTenItemOrganizerData': PropTypes.object.isRequired, // minimal data for all topTenLists owned by the same user\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst topTenLists = state.topTenList.things; // details of the current topTenList, with parent and child topTenLists if they exist\n\n\t// first find the target topTenList\n\tconst topTenList = findObjectByProperty({ 'parentObject': topTenLists, 'property': 'id', 'value': ownProps.match.params.id });\n\n\tconst parentTopTenItemAndTopTenList = topTenListReducer.getParentTopTenItemAndTopTenList(state)(topTenList);\n\n\treturn ({\n\t\t'auth': state.auth,\n\t\t'errors': state.errors,\n\t\t'isLoading': state.topTenList.isLoading,\n\t\t'topTenList': topTenList,\n\t\t'thisTopTenListTopTenItems': topTenListReducer.getTopTenItemsForTopTenList(state)(topTenList),\n\t\t'parentTopTenList': parentTopTenItemAndTopTenList.parentTopTenList,\n\t\t'parentTopTenItem': parentTopTenItemAndTopTenList.parentTopTenItem,\n\t\t'topTenListOrganizerData': topTenListReducer.getSortedOrganizerTopTenLists(state), // array containing limited topTenList info: id, name, topTenItem (array of child topTenItems), parent_topTenItem\n\t\t'topTenItemOrganizerData': topTenItemReducer.groupedTopTenItems(state), // object. limited topTenItem info: id, name, topTenList_id\n\t});\n};\n\nexport default connect(mapStateToProps)(TopTenListDetails);\n","// Account\n// user account settings, change password link\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport FlashMessage from '../components/FlashMessage';\nimport Loading from '../components/Loading';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\n\nclass Account extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\n\t\tthis.sendConfirmationEmail = this.sendConfirmationEmail.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.confirmEmailNotSent());\n\t}\n\n\tsendConfirmationEmail() {\n\t\tthis.props.dispatch(auth.sendConfirmationEmail());\n\t}\n\n\trender() {\n\t\tconst emailVerified = this.props.auth.user.emailVerified;\n\t\tconst email_status = emailVerified ? 'verified': 'unverified';\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{!isEmpty(this.props.errors) && (<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>)}\n\t\t\t\t<Container>\n\t\t\t\t\t{this.props.isLoading && <Loading />}\n\t\t\t\t\t<h2>My account</h2>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div>Username: {this.props.auth.user.username}</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Link to=\"/changepassword\">Change password</Link>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div>Email address: {this.props.auth.user.email}</div>\n\t\t\t\t\t\t\t<div>Status: {email_status}</div>\n\t\t\t\t\t\t\t{!emailVerified &&\t<button type=\"button\" className=\"btn btn-primary\"onClick={this.sendConfirmationEmail}>\n\t\t\t\t\t\t\t\t\tResend confirmation email\n\t\t\t\t\t\t\t</button>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t{this.props.auth.confirmEmailSent && (<div className=\"valid-feedback\">A verification email has been sent to {this.props.auth.user.email}. If you do not receive the email within a few minutes, please check your Junk or Spam folder.</div>)}\n\t\t\t\t\t{this.props.auth.confirmEmailAlreadyVerified && (<div className=\"valid-feedback\">The email address {this.props.auth.user.email} has already been verified.</div>)}\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nAccount.propTypes = {\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired,\n\t'isLoading': PropTypes.bool.isRequired,\n\t'sendConfirmationEmail': PropTypes.func.isRequired,\n\t'confirmEmailNotSent': PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'isLoading': state.topTenList.isLoading,\n\t'sendConfirmationEmail': auth.sendConfirmationEmail,\n\t'confirmEmailNotSent': auth.confirmEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(Account);\n","// ForgotPassword.js\n// request an email with a link to reset the password\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as auth from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\nimport FlashMessage from '../components/FlashMessage';\nimport formatErrorMessages from '../modules/formatErrorMessages';\nimport isEmpty from '../modules/isEmpty';\nimport { clearErrors } from '../modules/errors';\n\nclass ForgotPassword extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'email': '',\n\t\t\t'errors': {}\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tprops.dispatch(clearErrors());\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t\tthis.props.dispatch(auth.forgotPasswordEmailNotSent());\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\tonCloseFlashMessage = () => {\n\t\tthis.props.dispatch(clearErrors());\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tconst user = {\n\t\t\t'email': this.state.email,\n\t\t};\n\t\tthis.props.dispatch(auth.forgotPassword(user));\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t{!isEmpty(this.props.errors) &&\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<FlashMessage\n\t\t\t\t\t\t\tmessage={formatErrorMessages(this.props.errors)}\n\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\tonClick={this.onCloseFlashMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>}\n\t\t\t\t<h2>Forgot your password?</h2>\n\t\t\t\t<p>Enter your email address. A reset password link will be emailed to you.</p>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email address</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t\tvalue={ this.state.email }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tSend me a password reset email\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.props.errors.email && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.email}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ValidatedForm>\n\t\t\t\t{this.props.auth.forgotPasswordEmailSent && (<div className=\"valid-feedback\">A password reset email has been sent to {this.state.email}. If you don't see it within a few minutes, please check your junk mail folder.</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nForgotPassword.propTypes = {\n\t'forgotPassword': PropTypes.func.isRequired,\n\t'forgotPasswordEmailNotSent': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth,\n\t'errors': state.errors,\n\t'forgotPassword': auth.forgotPassword,\n\t'forgotPasswordEmailNotSent': auth.forgotPasswordEmailNotSent,\n});\n\nexport default connect(mapStateToProps)(ForgotPassword);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { changePassword, passwordNotChanged } from '../modules/auth';\nimport { Container, Row, Col, Label, Input } from 'reactstrap';\nimport ValidatedForm from './ValidatedForm.js';\n\nclass ChangePassword extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'old_password': '',\n\t\t\t'new_password': '',\n\t\t\t'new_password_confirm': '',\n\t\t};\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleInputChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst data = {\n\t\t\t'old_password': this.state.old_password,\n\t\t\t'new_password1': this.state.new_password,\n\t\t\t'new_password2': this.state.new_password_confirm\n\t\t};\n\n\t\tthis.props.changePassword(data, this.props.history);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif(!nextProps.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/'); // if not logged in, redirect to Home\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(!this.props.auth.isAuthenticated) {\n\t\t\tthis.props.history.push('/');\n\t\t}\n\t}\n\n\t///////////////\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Change your password</h2>\n\t\t\t\t<ValidatedForm onSubmit={ this.handleSubmit } inputsmustmatch={ {\n\t\t\t\t\t'input1': 'new_password',\n\t\t\t\t\t'input2': 'new_password_confirm',\n\t\t\t\t\t'message': 'New passwords must match',\n\t\t\t\t} }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"old_password\">Old password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"old_password\"\n\t\t\t\t\t\t\t\t\tid=\"old_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.old_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your old password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password\">New password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password\"\n\t\t\t\t\t\t\t\t\tid=\"new_password\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<Label for=\"new_password_confirm\">Confirm your new password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\tid=\"new_password_confirm\"\n\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\tminLength={8}\n\t\t\t\t\t\t\t\t\tpattern=\".*[^0-9].*\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.new_password_confirm }\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\t\tonChange={ this.handleInputChange }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='invalid-feedback' />\n\t\t\t\t\t\t\t\t<small className='form-text text-muted'><ul>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be too similar to your other personal information.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password must contain at least 8 characters.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be a commonly used password.</li>\n\t\t\t\t\t\t\t\t\t<li>Your password can't be entirely numbers.</li>\n\t\t\t\t\t\t\t\t</ul></small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\tChange password now\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t        <Row>\n\t\t\t\t\t\t<Col md=\"9\" lg=\"6\">\n\t\t\t\t\t\t\t{this.props.errors.changePassword && <div className=\"invalid-feedback\" style={{ 'display': 'block' }}>{this.props.errors.changePassword}</div>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t      </ValidatedForm>\n\t      {this.props.auth.changePasswordComplete && (<div className=\"valid-feedback\">Your new password has been saved</div>)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nChangePassword.propTypes = {\n\t'changePassword': PropTypes.func.isRequired,\n\t'passwordNotChanged': PropTypes.func.isRequired,\n\t'auth': PropTypes.object.isRequired,\n\t'errors': PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t'auth': state.auth,\n\t'errors': state.errors\n});\n\nexport default connect(mapStateToProps,{ changePassword, passwordNotChanged })(withRouter(ChangePassword));\n","// Shown after user successfully verifies email address\n\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { logoutUser } from '../modules/auth';\n\nclass Verified extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t'errors': {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onLogout();\n\t}\n\n\tonLogout(e) {\n\t\t// just in case a different user is logged in\n\t\t// to avoid confusion and force new login\n\t\tif (this.props.auth.isAuthenticated) {\n\t\t\tthis.props.logoutUser(this.props.history);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<h2>Your email address has been verified</h2>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Link to=\"/login\" className=\"nav-link\">Login</Link>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nVerified.propTypes = {\n\t'logoutUser': PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\t'auth': state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Verified));\n","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport { setCurrentUser, getUserInfo, logoutUser, getAuthToken } from '../modules/auth';\n\nimport Navbar from '../components/Navbar';\nimport Register from '../components/Register';\nimport Welcome from '../components/Welcome';\nimport Login from '../components/Login';\nimport Home from '../containers/Home';\nimport CreateTopTenList from '../containers/CreateTopTenList';\nimport TopTenListDetails from '../containers/TopTenListDetail';\nimport Account from '../components/Account';\nimport ForgotPassword from '../components/ForgotPassword';\nimport ChangePassword from '../components/ChangePassword';\nimport Verified from '../components/Verified';\n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n// note that the Django template pages reset password loads the bootstrap css from static/bootstrap\n\n// check if user is already logged in\nif(getAuthToken()) {\n\tstore.dispatch(setCurrentUser(localStorage.mytoptensJwtToken));\n\tstore.dispatch(getUserInfo());\n\n\tconst currentTime = Date.now() / 1000;\n\tif(localStorage.mytoptensJwtToken.exp < currentTime) {\n\t\tstore.dispatch(logoutUser());\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\t\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={ Home } />\n\t\t\t\t\t\t\t<Route exact path=\"/newtopTenList\" component={ CreateTopTenList } />\n\t\t\t\t\t\t\t<Route exact path=\"/topTenList/:id\" component={ TopTenListDetails } />\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={ Register } />\n\t\t\t\t\t\t\t<Route exact path=\"/welcome\" component={ Welcome } />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={ Login } />\n\t\t\t\t\t\t\t<Route exact path=\"/forgotpassword\" component={ ForgotPassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/account\" component={ Account } />\n\t\t\t\t\t\t\t<Route exact path=\"/changepassword\" component={ ChangePassword } />\n\t\t\t\t\t\t\t<Route exact path=\"/verified\" component={ Verified } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst renderApp = () => {\n\tReactDOM.render(\n\t\t<App />, document.getElementById('root')\n\t);\n};\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n\tmodule.hot.accept('./containers/App', renderApp);\n}\n\nrenderApp();\n\n"],"sourceRoot":""}